

18500777133@sina.cn

/*************
export LANG=en_US.UTF-8
echo  1 |passwd  --stdin  root

# systemctl  stop   NetworkManager
# yum  -y   remove  NetworkManager-*  firewalld-*  python-firewall 
# sed  -i  "7c SELINUX=disabled"  /etc/selinux/config
# systemctl   restart  network
*****/
 
cip,dip,vip  全部是公网, 运营收费额较高

DIP是调度器与后端服务器通信的IP地址(VIP必须配置在虚拟接口)
DR(直接路由)

  eth0   --- CIP:  192.168.0.10

  eth0   --- DIP:  192.168.0.11
 服务器VIP eth0:0 --- VIP:  192.168.0.21/24

  eth0   --- DIP:  192.168.0.15
 服务器VIP eth0:0 --- VIP:  192.168.0.21/24

  eth0   --- RIP1: 192.168.0.12
  lo:0   --- VIP:  192.168.0.21/32

  eth0   --- RIP2: 192.168.0.13
  lo:0   --- VIP:  192.168.0.21/32

  eth0   --- RIP3: 192.168.0.14
  lo:0   --- VIP:  192.168.0.21/32


[root@room9pc01 ~]# ssh  -o StrictHostKeyChecking=no  192.168.0.15
............
[root@V15 ~]# vim  /etc/yum.repos.d/local.repo 
[root@V15 ~]# cat  /etc/yum.repos.d/local.repo
[rhel7.4]
name=rhel-server-7.4-x86_64-dvd.iso
baseurl=ftp://192.168.0.254/rhel7
enabled=1
gpgcheck=0
[root@V15 ~]# yum clean  all >/dev/null && yum repolist |tail -3
源标识                    源名称                                           状态
rhel7.4                   rhel-server-7.4-x86_64-dvd.iso                   4,986
repolist: 4,986
[root@V15 ~]#  route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
................

------------ 首先在调度器 LVS1---V11 和LVS2 --V15 上开启路由转发的功能
-----------------  确认调度器的路由转发功能 ------
[root@V15 ~]#   cat  /proc/sys/net/ipv4/ip_forward
1

[root@V11 ~]# sysctl  -a |grep net.ipv4.ip_forward
net.ipv4.ip_forward = 1
.........

[root@V15 ~]# yum  -y  install  keepalived   nmap |tail  -3
..........
[root@V15 ~]# rpm  -qa |egrep "keepalived|nmap"
keepalived-1.3.5-1.el7.x86_64
nmap-6.40-7.el7.x86_64
nmap-ncat-6.40-7.el7.x86_64

/*************  配置proxy2主机的网络参数(不配置VIP,由keepalived自动配置) **********

[root@V15 ~]#  cp   /etc/sysconfig/network-scripts/ifcfg-eth0  /etc/sysconfig/network-scripts/ifcfg-eth0:0
[root@V15 ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0:0
[root@V15 ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0:0
NAME="eth0:0"
DEVICE="eth0:0"
ONBOOT=yes
NM_CONTROLLED="no"
TYPE=Ethernet
IPV6INIT=no
IPV4_FAILURE_FATAL="no"
BOOTPROTO="static"
IPADDR="192.168.0.21"
NETMASK="255.255.255.0"
GATEWAY="192.168.0.254"
[root@V15 ~]# mv   /etc/sysconfig/network-scripts/ifcfg-eth0:0  ./

[root@V15 ~]# systemctl  restart  network

[root@V15 ~]# ifconfig  eth1  down
[root@V15 ~]# ifdown    eth2
[root@V15 ~]# ifconfig  |grep  -A1  flags=
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.15  netmask 255.255.255.0  broadcast 192.168.0.255
--
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
--
......
[root@V15 ~]# yum  -y install  ipvsadm |tail -2

完毕！
[root@V15 ~]# vim  /etc/sysconfig/ipvsadm-config 
[root@V15 ~]# egrep  -nv "^#|^$"  /etc/sysconfig/ipvsadm-config
6:IPVS_MODULES_UNLOAD="yes"
12:IPVS_SAVE_ON_STOP="yes"
18:IPVS_SAVE_ON_RESTART="yes"
23:IPVS_STATUS_NUMERIC="yes"

[root@V15 ~]# touch  /etc/sysconfig/ipvsadm
[root@V15 ~]# ll /etc/sysconfig/ipvsadm
-rw-r--r-- 1 root root 0 3月  13 20:43 /etc/sysconfig/ipvsadm

[root@V15 ~]# systemctl  start   ipvsadm  && systemctl  enable  ipvsadm

[root@V15 ~]# cp /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak

[root@V15 ~]# systemctl  enable  keepalived.service 

Created symlink from /etc/systemd/system/multi-user.target.wants/keepalived.service to /usr/lib/systemd/system/keepalived.service.

[root@V15 ~]# vim   /etc/keepalived/keepalived.conf
[root@V15 ~]# cat  -n  /etc/keepalived/keepalived.conf
     1	! Configuration File for keepalived
     2	
     3	global_defs {     # 全局设置
     4	   notification_email {    # 设置报警邮件地址
     5	     acassen@firewall.loc
     6	     failover@firewall.loc
     7	     sysadmin@firewall.loc
     8	   }
     9	   notification_email_from Alexandre.Cassen@firewall.loc  #设置发件人
    10	   smtp_server 192.168.200.1   #定义邮件服务器
    11	   smtp_connect_timeout 30
    12	   router_id LVS_V15      # 设置路由ID号,表示该台服务的ID
    13	   vrrp_skip_check_adv_addr
    14	#   vrrp_strict        #这里如果不注释,会报错
    15	   vrrp_garp_interval 0
    16	   vrrp_gna_interval 0
    17	}
    18	
    19	vrrp_instance LVSha  {    # vrrp 实例(虚拟路由器冗余协议)
    20	    state BACKUP      #从服务器为BACKUP
    21	    interface eth0    #定义网络接口
    22	    virtual_router_id 51   ## master和backup的id一致
    23	    priority 100      ##优先级比master 低些<150
    24	    advert_int 1    # # master和backup之间的检测时间
    25	    authentication {
    26	        auth_type PASS
    27	        auth_pass 1111   #主辅服务器密码必须一致
    28	    }
    29	    virtual_ipaddress {
    30	        192.168.0.21      # 设置虚拟VIP
    31	    }
    32	}
    33	
    34	virtual_server 192.168.0.21 80 { # 设置虚拟服务器，ip端口
    35	    delay_loop 6     # 设置运行情况检查时间，单位是秒
    36	    lb_algo rr      # 负载算法，这里是rr表示轮询
    37	    lb_kind DR          # LVS工作机制，这里是DR模式
    38	#    persistence_timeout 50   #会话保持时间，单位是秒，对动态网页有帮助
    39	    protocol TCP
    40	    connect_timeout 3   # 连接超时时间
    41	    nb_get_retry 3       # 表示重试次数
    42	    delay_before_retry 3  # 表示重试间隔
    43	    real_server 192.168.0.12  80 {  #设定真实服务器地址以及端口
    44	        weight 1    # 设置权重，数字越低，调度的比例越小
    45	        HTTP_GET {
    46	            url {
    47	              path    /    # 检测的网页路径 
    48	              digest c2e7b1048523a6fc9a1a78d5fd783605
                                   # 采用genhash命令获取web服务url的校验码
                                 ##http://192.168.0.12/ 的digest值
    49	            }          
    50	        }
    51	    }
    52	    real_server 192.168.0.13  80 {
    53	        weight 1
    54	        HTTP_GET {
    55	            url {
    56	              path    /
    57	              digest  e7b87c254505fecdedd3545af2160950
    58	            }
    59	         }
    60	    }
    61	    real_server 192.168.0.14  80 {
    62	        weight 1
    63	        HTTP_GET {
    64	            url {
    65	              path    /
    66	              digest  09c990685febab223b6dafd74de1f7ec
    67	            }
    68	         }
    69	    }
    70	}    
[root@V15 ~]# genhash  -s  192.168.0.12  -p 80  -u  /
MD5SUM = c2e7b1048523a6fc9a1a78d5fd783605

[root@V15 ~]# genhash  -s  192.168.0.13  -p 80  -u  /
MD5SUM = e7b87c254505fecdedd3545af2160950

[root@V15 ~]# genhash  -s  192.168.0.14  -p 80  -u  /
MD5SUM = 09c990685febab223b6dafd74de1f7ec

[root@V15 ~]# systemctl restart keepalived
[root@V15 ~]# echo  $?
0
[root@V15 ~]# systemctl  is-enabled  keepalived
enabled

[root@V15 ~]# grep -n Keepalived_healthcheckers  /var/log/messages 
6579:Mar 14 18:52:00 V15 Keepalived_healthcheckers[7312]: Opening file '/etc/keepalived/keepalived.conf'.
6580:Mar 14 18:52:00 V15 Keepalived_healthcheckers[7312]: Unknown keyword 'connect_timeout'


[root@V15 ~]# grep -n  "VIP"  /var/log/messages 
6594:Mar 14 18:52:00 V15 Keepalived_vrrp[7313]: VRRP_Instance(LVSha) removing protocol VIPs.


[root@V15 ~]# grep -n  "BACKUP STATE"  /var/log/messages 
6596:Mar 14 18:52:00 V15 Keepalived_vrrp[7313]: VRRP_Instance(LVSha) Entering BACKUP STATE

[root@V15 ~]# ifconfig |grep  -A1  flags=
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.15  netmask 255.255.255.0  broadcast 192.168.0.255
--
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0



[root@V11 ~]# ifconfig |grep  -A1  flags=
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.11  netmask 255.255.255.0  broadcast 192.168.0.255
--
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
..................
[root@V11 ~]# systemctl  stop  keepalived



[root@V15 ~]# grep -n  "MASTER STATE"  /var/log/messages 
6602:Mar 14 19:06:13 V15 Keepalived_vrrp[7313]: VRRP_Instance(LVSha) Transition to MASTER STATE
6603:Mar 14 19:06:14 V15 Keepalived_vrrp[7313]: VRRP_Instance(LVSha) Entering MASTER STATE




















[root@V11 ~]#  route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
................
------------ 首先在调度器 LVS1---V11 和LVS2 --V15 上开启路由转发的功能
-----------------  确认调度器的路由转发功能 ------
[root@V11 ~]#  cat  /proc/sys/net/ipv4/ip_forward
1
[root@V11 ~]# sysctl  -a |grep net.ipv4.ip_forward
net.ipv4.ip_forward = 1
.........

[root@V11 ~]# yum  -y  install  keepalived |tail  -3
  net-snmp-agent-libs.x86_64 1:5.7.2-28.el7                                     

完毕！
[root@V11 ~]# yum  -y  install  nmap |tail  -3
  nmap.x86_64 2:6.40-7.el7                                                      

完毕！
[root@V11 ~]#  rpm  -qa |egrep "keepalived|nmap"
nmap-6.40-7.el7.x86_64
keepalived-1.3.5-1.el7.x86_64
nmap-ncat-6.40-7.el7.x86_64

------------- 需要先安装yum install libnl* popt* -y ----
[root@V11 ~]# rpm  -qa |egrep  "libnl|popt"
libnl3-3.2.28-4.el7.x86_64
popt-1.13-16.el7.x86_64
libnl3-cli-3.2.28-4.el7.x86_64
libnl-1.1.4-3.el7.x86_64

[root@V11 ~]# rpm  -q  ipvsadm 
ipvsadm-1.27-7.el7.x86_64
[root@V11 ~]# man      ipvsadm

[root@V11 ~]# grep  -Env  "^#|^$"   /etc/sysconfig/ipvsadm-config 
6:IPVS_MODULES_UNLOAD="yes"     # 模块卸载
12:IPVS_SAVE_ON_STOP="yes"      #  在 ...停止时保存
18:IPVS_SAVE_ON_RESTART="yes"   #  IPVS_重新启动时保存
23:IPVS_STATUS_NUMERIC="yes"    #  数字状态


[root@V11 ~]# ls  /etc/sysconfig/ipvsadm*
/etc/sysconfig/ipvsadm  /etc/sysconfig/ipvsadm-config

[root@V11 ~]# ipvsadm   -Z

[root@V11 ~]# ipvsadm   -Ln  --stats
IP Virtual Server version 1.2.1 (size=4096)
Prot LocalAddress:Port               Conns   InPkts  OutPkts  InBytes OutBytes
  -> RemoteAddress:Port
TCP  192.168.0.21:80                     0        0        0        0        0
  -> 192.168.0.12:80                     0        0        0        0        0
  -> 192.168.0.13:80                     0        0        0        0        0
  -> 192.168.0.14:80                     0        0        0        0        0

[root@V11 ~]# ipvsadm  -C

[root@V11 ~]# ipvsadm-save  -n >  /etc/sysconfig/ipvsadm

[root@V11 ~]# cat  /etc/sysconfig/ipvsadm

[root@V11 ~]# ipvsadm   -Ln 
IP Virtual Server version 1.2.1 (size=4096)
Prot LocalAddress:Port Scheduler Flags
  -> RemoteAddress:Port           Forward Weight ActiveConn InActConn


/****************   配置proxy1主机的网络参数(不配置VIP,由keepalvied自动配置)   **************

[root@V11 ~]# cp   /etc/sysconfig/network-scripts/ifcfg-eth0  /etc/sysconfig/network-scripts/ifcfg-eth0:0
----------------------------  永久配置 vip  eth0:0 ------------------
---------------------------  配置 vip  eth0:0  192.168.0.21 -----------------
  eth0   --- DIP:  192.168.0.11
  eth0:0 --- VIP:  192.168.0.21/24
[root@V11 ~]# vim   /etc/sysconfig/network-scripts/ifcfg-eth0:0
[root@V11 ~]# cat  /etc/sysconfig/network-scripts/ifcfg-eth0:0
NAME="eth0:0"
DEVICE="eth0:0"  #网络虚拟接口eth0:0 
ONBOOT=yes       #启动的时候激活 
NM_CONTROLLED="no"
TYPE=Ethernet
IPV6INIT=no
IPV4_FAILURE_FATAL="no" #设置 禁止系统 报告 ipv4,ipv6绑定激活 错误
BOOTPROTO="static"     #使用静态ip地址 
IPADDR="192.168.0.21"
NETMASK="255.255.255.0"  #子网掩码 
GATEWAY="192.168.0.254"

[root@V11 ~]# ls   /etc/sysconfig/network-scripts/ifcfg-eth0*
/etc/sysconfig/network-scripts/ifcfg-eth0  /etc/sysconfig/network-scripts/ifcfg-eth0:0

[root@V11 ~]# mv   /etc/sysconfig/network-scripts/ifcfg-eth0:0  ./

[root@V11 ~]# ls   /etc/sysconfig/network-scripts/ifcfg-eth0*
/etc/sysconfig/network-scripts/ifcfg-eth0

[root@V11 ~]# systemctl  restart  network

[root@V11 ~]#  ifconfig  eth1  down
[root@V11 ~]#  ifconfig  eth2  down

[root@V11 ~]# ifconfig  |grep  -A1  flags=
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.11  netmask 255.255.255.0  broadcast 192.168.0.255
--
lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0


[root@V11 ~]# cp /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak

[root@V11 ~]# systemctl  enable  keepalived

[root@V11 ~]# type genhash
genhash 是 /usr/bin/genhash
   -------------------------           用genhash来获取web服务 url的校验码
[root@V11 ~]# genhash  -s  192.168.0.12  -p 80  -u  /
MD5SUM = c2e7b1048523a6fc9a1a78d5fd783605


[root@V11 ~]# vim   /etc/keepalived/keepalived.conf

 12    router_id LVS_V11    # 设置路由ID号,表示该台服务的ID
 14 #   vrrp_strict      #这里如果不注释,会报错

       # vrrp 实例VRRP(virtual router redundant protocol 虚拟路由器冗余协议)
 19 vrrp_instance LVSha {   #vrrp设置名称 LVSha
 20     state MASTER      #master状态 主服务器为MASTER
 21     interface eth0        //定义网络接口
 22     virtual_router_id 51   # master和backup的id一致,主辅VRID号必须一致
 23     priority 150           # 服务器优先级150
 24     advert_int 1     # # master和backup之间的检测时间
 25     authentication {
 26         auth_type PASS
 27         auth_pass 1111   #主辅服务器密码必须一致
 28     }
 29     virtual_ipaddress {
 30         192.168.0.21        # 设置虚拟VIP
 31     }
 32 }
 33     
 34 virtual_server 192.168.0.21 80 {  # 设置虚拟服务器，ip端口
 35     delay_loop 6       # 设置运行情况检查时间，单位是秒
 36     lb_algo rr        # 负载算法，这里是rr表示轮询
 37     lb_kind DR          # LVS工作机制，这里是DR模式
 38 #    persistence_timeout 50   # 会话保持时间，单位是秒，这个选项对动态网页非常有帮助，
                                       为集群系统中的session共享提供了一个很好的解决方案，
              有了这个会话保持功能，用户的请求会被一直分发到某个服务节点，直到超过这个会话的保持时间，
              需要注意的是，
                 这个会话保持时间是最大无响应的超时时间，或者说,
                 用户在动态页面50秒以内没有执行任何操作，那么接下来的操作会重新调度到另一个节点上。
                 如果一直在操作则不会影响
 39     protocol TCP 
 40     connect_timeout 3     # 连接超时时间
 41     nb_get_retry 3        # 表示重试次数
 42     delay_before_retry 3   # 表示重试间隔
 43     real_server 192.168.0.12  80 {   #设定真实服务器地址以及端口
 44         weight 1    # 设置权重，数字越低，调度的比例越小
 45         HTTP_GET {    #以http模式检查该服务器监控状态keepalived健康检查 
 46             url {
 47               path   /     # 检测的网页路径              
 48               digest c2e7b1048523a6fc9a1a78d5fd783605  # 采用genhash命令获取web服务url的校验码
                            ##http://192.168.0.12/ 的digest值
 49             }
 50         }
 51     }
 52     real_server 192.168.0.13  80 {
 53         weight 1
 54         HTTP_GET {
 55             url {
 56               path    /
 57               digest  e7b87c254505fecdedd3545af2160950  #获取web服务url的校验码
                                    ##http://192.168.0.13/ 的digest值
 58             }
 59          }
 60     }
 61     real_server 192.168.0.14  80 {
 62         weight 1
 63         HTTP_GET {
 64             url {
 65               path    /
 66               digest  09c990685febab223b6dafd74de1f7ec  #获取web服务url的校验码
                                 ##http://192.168.0.14/ 的digest值
 67             }
 68          }
 69     }
 70 }

[root@V11 ~]# genhash  -s  192.168.0.12  -p 80  -u  /
MD5SUM = c2e7b1048523a6fc9a1a78d5fd783605

[root@V11 ~]# genhash  -s  192.168.0.13  -p 80  -u  /
MD5SUM = e7b87c254505fecdedd3545af2160950

[root@V11 ~]# genhash  -s  192.168.0.14  -p 80  -u  /
MD5SUM = 09c990685febab223b6dafd74de1f7ec

[root@V11 ~]# cat  -n   /etc/keepalived/keepalived.conf
     1	! Configuration File for keepalived
     2	
     3	global_defs {     # 全局设置
     4	   notification_email {    # 设置报警邮件地址
     5	     acassen@firewall.loc
     6	     failover@firewall.loc
     7	     sysadmin@firewall.loc
     8	   }                                              # 设置邮件的发送地址
     9	   notification_email_from Alexandre.Cassen@firewall.loc
    10	   smtp_server 192.168.200.1
    11	   smtp_connect_timeout 30
    12	   router_id LVS_V11
    13	   vrrp_skip_check_adv_addr
    14	#   vrrp_strict
    15	   vrrp_garp_interval 0
    16	   vrrp_gna_interval 0
    17	}
    18	
    19	vrrp_instance LVSha {    # vrrp 实例(虚拟路由器冗余协议)
    20	    state MASTER
    21	    interface eth0
    22	    virtual_router_id 51
    23	    priority 150
    24	    advert_int 1
    25	    authentication {
    26	        auth_type PASS
    27	        auth_pass 1111
    28	    }
    29	    virtual_ipaddress {
    30	        192.168.0.21
    31	    }
    32	}
    33	
    34	virtual_server 192.168.0.21 80 {
    35	    delay_loop 6
    36	    lb_algo rr
    37	    lb_kind DR
    38	#    persistence_timeout 50
    39	    protocol TCP
    40	    connect_timeout 3
    41	    nb_get_retry 3
    42	    delay_before_retry 3
    43	    real_server 192.168.0.12  80 {
    44	        weight 1
    45	        HTTP_GET {
    46	            url {
    47	              path    /
    48	              digest c2e7b1048523a6fc9a1a78d5fd783605
    49	            }          
    50	        }
    51	    }
    52	    real_server 192.168.0.13  80 {
    53	        weight 1
    54	        HTTP_GET {
    55	            url {
    56	              path    /
    57	              digest  e7b87c254505fecdedd3545af2160950
    58	            }
    59	         }
    60	    }
    61	    real_server 192.168.0.14  80 {
    62	        weight 1
    63	        HTTP_GET {
    64	            url {
    65	              path    /
    66	              digest  09c990685febab223b6dafd74de1f7ec
    67	            }
    68	         }
    69	    }
    70	}
[root@V11 ~]#   在master服务器上启动  --------------------------

[root@V11 ~]# systemctl restart keepalived
[root@V11 ~]# systemctl  is-enabled  keepalived
enabled

[root@V11 ~]# grep -n Keepalived_healthcheckers  /var/log/messages 
6895:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Opening file '/etc/keepalived/keepalived.conf'.
6896:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Unknown keyword 'connect_timeout'
6897:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Unknown keyword 'nb_get_retry'
6898:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Unknown keyword 'delay_before_retry'
6904:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Activating healthchecker for service [192.168.0.21]:80
6905:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Activating healthchecker for service [192.168.0.21]:80
6906:Mar 14 18:35:50 V11 Keepalived_healthcheckers[7861]: Activating healthchecker for service [192.168.0.21]:80


[root@V11 ~]# grep -n  "MASTER STATE"  /var/log/messages 
6912:Mar 14 18:35:51 V11 Keepalived_vrrp[7862]: VRRP_Instance(LVSha) Transition to MASTER STATE
6913:Mar 14 18:35:52 V11 Keepalived_vrrp[7862]: VRRP_Instance(LVSha) Entering MASTER STATE

[root@V11 ~]# grep -n  "VIP"  /var/log/messages 
6909:Mar 14 18:35:50 V11 Keepalived_vrrp[7862]: VRRP_Instance(LVSha) removing protocol VIPs.
6914:Mar 14 18:35:52 V11 Keepalived_vrrp[7862]: VRRP_Instance(LVSha) setting protocol VIPs.









[root@V12 ~]#  route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
................
-------------  配置 vip  l0:0  192.168.0.21  此时绑定的网络接口l0:0不进行对外通信 ------ 
DR模式下要求 real server 的 arp_ignore参数要求配置为1
  net.ipv4.conf.lo.arp_ignore = 1
  net.ipv4.conf.all.arp_ignore = 1

1：只响应 目的IP地址 为 接收网卡 eth0 上的本地地址 192.168.0.1{2,3,4}的arp请求
环回网卡 lo:0 上的 ip地址 
则不响应,或者说lo:0 绑定的vip(192.168.0.21) 不回答arp请求

[root@V12 ~]# cp   /etc/sysconfig/network-scripts/ifcfg-lo{,:0}
[root@V12 ~]# vim  /etc/sysconfig/network-scripts/ifcfg-lo:0
[root@V12 ~]# cat  /etc/sysconfig/network-scripts/ifcfg-lo:0
DEVICE=lo:0
IPADDR=192.168.0.21
NETMASK=255.255.255.255
NETWORK=192.168.0.21
BROADCAST=192.168.0.21
ONBOOT=yes
NAME=lo:0

[root@V12 ~]# systemctl  restart   network

[root@V12 ~]# ifdown  eth1
[root@V12 ~]# ifdown  eth2

[root@V12 ~]# ifconfig  lo:0  |head  -2
lo:0: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 192.168.0.21  netmask 255.255.255.255

[root@V12 ~]# ifconfig  eth0  |grep  'inet '
        inet 192.168.0.12  netmask 255.255.255.0  broadcast 192.168.0.255

[root@V12 ~]# cat  /proc/sys/net/ipv4/conf/all/arp_ignore 
0
[root@V12 ~]# cat  /proc/sys/net/ipv4/conf/all/arp_announce 
0
   
[root@V12 ~]# cat  /proc/sys/net/ipv4/conf/lo/arp_ignore 
0
[root@V12 ~]# cat  /proc/sys/net/ipv4/conf/lo/arp_announce 
0

[root@V12 ~]# sysctl  -a |egrep  "(lo|all).arp(_ignore|_announce)"
net.ipv4.conf.all.arp_announce = 0
net.ipv4.conf.all.arp_ignore = 0
net.ipv4.conf.lo.arp_announce = 0
net.ipv4.conf.lo.arp_ignore = 0

[root@V12 ~]# vim  /etc/sysctl.conf 
[root@V12 ~]# tail  -4  /etc/sysctl.conf

net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.lo.arp_ignore = 1

[root@V12 ~]# sysctl  -p   /etc/sysctl.conf

net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.lo.arp_ignore = 1

1：只响应 目的IP地址 为 接收网卡 eth0 上的本地地址 192.168.0.1{2,3,4}的arp请求
环回网卡 lo:0 上的 ip地址 
则不响应,或者说lo:0 绑定的vip(192.168.0.21) 不回答arp请求
 net.ipv4.conf.lo.arp_ignore = 1
  net.ipv4.conf.all.arp_ignore = 1
--------------------------------------------------------------------
将内核参数设置为 2  
  net.ipv4.conf.lo.arp_announce = 2
  net.ipv4.conf.all.arp_announce = 2
IP包 目的地址CIP(192.168.0.10) 根据 路由表 查询 
判断需要从eth0 网卡发出,
该arp请求的 源MAC自然是eth0 网卡的MAC地址,
 lo:0 网卡发起arp请求时，源IP地址会选择 lo:0 网卡自身的VIP地址(192.168.0.21)
源IP 就 是 所出去接口 lo:0 的 VIP

[root@V12 ~]# cat  /proc/sys/net/ipv4/conf/{all,lo}/arp_ignore
1
1
[root@V12 ~]# cat  /proc/sys/net/ipv4/conf/{all,lo}/arp_announce
2
2
[root@V12 ~]# systemctl  restart httpd 
[root@V12 ~]# systemctl  enable   httpd
[root@V12 ~]#  elinks  -dump   192.168.0.12
   web1 V12 192.168.1.12









[root@V13 ~]#  route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
................
-------------  配置 vip  l0:0  192.168.0.21  此时绑定的网络接口l0:0不进行对外通信 ------ 

[root@V13 ~]# cp   /etc/sysconfig/network-scripts/ifcfg-lo{,:0}
[root@V13 ~]# vim  /etc/sysconfig/network-scripts/ifcfg-lo:0
[root@V13 ~]# cat  /etc/sysconfig/network-scripts/ifcfg-lo:0
DEVICE=lo:0
IPADDR=192.168.0.21
NETMASK=255.255.255.255
NETWORK=192.168.0.21
BROADCAST=192.168.0.21
ONBOOT=yes
NAME=lo:0

[root@V13 ~]# systemctl  restart  network
[root@V13 ~]# ifdown  eth1
[root@V13 ~]# ifdown  eth2

[root@V13 ~]# vim  /etc/sysctl.conf 

[root@V13 ~]# tail  -4  /etc/sysctl.conf

net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.lo.arp_ignore = 1

#当有arp广播问谁是192.168.0.21时,
本机忽略该ARP广播,不做任何回应
#本机不要向外宣告自己的lo回环地址是192.168.0.21
 net.ipv4.conf.lo.arp_ignore = 1
  net.ipv4.conf.all.arp_ignore = 1

[root@V13 ~]# sysctl  -p  /etc/sysctl.conf
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.lo.arp_ignore = 1

[root@V13 ~]#  elinks  -dump  192.168.0.13
   web2 V13 192.168.1.13













[root@V14 ~]#  route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
................
[root@V14 ~]# ifdown  eth1
[root@V14 ~]# ifdown  eth2

[root@V14 ~]# ll  /etc/rc.local 
lrwxrwxrwx. 1 root root 13 1月  30 2018 /etc/rc.local -> rc.d/rc.local

[root@V14 ~]# vim  /etc/rc.local

-------------  配置 vip  l0:0  192.168.0.21  此时绑定的网络接口l0:0不进行对外通信 ------ 

[root@V14 ~]# tail  -2  /etc/rc.local

LANG="en_US.UTF-8"
ifconfig  lo:0  192.168.0.21/32  up

[root@V14 ~]# . /etc/rc.local
[root@V14 ~]# ifconfig  eth0 |grep 'inet ';ifconfig  lo:0 |grep 'inet '
        inet 192.168.0.14  netmask 255.255.255.0  broadcast 192.168.0.255
        inet 192.168.0.21  netmask 0.0.0.0

[root@V14 ~]# vim  /etc/sysctl.conf 

[root@V14 ~]# tail  -4  /etc/sysctl.conf

net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.lo.arp_ignore = 1

[root@V14 ~]# sysctl  -p

net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.lo.arp_ignore = 1

[root@V14 ~]# rpm -q  httpd elinks
httpd-2.4.6-67.el7.x86_64
elinks-0.12-0.36.pre6.el7.x86_64

[root@V14 ~]# systemctl  restart  httpd  && systemctl  enable  httpd
.............
[root@V14 ~]# echo  "V14  192.168.0.14" > /var/www/html/index.html

[root@V14 ~]# elinks  -dump  192.168.0.14
   V14 192.168.0.14








[root@V10 ~]#  route  -n
Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
0.0.0.0         192.168.0.254   0.0.0.0         UG    0      0        0 eth0
................














