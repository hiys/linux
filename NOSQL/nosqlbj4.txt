





[root@H50 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H50 ~]# mkdir  -p /usr/local/mongodb/data/db

[root@H50 ~]# cd /usr/local/mongodb/;ls
data
[root@H50 mongodb]# mkdir  etc log
[root@H50 mongodb]# ls
data  etc  log
[root@H50 mongodb]# ls data/
db
[root@H50 mongodb]# cd
[root@H50 ~]# ls  /usr/local/mongodb/
data  etc  log
[root@H50 ~]# ls mongodb-linux-x86_64-rhel70-3.6.3/
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES
[root@H50 ~]# cp -r  mongodb-linux-x86_64-rhel70-3.6.3/bin/  /usr/local/mongodb/
[root@H50 ~]# ls /usr/local/mongodb/
bin  data  etc  log
[root@H50 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop
[root@H50 ~]# ls /usr/local/mongodb/etc/

[root@H50 ~]# ls /usr/local/mongodb/data/
db
[root@H50 ~]# ls /usr/local/mongodb/data/db/

[root@H50 ~]# ls /usr/local/mongodb/log/

[root@H50 ~]# vim /usr/local/mongodb/etc/mongodb.conf

[root@H50 ~]# cat /usr/local/mongodb/etc/mongodb.conf
logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
[root@H50 ~]# /usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf 
....................................
[root@H50 ~]# netstat -anpult |grep -i mongod
tcp        0      0 127.0.0.1:27017         0.0.0.0:*               LISTEN      2884/mongod         
[root@H50 ~]# /usr/local/mongodb/bin/mongod -h |grep -i shutdown
                                        interrupted by shutdown
  --shutdown                            kill a running server (for init 

[root@H50 ~]# /usr/local/mongodb/bin/mongod --shutdown  -f /usr/local/mongodb/etc/mongodb.conf 
killing process with pid: 2884

[root@H50 ~]# netstat -anpult |grep -i mongod
[root@H50 ~]# 
[root@H50 ~]# vim /usr/local/mongodb/etc/mongodb.conf
[root@H50 ~]# 
[root@H50 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27050
bind_ip=192.168.4.50

[root@H50 ~]# alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
[root@H50 ~]# alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.50  --port 27050"
[root@H50 ~]# ls  /usr/local/mongodb/
bin  data  etc  log
[root@H50 ~]# alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
[root@H50 ~]# mstart

[root@H50 ~]# linkm127 

MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.50:27050/
MongoDB server version: 3.6.3
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
	http://docs.mongodb.org/
Questions? Try the support group
	http://groups.google.com/group/mongodb-user
..............................
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db
test
> exit
bye
[root@H50 ~]# mstop
killing process with pid: 5402
[root@H50 ~]# netstat -anpult |grep -i mongod
[root@H50 ~]# ps -C mongod
  PID TTY          TIME CMD
[root@H50 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 5456
child process started successfully, parent exiting
[root@H50 ~]# ps -C mongod
  PID TTY          TIME CMD
 5456 ?        00:00:00 mongod
[root@H50 ~]# netstat -anpult |grep -i mongod
tcp        0      0 192.168.4.50:27050      0.0.0.0:*               LISTEN      5456/mongod         
[root@H50 ~]# 
[root@H50 ~]# vim /root/.bashrc 

[root@H50 ~]# head -4 /root/.bashrc
# .bashrc
alias mstart='/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf'
alias  linkm127='/usr/local/mongodb/bin/mongo  --host 192.168.4.50 --port 27050'
alias mstop='/usr/local/mongodb/bin/mongod --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf'
[root@H50 ~]# 
[root@H50 ~]# mstop
killing process with pid: 6169
[root@H50 ~]# ps -C mongod
  PID TTY          TIME CMD
[root@H50 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 6338
child process started successfully, parent exiting
[root@H50 ~]# ps -C mongod
  PID TTY          TIME CMD
 6338 ?        00:00:00 mongod
[root@H50 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.50:27050      0.0.0.0:*               LISTEN      6338/mongod         
[root@H50 ~]# 
[root@H50 ~]# linkm127 
.....................
> exit
bye
[root@H50 ~]# 
[root@H50 ~]# vim /etc/profile

[root@H50 ~]# tail -1 /etc/profile
export  PATH=/usr/local/mongodb/bin/:$PATH

[root@H50 ~]# source /etc/profile

[root@H50 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop      
[root@H50 ~]# 

[root@H50 ~]# ps -C mongod
  PID TTY          TIME CMD
 6338 ?        00:00:31 mongod
[root@H50 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.50:27050      0.0.0.0:*               LISTEN      6338/mongod         
[root@H50 ~]# 
[root@H50 ~]# vim txt.txt
[root@H50 ~]# cat txt.txt
show dbs
db
exit
[root@H50 ~]# linkm127  < txt.txt |tail -9
MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.50:27050/
MongoDB server version: 3.6.3
admin   0.000GB
config  0.000GB
local   0.000GB
test
bye
[root@H50 ~]# linkm127  < txt.txt |tail -9 |grep admin
admin   0.000GB
[root@H50 ~]# linkm127  < txt.txt |grep admin
admin   0.000GB
[root@H50 ~]# 









[root@H51 ~]#  ll redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz 
-rw-r--r--. 1 root root 99293317 10月 29 20:19 redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H51 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz
..........................
mongodb-linux-x86_64-rhel70-3.6.3/bin/mongod
mongodb-linux-x86_64-rhel70-3.6.3/bin/mongos
mongodb-linux-x86_64-rhel70-3.6.3/bin/mongo
mongodb-linux-x86_64-rhel70-3.6.3/bin/install_compass
[root@H51 ~]# 
[root@H51 ~]# netstat -anpult |grep redis-server
tcp        0      0 192.168.4.51:6351       0.0.0.0:*               LISTEN      1168/redis-server 1 
[root@H51 ~]# redis-cli -h 192.168.4.51  -p 6351
192.168.4.51:6351> keys *
1) "v12"
2) "v4"
3) "v5"
4) "v1"
5) "v3"
192.168.4.51:6351> info replication
# Replication
role:master
connected_slaves:0
master_replid:9d1eb0bb806ade4694d0636f47fa2d69aa826e4e
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0
192.168.4.51:6351> 
192.168.4.51:6351> 
192.168.4.51:6351> hset  book  name seby
(integer) 1
192.168.4.51:6351> keys *
1) "v12"
2) "book"
3) "v4"
4) "v5"
5) "v1"
6) "v3"
192.168.4.51:6351> type book
hash
192.168.4.51:6351> hset book worker gtq
(integer) 1
192.168.4.51:6351> hset book pay  18
(integer) 1
192.168.4.51:6351> hget  book pay
"18"
192.168.4.51:6351> lrange  book  0  -1
(error) WRONGTYPE Operation against a key holding the wrong kind of value
192.168.4.51:6351> hkeys book
1) "name"
2) "worker"
3) "pay"
192.168.4.51:6351> hgetall book
1) "name"
2) "seby"
3) "worker"
4) "gtq"
5) "pay"
6) "18"
192.168.4.51:6351> hmset  book count 1000  ver 2.0.1
OK
192.168.4.51:6351> hmget  book ver pay count
1) "2.0.1"
2) "18"
3) "1000"
192.168.4.51:6351> hvals  book
1) "seby"
2) "gtq"
3) "18"
4) "1000"
5) "2.0.1"
192.168.4.51:6351> hkeys  book
1) "name"
2) "worker"
3) "pay"
4) "count"
5) "ver"
192.168.4.51:6351> hdel book count worker
(integer) 2
192.168.4.51:6351> hkeys book
1) "name"
2) "pay"
3) "ver"
192.168.4.51:6351> hvals  book
1) "seby"
2) "18"
3) "2.0.1"
192.168.4.51:6351> hgetall book
1) "name"
2) "seby"
3) "pay"
4) "18"
5) "ver"
6) "2.0.1"
192.168.4.51:6351> exit
[root@H51 ~]# 
[root@H51 ~]# mkdir  /usr/local/mongodb
[root@H51 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H51 ~]# ls mongodb-linux-x86_64-rhel70-3.6.3/

bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES
[root@H51 ~]# cd mongodb-linux-x86_64-rhel70-3.6.3/bin/;ls
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop
[root@H51 bin]# cd ../;ls
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES
[root@H51 mongodb-linux-x86_64-rhel70-3.6.3]# cp  -r bin/  /usr/local/mongodb/
[root@H51 mongodb-linux-x86_64-rhel70-3.6.3]# cd
[root@H51 ~]# ls /usr/local/mongodb/
bin
[root@H51 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop
[root@H51 ~]# cd /usr/local/mongodb/
[root@H51 mongodb]# mkdir -p  etc  log  data/db
[root@H51 mongodb]# ls
bin  data  etc  log
[root@H51 mongodb]# ls  data/
db
[root@H51 mongodb]# 
[root@H51 ~]# vim /usr/local/mongodb/etc/mongodb.conf  ##创建主配置服务文件

[root@H51 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true

[root@H51 bin]# ./mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop

[root@H51 bin]# ./mongod -f /usr/local/mongodb/etc/mongodb.conf   ##启动服务
about to fork child process, waiting until server is ready for connections.
forked process: 2693
child process started successfully, parent exiting

[root@H51 bin]# ps -C mongod
  PID TTY          TIME CMD
 2693 ?        00:00:00 mongod

[root@H51 bin]# netstat -anpult |grep :27017
tcp        0      0 127.0.0.1:27017         0.0.0.0:*               LISTEN      2693/./mongod       
[root@H51 ~]# ls /usr/local/mongodb/log/
mongodb.log
[root@H51 ~]# ls /usr/local/mongodb/data/db/

collection-0--887238377397207958.wt  journal          WiredTiger
collection-2--887238377397207958.wt  _mdb_catalog.wt  WiredTigerLAS.wt
diagnostic.data                      mongod.lock      WiredTiger.lock
index-1--887238377397207958.wt       sizeStorer.wt    WiredTiger.turtle
index-3--887238377397207958.wt       storage.bson     WiredTiger.wt
[root@H51 ~]# 

[root@H51 bin]# /usr/local/mongodb/bin/mongod -h |grep -i shutdown
                                        interrupted by shutdown
  --shutdown                            kill a running server (for init 
                           ##关闭服务
[root@H51 bin]# /usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf
killing process with pid: 2693
[root@H51 bin]# 

[root@H51 bin]# cd                          ##启动服务
[root@H51 ~]# /usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf

about to fork child process, waiting until server is ready for connections.
forked process: 2845
child process started successfully, parent exiting

[root@H51 ~]# netstat -anpult |grep :27017
tcp        0      0 127.0.0.1:27017         0.0.0.0:*               LISTEN      2845/mongod         
[root@H51 ~]# 

[root@H51 bin]# /usr/local/mongodb/bin/mongod -h |grep -i shutdown
                                        interrupted by shutdown
  --shutdown                            kill a running server (for init 

[root@H51 bin]# /usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf

killing process with pid: 2693

[root@H51 bin]# cd
[root@H51 ~]# /usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf


[root@H51 ~]# netstat -anpult |grep :27017
tcp   0      0 127.0.0.1:27017         0.0.0.0:*     LISTEN      2845/mongod  
       
[root@H51 ~]# alias mstart='/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf'
[root@H51 ~]# alias mstop='/usr/local/mongodb/bin/mongod --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf'
[root@H51 ~]# alias  linkm127='/usr/local/mongodb/bin/mongo'

[root@H51 ~]# linkm127

MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Welcome to the MongoDB shell.
...................
..................................
2018-11-02T10:36:14.738+0800 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2018-11-02T10:36:14.738+0800 I CONTROL  [initandlisten] 
> exit
bye
[root@H51 ~]# mstop
killing process with pid: 2845
[root@H51 ~]# vim /usr/local/mongodb/etc/mongodb.conf 

[root@H51 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27051
bind_ip=192.168.4.51

[root@H51 ~]# alias mstart='/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf'
[root@H51 ~]# alias  linkm127='/usr/local/mongodb/bin/mongo  --host 192.168.4.51 --port 27051'
[root@H51 ~]# alias mstop='/usr/local/mongodb/bin/mongod --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf'

[root@H51 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 3075
child process started successfully, parent exiting
[root@H51 ~]# netstat -anpult |grep :27051
tcp    0      0 192.168.4.51:27051      0.0.0.0:*         LISTEN      3075/mongod         
[root@H51 ~]# linkm127
MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.51:27051/
MongoDB server version: 3.6.3
Server has startup warnings: 
..................
> exit
bye
[root@H51 ~]# mstop
killing process with pid: 3075
[root@H51 ~]# netstat -anpult |grep :27051
tcp        0      0 192.168.4.51:50816      192.168.4.51:27051      TIME_WAIT   -                   

[root@H51 ~]# /usr/local/mongodb/bin/mongod --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf

[root@H51 ~]# /usr/local/mongodb/bin/mongod --help

General options:
  -h [ --help ]                         show this usage information
  --version                             show version information
  -f [ --config ] arg                   configuration file specifying 
                                        additional options
  -v [ --verbose ] [=arg(=v)]           be more verbose (include multiple times
                                        for more verbosity e.g. -vvvvv)
  --quiet                               quieter output
  --port arg                            specify port number - 27017 by default
  --bind_ip arg                         comma separated list of ip addresses to
                                        listen on - localhost by default
  --bind_ip_all                         bind to all ip addresses
  --ipv6                                enable IPv6 support (disabled by 
                                        default)
  --listenBacklog arg (=128)            set socket listen backlog size
  --maxConns arg                        max number of simultaneous connections 
                                        - 1000000 by default
  --logpath arg                         log file to send write to instead of 
                                        stdout - has to be a file, not 
                                        directory
  --syslog                              log to system's syslog facility instead
                                        of file or stdout
  --syslogFacility arg                  syslog facility used for mongodb syslog
                                        message
  --logappend                           append to logpath instead of 
                                        over-writing
  --logRotate arg                       set the log rotation behavior 
                                        (rename|reopen)
  --timeStampFormat arg                 Desired format for timestamps in log 
                                        messages. One of ctime, iso8601-utc or 
                                        iso8601-local
  --pidfilepath arg                     full path to pidfile (if not set, no 
                                        pidfile is created)
  --timeZoneInfo arg                    full path to time zone info directory, 
                                        e.g. /usr/share/zoneinfo
  --keyFile arg                         private key for cluster authentication
  --noauth                              run without security
  --setParameter arg                    Set a configurable parameter
  --transitionToAuth                    For rolling access control upgrade. 
                                        Attempt to authenticate over outgoing 
                                        connections and proceed regardless of 
                                        success. Accept incoming connections 
                                        with or without authentication.
  --clusterAuthMode arg                 Authentication mode used for cluster 
                                        authentication. Alternatives are 
                                        (keyFile|sendKeyFile|sendX509|x509)
  --nounixsocket                        disable listening on unix sockets
  --unixSocketPrefix arg                alternative directory for UNIX domain 
                                        sockets (defaults to /tmp)
  --filePermissions arg                 permissions to set on UNIX domain 
                                        socket file - 0700 by default
  --fork                                fork server process
  --networkMessageCompressors [=arg(=disabled)] (=snappy)
                                        Comma-separated list of compressors to 
                                        use for network messages
  --auth                                run with security
  --clusterIpSourceWhitelist arg        Network CIDR specification of permitted
                                        origin for `__system` access.
  --slowms arg (=100)                   value of slow for profile and console 
                                        log
  --slowOpSampleRate arg (=1)           fraction of slow ops to include in the 
                                        profile and console log
  --profile arg                         0=off 1=slow, 2=all
  --cpu                                 periodically show cpu and iowait 
                                        utilization
  --sysinfo                             print some diagnostic system 
                                        information
  --noIndexBuildRetry                   don't retry any index builds that were 
                                        interrupted by shutdown
  --noscripting                         disable scripting engine
  --notablescan                         do not allow table scans
  --shutdown                            kill a running server (for init 
                                        scripts)

Replication options:
  --oplogSize arg                       size to use (in MB) for replication op 
                                        log. default is 5% of disk space (i.e. 
                                        large is good)

Master/slave options (old; use replica sets instead):
  --master                              master mode
  --slave                               slave mode
  --source arg                          when slave: specify master as 
                                        <server:port>
  --only arg                            when slave: specify a single database 
                                        to replicate
  --slavedelay arg                      specify delay (in seconds) to be used 
                                        when applying master ops to slave
  --autoresync                          automatically resync if slave data is 
                                        stale

Replica set options:
  --replSet arg                         arg is <setname>[/<optionalseedhostlist
                                        >]
  --replIndexPrefetch arg               specify index prefetching behavior (if 
                                        secondary) [none|_id_only|all]
  --enableMajorityReadConcern [=arg(=1)] (=1)
                                        enables majority readConcern

Sharding options:
  --configsvr                           declare this is a config db of a 
                                        cluster; default port 27019; default 
                                        dir /data/configdb
  --shardsvr                            declare this is a shard db of a 
                                        cluster; default port 27018

SSL options:
  --sslOnNormalPorts                    use ssl on configured ports
  --sslMode arg                         set the SSL operation mode 
                                        (disabled|allowSSL|preferSSL|requireSSL
                                        )
  --sslPEMKeyFile arg                   PEM file for ssl
  --sslPEMKeyPassword arg               PEM file password
  --sslClusterFile arg                  Key file for internal SSL 
                                        authentication
  --sslClusterPassword arg              Internal authentication key file 
                                        password
  --sslCAFile arg                       Certificate Authority file for SSL
  --sslCRLFile arg                      Certificate Revocation List file for 
                                        SSL
  --sslDisabledProtocols arg            Comma separated list of TLS protocols 
                                        to disable [TLS1_0,TLS1_1,TLS1_2]
  --sslWeakCertificateValidation        allow client to connect without 
                                        presenting a certificate
  --sslAllowConnectionsWithoutCertificates 
                                        allow client to connect without 
                                        presenting a certificate
  --sslAllowInvalidHostnames            Allow server certificates to provide 
                                        non-matching hostnames
  --sslAllowInvalidCertificates         allow connections to servers with 
                                        invalid certificates
  --sslFIPSMode                         activate FIPS 140-2 mode at startup

Storage options:
  --storageEngine arg                   what storage engine to use - defaults 
                                        to wiredTiger if no data files present
  --dbpath arg                          directory for datafiles - defaults to 
                                        /data/db
  --directoryperdb                      each database will be stored in a 
                                        separate directory
  --noprealloc                          disable data file preallocation - will 
                                        often hurt performance
  --nssize arg (=16)                    .ns file size (in MB) for new databases
  --quota                               limits each database to a certain 
                                        number of files (8 default)
  --quotaFiles arg                      number of files allowed per db, implies
                                        --quota
  --smallfiles                          use a smaller default file size
  --syncdelay arg (=60)                 seconds between disk syncs (0=never, 
                                        but not recommended)
  --upgrade                             upgrade db if needed
  --repair                              run repair on all dbs
  --repairpath arg                      root directory for repair files - 
                                        defaults to dbpath
  --journal                             enable journaling
  --nojournal                           disable journaling (journaling is on by
                                        default for 64 bit)
  --journalOptions arg                  journal diagnostic options
  --journalCommitInterval arg           how often to group/batch commit (ms)

WiredTiger options:
  --wiredTigerCacheSizeGB arg           maximum amount of memory to allocate 
                                        for cache; defaults to 1/2 of physical 
                                        RAM
  --wiredTigerJournalCompressor arg (=snappy)
                                        use a compressor for log records 
                                        [none|snappy|zlib]
  --wiredTigerDirectoryForIndexes       Put indexes and data in different 
                                        directories
  --wiredTigerCollectionBlockCompressor arg (=snappy)
                                        block compression algorithm for 
                                        collection data [none|snappy|zlib]
  --wiredTigerIndexPrefixCompression arg (=1)
                                        use prefix compression on row-store 
                                        leaf pages
[root@H51 ~]# 

[root@H51 ~]# mstop
killing process with pid: 3182

[root@H51 ~]# ss -anput | grep :27051

[root@H51 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 3224
child process started successfully, parent exiting

[root@H51 ~]# linkm127
MongoDB shell version v3.6.3
...................

[root@H51 ~]# mstop
killing process with pid: 3224

[root@H51 ~]# ss -anput | grep mongod

[root@H51 ~]# ss -anput | grep :27051

[root@H51 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 3327
child process started successfully, parent exiting

[root@H51 ~]# linkm127

MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.51:27051/
.........................
2018-11-02T11:02:42.043+0800 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2018-11-02T11:02:42.043+0800 I CONTROL  [initandlisten] 
> exit
bye
[root@H51 ~]# 
[root@H51 ~]# mstop
killing process with pid: 3327

[root@H51 ~]# ss -anput |grep :27051
tcp    TIME-WAIT  0      0      192.168.4.51:50820              192.168.4.51:27051  
            
[root@H51 ~]# /usr/local/mongodb/bin/mongod --shutdown -f /usr/local/mongodb/data/db
There doesn't seem to be a server running with dbpath: /data/db

[root@H51 ~]# ss -anput |grep :27051
tcp    TIME-WAIT  0      0      192.168.4.51:50820       192.168.4.51:27051   
           
[root@H51 ~]# linkm127

MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.51:27051/
2018-11-02T11:03:19.868+0800 W NETWORK  [thread1] Failed to connect to 192.168.4.51:27051, in(checking socket for error after poll), reason: Connection refused
2018-11-02T11:03:19.869+0800 E QUERY    [thread1] Error: couldn't connect to server 192.168.4.51:27051, connection attempt failed :
connect@src/mongo/shell/mongo.js:251:13
@(connect):1:6
exception: connect failed

[root@H51 ~]# ss -anput | grep :27051
tcp    TIME-WAIT  0      0      192.168.4.51:50820              192.168.4.51:27051              

[root@H51 ~]# ss -anput | grep :27051

[root@H51 ~]# vim /root/.bashrc 

[root@H51 ~]# head -4 /root/.bashrc
# .bashrc
alias mstart='/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf'
alias  linkm127='/usr/local/mongodb/bin/mongo  --host 192.168.4.51 --port 27051'
alias mstop='/usr/local/mongodb/bin/mongod --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf'
[root@H51 ~]# 

[root@H51 ~]# mstart

about to fork child process, waiting until server is ready for connections.
forked process: 3464
child process started successfully, parent exiting

[root@H51 ~]# linkm127

MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.51:27051/
MongoDB server version: 3.6.3
Server has startup warnings: 
............................
2018-11-02T11:12:29.190+0800 I CONTROL  [initandlisten] **        We suggest setting it to 'never'
2018-11-02T11:12:29.190+0800 I CONTROL  [initandlisten] 
> show DBS
2018-11-02T11:12:44.411+0800 E QUERY    [thread1] Error: don't know how to show [DBS] :
shellHelper.show@src/mongo/shell/utils.js:953:11
shellHelper@src/mongo/shell/utils.js:706:15
@(shellhelp2):1:1
> show dbs    
admin   0.000GB
config  0.000GB
local   0.000GB
> db
test

> use gamedb
switched to db gamedb
> db
gamedb
> show tables
> db.t1.save({name:"bob",age:19})
WriteResult({ "nInserted" : 1 })
> show tables
t1
> db.t1.save({name:"bob2",class:"1807",school:"hiys",sex:"girl",age:18})
WriteResult({ "nInserted" : 1 })
> show tables
t1
> db
gamedb
> db.t1.find()
{ "_id" : ObjectId("5bdbc22c489c2cb9f85e4a84"), "name" : "bob", "age" : 19 }
{ "_id" : ObjectId("5bdbc2ad489c2cb9f85e4a85"), "name" : "bob2", "class" : "1807", "school" : "hiys", "sex" : "girl", "age" : 18 }
> db.t1.drop()
true
> db.t2.drop()
false
> db.t1.save({name:"bob2",class:"1807",school:"hiys",sex:"girl",age:18})
WriteResult({ "nInserted" : 1 })
> db.t1.save({name:"lucy",school:"hiys",sex:"girl",age:18})
WriteResult({ "nInserted" : 1 })
> db.t1.insert({name:"xiaojiu",addr="beij"})
2018-11-02T11:26:16.717+0800 E QUERY    [thread1] SyntaxError: missing : after property id @(shell):1:33
> db.t1.count()
2
> db.t1.findone()
2018-11-02T11:27:06.974+0800 E QUERY    [thread1] TypeError: db.t1.findone is not a function :
@(shell):1:1
> db.t1.findOne()   ##查看第一行的内容
{
	"_id" : ObjectId("5bdbc37f489c2cb9f85e4a86"),
	"name" : "bob2",
	"class" : "1807",
	"school" : "hiys",
	"sex" : "girl",
	"age" : 18
}
> db.t1.remove({name:"bob2"})
WriteResult({ "nRemoved" : 1 })
> db.t1.find()
{ "_id" : ObjectId("5bdbc3a4489c2cb9f85e4a87"), "name" : "lucy", "school" : "hiys", "sex" : "girl", "age" : 18 }

> db.t1.remove()    ## 注意格式,({}) 大括号不能少
2018-11-02T11:29:01.070+0800 E QUERY    [thread1] Error: remove needs a query :
DBCollection.prototype._parseRemove@src/mongo/shell/collection.js:357:1
DBCollection.prototype.remove@src/mongo/shell/collection.js:382:18
@(shell):1:1
s
> db.t1.remove({})  ## 注意格式,({}) 大括号不能少
WriteResult({ "nRemoved" : 1 })
> db.t1.find()
> 
> 
> show dbs
admin   0.000GB
config  0.000GB
gamedb  0.000GB
local   0.000GB
> db
gamedb
> show tables
t1
> db.t2.save({name:"bob",age:19})
WriteResult({ "nInserted" : 1 })
> db.t2.save(name:"tom",age:18,mail:"tom@163.com"})
2018-11-02T11:32:45.861+0800 E QUERY    [thread1] SyntaxError: missing ) after argument list @(shell):1:15
> db.t2.save({name:"tom",age:18,mail:"tom@163.com"})
WriteResult({ "nInserted" : 1 })
> db.t2.save({name:"bob",like:"a,b,c"})
WriteResult({ "nInserted" : 1 })
> db.t2.save({name:"lily",like:"pery,baby"})
WriteResult({ "nInserted" : 1 })
> db.t1.find()
> db.t2.find()
{ "_id" : ObjectId("5bdbc535489c2cb9f85e4a88"), "name" : "bob", "age" : 19 }
{ "_id" : ObjectId("5bdbc58a489c2cb9f85e4a89"), "name" : "tom", "age" : 18, "mail" : "tom@163.com" }
{ "_id" : ObjectId("5bdbc5ae489c2cb9f85e4a8a"), "name" : "bob", "like" : "a,b,c" }
{ "_id" : ObjectId("5bdbc5dc489c2cb9f85e4a8b"), "name" : "lily", "like" : "pery,baby" }
> db.t2.insert({name:"bob",like:"peri,girl",addr:"home"})
WriteResult({ "nInserted" : 1 })
> db.t2.find()
{ "_id" : ObjectId("5bdbc535489c2cb9f85e4a88"), "name" : "bob", "age" : 19 }
{ "_id" : ObjectId("5bdbc58a489c2cb9f85e4a89"), "name" : "tom", "age" : 18, "mail" : "tom@163.com" }
{ "_id" : ObjectId("5bdbc5ae489c2cb9f85e4a8a"), "name" : "bob", "like" : "a,b,c" }
{ "_id" : ObjectId("5bdbc5dc489c2cb9f85e4a8b"), "name" : "lily", "like" : "pery,baby" }
{ "_id" : ObjectId("5bdbc64e489c2cb9f85e4a8c"), "name" : "bob", "like" : "peri,girl", "addr" : "home" }
> db.t2.remove({name:"bob"})
WriteResult({ "nRemoved" : 3 })
> db.t2.find()
{ "_id" : ObjectId("5bdbc58a489c2cb9f85e4a89"), "name" : "tom", "age" : 18, "mail" : "tom@163.com" }
{ "_id" : ObjectId("5bdbc5dc489c2cb9f85e4a8b"), "name" : "lily", "like" : "pery,baby" }
> db.t2.remove({})
WriteResult({ "nRemoved" : 2 })
> db.t2.find()
> show tables
t1
t2
> db
gamedb
> db.t1.drop()
true
> db
gamedb
> show tables
t2
> db.t2.drop()
true
> show tables
> db
gamedb
> show dbs        ##注意必须数据库gamedb中有表(集和),才会显示数据库名gamedb,特点
admin   0.000GB
config  0.000GB
local   0.000GB
> use gamedb
switched to db gamedb
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db
gamedb
> use admin
switched to db admin
> db
admin
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db.t2.insert({name:"bob",like:"peri,girl",addr:"home"})
WriteResult({ "nInserted" : 1 })
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db
admin
> use gamedb  
switched to db gamedb
           # # 数据库gamedb 中有了记录(文档),有了表(集和), 然后 show dbs 才会显示数据库名

> db.t2.insert({name:"bob",like:"peri,girl",addr:"home"})
WriteResult({ "nInserted" : 1 })

> show dbs     ##注意必须数据库gamedb中有表(集和),才会显示数据库名gamedb,特点
admin   0.000GB
config  0.000GB
gamedb  0.000GB
local   0.000GB
> use admin
switched to db admin
> db
admin
> db.t2.remove({name:"bob",like:"peri,girl",addr:"home"})
WriteResult({ "nRemoved" : 1 })
> db.t2.find()
> db.t2.drop()
true
> db.t1.drop()
false
> use userdb
switched to db userdb
> db
userdb
> db.t2.save({name:"zhangsan",家庭地址:"北京",class:"nod1888"})
WriteResult({ "nInserted" : 1 })
> db.t2.find()
{ "_id" : ObjectId("5bdbc867489c2cb9f85e4a8f"), "name" : "zhangsan", "家庭地址" : "北京", "class" : "nod1888" }

> db.t2.save({name:"xiaowu",jiehun:true})
WriteResult({ "nInserted" : 1 })

> db.t2.find()
{ "_id" : ObjectId("5bdbc867489c2cb9f85e4a8f"), "name" : "zhangsan", "家庭地址" : "北京", "class" : "nod1888" }
{ "_id" : ObjectId("5bdbc8d4489c2cb9f85e4a90"), "name" : "xiaowu", "jiehun" : true }

> db.t2.save({name:"xixi",hun:false})
WriteResult({ "nInserted" : 1 })
> db.t2.find()
.................................
{ "_id" : ObjectId("5bdbc8f9489c2cb9f85e4a91"), "name" : "xixi", "hun" : false }

> db.t2.save({name:"xixi",car:null})
WriteResult({ "nInserted" : 1 })
> db.t2.find()
............................
{ "_id" : ObjectId("5bdbc8f9489c2cb9f85e4a91"), "name" : "xixi", "hun" : false }
{ "_id" : ObjectId("5bdbc915489c2cb9f85e4a92"), "name" : "xixi", "car" : null }

> db.t1.save({name:"xiao",gz:66.77})
WriteResult({ "nInserted" : 1 })

> db.t1.save({name:"xiao2",gz:6687})
WriteResult({ "nInserted" : 1 })

> db.t1.find()
{ "_id" : ObjectId("5bdbc983489c2cb9f85e4a93"), "name" : "xiao", "gz" : 66.77 }
{ "_id" : ObjectId("5bdbc9a2489c2cb9f85e4a94"), "name" : "xiao2", "gz" : 6687 }
> db.t1.save({pay:NumberInt(3)})
WriteResult({ "nInserted" : 1 })
> db.t1.find()
.............................................
{ "_id" : ObjectId("5bdbca41489c2cb9f85e4a95"), "pay" : 3 }
> db.t1.save({pay:NumberInt(3.1415)})
WriteResult({ "nInserted" : 1 })
> db.t1.find()
...............................................
{ "_id" : ObjectId("5bdbca41489c2cb9f85e4a95"), "pay" : 3 }
{ "_id" : ObjectId("5bdbca72489c2cb9f85e4a96"), "pay" : 3 }

> db.t1.save({pay:NumberLong(3.1415)})
2018-11-02T11:55:13.418+0800 E QUERY    [thread1] Error: number passed to NumberLong must be representable as an int64_t :
@(shell):1:17
> db.t1.save({pay:NumberLong(31415.00)})
WriteResult({ "nInserted" : 1 })

> db.t1.find()
............................................
{ "_id" : ObjectId("5bdbcab9489c2cb9f85e4a97"), "pay" : NumberLong(31415) }

> db.t1.save({name:"lucy",like:["girl","eat","game"]})

WriteResult({ "nInserted" : 1 })
> db.t1.find()
...............................................
{ "_id" : ObjectId("5bdbcba5489c2cb9f85e4a98"), "name" : "lucy", "like" : [ "girl", "eat", "game" ] }
> 

> db.t2.find()
{ "_id" : ObjectId("5bdbc867489c2cb9f85e4a8f"), "name" : "zhangsan", "家庭地址" : "北京", "class" : "nod1888" }
{ "_id" : ObjectId("5bdbc8d4489c2cb9f85e4a90"), "name" : "xiaowu", "jiehun" : true }
{ "_id" : ObjectId("5bdbc8f9489c2cb9f85e4a91"), "name" : "xixi", "hun" : false }
{ "_id" : ObjectId("5bdbc915489c2cb9f85e4a92"), "name" : "xixi", "car" : null }
> db
userdb

> db.t2.count()
4

> db.t2.save({lg:"php",code:function(){/* <?php echo "hello world";?> */}})
WriteResult({ "nInserted" : 1 })

> db.t2.find()
..............................
{ "_id" : ObjectId("5bdbe960489c2cb9f85e4a99"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello world\";?> */}" } }
> db.t2.save({name:"jerry",day:new Date()})
WriteResult({ "nInserted" : 1 })

> db.t2.find()
..........................................
{ "_id" : ObjectId("5bdbe960489c2cb9f85e4a99"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello world\";?> */}" } }
{ "_id" : ObjectId("5bdbe9d9489c2cb9f85e4a9a"), "name" : "jerry", "day" : ISODate("2018-11-02T06:08:25.125Z") }

> db.t2.find({name:"jerry"})
{ "_id" : ObjectId("5bdbe9d9489c2cb9f85e4a9a"), "name" : "jerry", "day" : ISODate("2018-11-02T06:08:25.125Z") }

> db.t2.save({name:"lucy",stuid:ObjectID()})
2018-11-02T14:11:09.046+0800 E QUERY    [thread1] ReferenceError: ObjectID is not defined :
@(shell):1:25

> db.t2.find({name:"lucy",stuid:ObjectID()})
2018-11-02T14:11:58.230+0800 E QUERY    [thread1] ReferenceError: ObjectID is not defined :
@(shell):1:25
> 
> 
> db.t2.save({name:"lucy",stuid:ObjectId()})
WriteResult({ "nInserted" : 1 })
> db.t2.find({name:"lucy",stuid:ObjectId()})
> db.t2.find({name:"lucy"})
{ "_id" : ObjectId("5bdbeb0f489c2cb9f85e4a9c"), "name" : "lucy", "stuid" : ObjectId("5bdbeb0f489c2cb9f85e4a9b") }
> 
> 
> db.t2.save({tarena:{addr:"bj",tel:"49991888"}})
WriteResult({ "nInserted" : 1 })
> db.t2.find()
.....................................
{ "_id" : ObjectId("5bdbeda8489c2cb9f85e4a9e"), "tarena" : { "addr" : "bj", "tel" : "49991888" } }
> 
> db.t2.save({lg:"php",code:function(){/* <?php echo "hello boy";?> */}})
WriteResult({ "nInserted" : 1 })
> db.t2.save({name:"jerry",day:new Date()})
WriteResult({ "nInserted" : 1 })
> db.t2.save({cpmment:"match null line",bds:/^$/})
WriteResult({ "nInserted" : 1 })
> 
> db.t2.find()
{ "_id" : ObjectId("5bdbc867489c2cb9f85e4a8f"), "name" : "zhangsan", "家庭地址" : "北京", "class" : "nod1888" }
{ "_id" : ObjectId("5bdbc8d4489c2cb9f85e4a90"), "name" : "xiaowu", "jiehun" : true }
{ "_id" : ObjectId("5bdbc8f9489c2cb9f85e4a91"), "name" : "xixi", "hun" : false }
{ "_id" : ObjectId("5bdbc915489c2cb9f85e4a92"), "name" : "xixi", "car" : null }
{ "_id" : ObjectId("5bdbe960489c2cb9f85e4a99"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello world\";?> */}" } }
{ "_id" : ObjectId("5bdbe9d9489c2cb9f85e4a9a"), "name" : "jerry", "day" : ISODate("2018-11-02T06:08:25.125Z") }
{ "_id" : ObjectId("5bdbeb0f489c2cb9f85e4a9c"), "name" : "lucy", "stuid" : ObjectId("5bdbeb0f489c2cb9f85e4a9b") }
{ "_id" : ObjectId("5bdbeda8489c2cb9f85e4a9e"), "tarena" : { "addr" : "bj", "tel" : "49991888" } }
{ "_id" : ObjectId("5bdbeee3489c2cb9f85e4a9f"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello boy\";?> */}" } }
{ "_id" : ObjectId("5bdbef06489c2cb9f85e4aa0"), "name" : "jerry", "day" : ISODate("2018-11-02T06:30:30.897Z") }
{ "_id" : ObjectId("5bdbef5b489c2cb9f85e4aa1"), "cpmment" : "match null line", "bds" : /^$/ }
> 
> exit
bye
[root@H51 ~]#  clear

[root@H51 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop

[root@H51 ~]# ls /usr/local/mongodb/
bin  data  etc  log

[root@H51 ~]# alias |grep mst
alias mstart='/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf'
alias mstop='/usr/local/mongodb/bin/mongod --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf'

[root@H51 ~]# alias |grep link
alias linkm127='/usr/local/mongodb/bin/mongo  --host 192.168.4.51 --port 27051'

[root@H51 ~]# mkdir /mdb
[root@H51 ~]# linkm127 
> show dbs
admin   0.000GB
config  0.000GB
gamedb  0.000GB
local   0.000GB
userdb  0.000GB
> db
test
> use userdb
switched to db userdb
> show tables
t1
t2
> db.t2.find()
{ "_id" : ObjectId("5bdbc867489c2cb9f85e4a8f"), "name" : "zhangsan", "家庭地址" : "北京", "class" : "nod1888" }
{ "_id" : ObjectId("5bdbc8d4489c2cb9f85e4a90"), "name" : "xiaowu", "jiehun" : true }
{ "_id" : ObjectId("5bdbc8f9489c2cb9f85e4a91"), "name" : "xixi", "hun" : false }
{ "_id" : ObjectId("5bdbc915489c2cb9f85e4a92"), "name" : "xixi", "car" : null }
{ "_id" : ObjectId("5bdbe960489c2cb9f85e4a99"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello world\";?> */}" } }
{ "_id" : ObjectId("5bdbe9d9489c2cb9f85e4a9a"), "name" : "jerry", "day" : ISODate("2018-11-02T06:08:25.125Z") }
{ "_id" : ObjectId("5bdbeb0f489c2cb9f85e4a9c"), "name" : "lucy", "stuid" : ObjectId("5bdbeb0f489c2cb9f85e4a9b") }
{ "_id" : ObjectId("5bdbeda8489c2cb9f85e4a9e"), "tarena" : { "addr" : "bj", "tel" : "49991888" } }
{ "_id" : ObjectId("5bdbeee3489c2cb9f85e4a9f"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello boy\";?> */}" } }
{ "_id" : ObjectId("5bdbef06489c2cb9f85e4aa0"), "name" : "jerry", "day" : ISODate("2018-11-02T06:30:30.897Z") }
{ "_id" : ObjectId("5bdbef5b489c2cb9f85e4aa1"), "cpmment" : "match null line", "bds" : /^$/ }
> 
[root@H51 ~]# cd /mdb/;ls
[root@H51 mdb]# /usr/local/mongodb/bin/mongoexport  \  # 导出数据库userdb 表t2 下的字段列表_id,name,age
> --host  192.168.4.51  --port  27051  -d userdb  -c t2 \
> -f _id,name,age --type=csv > /mdb/userdb-t2.csv

2018-11-02T14:54:35.965+0800	connected to: 192.168.4.51:27051
2018-11-02T14:54:35.965+0800	exported 11 records

[root@H51 mdb]# ls
userdb-t2.csv

[root@H51 mdb]# tail -3 userdb-t2.csv 
ObjectId(5bdbeee3489c2cb9f85e4a9f),,
ObjectId(5bdbef06489c2cb9f85e4aa0),jerry,
ObjectId(5bdbef5b489c2cb9f85e4aa1),,

[root@H51 mdb]# head -3 userdb-t2.csv
_id,name,age
ObjectId(5bdbc867489c2cb9f85e4a8f),zhangsan,
ObjectId(5bdbc8d4489c2cb9f85e4a90),xiaowu,
[root@H51 mdb]# 

> 
> db.t1.find()
{ "_id" : ObjectId("5bdbc983489c2cb9f85e4a93"), "name" : "xiao", "gz" : 66.77 }
{ "_id" : ObjectId("5bdbc9a2489c2cb9f85e4a94"), "name" : "xiao2", "gz" : 6687 }
{ "_id" : ObjectId("5bdbca41489c2cb9f85e4a95"), "pay" : 3 }
{ "_id" : ObjectId("5bdbca72489c2cb9f85e4a96"), "pay" : 3 }
{ "_id" : ObjectId("5bdbcab9489c2cb9f85e4a97"), "pay" : NumberLong(31415) }
{ "_id" : ObjectId("5bdbcba5489c2cb9f85e4a98"), "name" : "lucy", "like" : [ "girl", "eat", "game" ] }
> 
                                                                 ## 导出 格式 csv
[root@H51 mdb]# /usr/local/mongodb/bin/mongoexport  --host  192.168.4.51  --port  27051  -d userdb  -c t2 -f name,age --type=csv > /mdb/userdb-t2.csv

2018-11-02T15:18:31.626+0800	connected to: 192.168.4.51:27051
2018-11-02T15:18:31.627+0800	exported 11 records

[root@H51 mdb]# head -3 /mdb/userdb-t2.csv
name,age
zhangsan,
xiaowu,                              ## 导出 格式json
[root@H51 mdb]# /usr/local/mongodb/bin/mongoexport  --host  192.168.4.51  --port 27051 \
> -d  userdb  -c  t1  -f name,gz,pay,like  --type=json > /mdb/userdb-t1.json

2018-11-02T15:23:17.811+0800	connected to: 192.168.4.51:27051
2018-11-02T15:23:17.812+0800	exported 6 records

[root@H51 mdb]# cat /mdb/userdb-t1.json
{"_id":{"$oid":"5bdbc983489c2cb9f85e4a93"},"name":"xiao","gz":66.77}
{"_id":{"$oid":"5bdbc9a2489c2cb9f85e4a94"},"name":"xiao2","gz":6687.0}
{"_id":{"$oid":"5bdbca41489c2cb9f85e4a95"},"pay":3}
{"_id":{"$oid":"5bdbca72489c2cb9f85e4a96"},"pay":3}
{"_id":{"$oid":"5bdbcab9489c2cb9f85e4a97"},"pay":{"$numberLong":"31415"}}
{"_id":{"$oid":"5bdbcba5489c2cb9f85e4a98"},"name":"lucy","like":["girl","eat","game"]}
[root@H51 mdb]# 
> exit
bye
[root@H51 ~]# vim /etc/profile
[root@H51 ~]# tail -1 /etc/profile
export  PATH=/usr/local/mongodb/bin/:$PATH

[root@H51 ~]# source /etc/profile

[root@H51 ~]# mongod
mongod     mongodump  
[root@H51 ~]# mongod
mongod     mongodump  
[root@H51 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop      
[root@H51 ~]# 


[root@H51 ~]# mongoimport  --host   192.168.4.51  --port 27051 \   ## 注意标题也导入了 新表stutab
> -d db2  -c stutab -f name,age  --type=csv  /mdb/userdb-t2.csv

2018-11-02T15:49:59.051+0800	connected to: 192.168.4.51:27051
2018-11-02T15:49:59.204+0800	imported 12 documents

[root@H51 ~]# linkm127
........................
> show dbs
admin   0.000GB
config  0.000GB
db2     0.000GB
gamedb  0.000GB
local   0.000GB
userdb  0.000GB
> use db2
switched to db db2
> db
db2
> show tables
stutab
> db.stutab.find()
{ "_id" : ObjectId("5bdc01a7bfd0067a748d375c"), "name" : "name", "age" : "age" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d375d"), "name" : "zhangsan", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d375e"), "name" : "xiaowu", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d375f"), "name" : "xixi", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3760"), "name" : "xixi", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3761"), "name" : "", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3762"), "name" : "jerry", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3763"), "name" : "lucy", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3764"), "name" : "", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3765"), "name" : "", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3766"), "name" : "jerry", "age" : "" }
{ "_id" : ObjectId("5bdc01a7bfd0067a748d3767"), "name" : "", "age" : "" }
> 

[root@H51 mdb]# head -3 /mdb/userdb-t2.csv
name,age
zhangsan,
xiaowu,      
 ## 注意标题name,age 没有导入 新表stutab ,是 --headerline 的作用 --drop 表示若有同名表则清空表数据,即新数据覆盖旧数据

[root@H51 mdb]# mongoimport  --host   192.168.4.51  --port 27051  -d db2  -c stutab   --headerline  --drop --type=csv  /mdb/userdb-t2.csv

2018-11-02T16:02:38.536+0800	connected to: 192.168.4.51:27051
2018-11-02T16:02:38.536+0800	dropping: db2.stutab
2018-11-02T16:02:38.676+0800	imported 11 documents

[root@H51 mdb]# 

> db.stutab.find()
{ "_id" : ObjectId("5bdc049ebfd0067a748d3782"), "name" : "zhangsan", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3783"), "name" : "xiaowu", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3784"), "name" : "xixi", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3785"), "name" : "xixi", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3786"), "name" : "", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3787"), "name" : "jerry", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3788"), "name" : "lucy", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d3789"), "name" : "", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d378a"), "name" : "", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d378b"), "name" : "jerry", "age" : "" }
{ "_id" : ObjectId("5bdc049ebfd0067a748d378c"), "name" : "", "age" : "" }
> use userdb
switched to db userdb
> show tables
t1
t2
> db.t2.find()
{ "_id" : ObjectId("5bdbc867489c2cb9f85e4a8f"), "name" : "zhangsan", "家庭地址" : "北京", "class" : "nod1888" }
{ "_id" : ObjectId("5bdbc8d4489c2cb9f85e4a90"), "name" : "xiaowu", "jiehun" : true }
{ "_id" : ObjectId("5bdbc8f9489c2cb9f85e4a91"), "name" : "xixi", "hun" : false }
{ "_id" : ObjectId("5bdbc915489c2cb9f85e4a92"), "name" : "xixi", "car" : null }
{ "_id" : ObjectId("5bdbe960489c2cb9f85e4a99"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello world\";?> */}" } }
{ "_id" : ObjectId("5bdbe9d9489c2cb9f85e4a9a"), "name" : "jerry", "day" : ISODate("2018-11-02T06:08:25.125Z") }
{ "_id" : ObjectId("5bdbeb0f489c2cb9f85e4a9c"), "name" : "lucy", "stuid" : ObjectId("5bdbeb0f489c2cb9f85e4a9b") }
{ "_id" : ObjectId("5bdbeda8489c2cb9f85e4a9e"), "tarena" : { "addr" : "bj", "tel" : "49991888" } }
{ "_id" : ObjectId("5bdbeee3489c2cb9f85e4a9f"), "lg" : "php", "code" : { "code" : "function (){/* <?php echo \"hello boy\";?> */}" } }
{ "_id" : ObjectId("5bdbef06489c2cb9f85e4aa0"), "name" : "jerry", "day" : ISODate("2018-11-02T06:30:30.897Z") }
{ "_id" : ObjectId("5bdbef5b489c2cb9f85e4aa1"), "cpmment" : "match null line", "bds" : /^$/ }
> 

> show dbs
admin   0.000GB
config  0.000GB
db2     0.000GB
gamedb  0.000GB
local   0.000GB
userdb  0.000GB
> use db2
switched to db db2

> show tables
stutab

> db.stutab.count()
11
> 

[root@H51 mdb]# cp /etc/passwd  /mdb/
[root@H51 mdb]# ls
passwd  userdb-t1.json  userdb-t2.csv
[root@H51 mdb]# sed -i  's/:/,/g' passwd 

[root@H51 mdb]# head -2 passwd
root,x,0,0,root,/root,/bin/bash
bin,x,1,1,bin,/bin,/sbin/nologin

[root@H51 mdb]# sed -n $= passwd
41
[root@H51 mdb]# sed -i '1iname,password,uid,gid,comment,homedir,shell' passwd  ## 插入标题

[root@H51 mdb]# head -2 passwd
name,password,uid,gid,comment,homedir,shell
root,x,0,0,root,/root,/bin/bash
                                                 ## 导入数据 格式csv
[root@H51 mdb]# mongoimport --host 192.168.4.51 --port 27051  -d db2 \
> -c  stutab2  --headerline  --type=csv  passwd 

2018-11-02T16:44:50.052+0800	connected to: 192.168.4.51:27051
2018-11-02T16:44:50.164+0800	imported 41 documents

[root@H51 mdb]# 
> db
db2
> show tables
stutab
stutab2
> db.stutab2.find()     ##默认一次最多显示20行,可用it 多次执行查询,每次最多显示20行
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37ac"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37ad"), "name" : "bin", "password" : "x", "uid" : 1, "gid" : 1, "comment" : "bin", "homedir" : "/bin", "shell" : "/sbin/nologin" }
..............................
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37bf"), "name" : "saslauth", "password" : "x", "uid" : 996, "gid" : 76, "comment" : "Saslauthd user", "homedir" : "/run/saslauthd", "shell" : "/sbin/nologin" }

Type "it" for more

> it      ##默认一次最多显示20行,可用it 多次执行查询,每次最多显示20行

{ "_id" : ObjectId("5bdc0e82bfd0067a748d37c0"), "name" : "abrt", "password" : "x", "uid" : 173, "gid" : 173, "comment" : "", "homedir" : "/etc/abrt", "shell" : "/sbin/nologin" }
......................................................
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37d3"), "name" : "lisi", "password" : "x", "uid" : 1000, "gid" : 1000, "comment" : "lisi", "homedir" : "/home/lisi", "shell" : "/bin/bash" }
Type "it" for more

> it
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37d4"), "name" : "mysql", "password" : "x", "uid" : 27, "gid" : 27, "comment" : "MySQL Server", "homedir" : "/var/lib/mysql", "shell" : "/bin/false" }
> 
> db
db2
> show tables
stutab
stutab2
> db.stutab2.count()
41
> db.stutab2.find({name:"root"})
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37ac"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
> 
                                ## 导出 格式 json
[root@H51 mdb]# mongoexport  --host 192.168.4.51  --port 27051 \
> -d  db2 -c  stutab2  --type=json > /mdb/db2-stutab2.json

2018-11-02T17:01:56.513+0800	connected to: 192.168.4.51:27051
2018-11-02T17:01:56.514+0800	exported 41 records

[root@H51 mdb]# ls
db2-stutab2.json  passwd  userdb-t1.json  userdb-t2.csv

[root@H51 mdb]# head -3 /mdb/db2-stutab2.json
{"_id":{"$oid":"5bdc0e82bfd0067a748d37ac"},"name":"root","password":"x","uid":0,"gid":0,"comment":"root","homedir":"/root","shell":"/bin/bash"}
{"_id":{"$oid":"5bdc0e82bfd0067a748d37ad"},"name":"bin","password":"x","uid":1,"gid":1,"comment":"bin","homedir":"/bin","shell":"/sbin/nologin"}
{"_id":{"$oid":"5bdc0e82bfd0067a748d37ae"},"name":"daemon","password":"x","uid":2,"gid":2,"comment":"daemon","homedir":"/sbin","shell":"/sbin/nologin"}


[root@H51 mdb]# 
                                       ## 导出 格式 csv
[root@H51 mdb]# mongoexport  --host 192.168.4.51  --port 27051 \
> -d db2 -c stutab2 -f name,password,uid,gid,shell   --type=csv > /mdb/db2-stutab2.csv
2018-11-02T17:08:30.842+0800	connected to: 192.168.4.51:27051
2018-11-02T17:08:30.842+0800	exported 41 records
[root@H51 mdb]# ls
db2-stutab2.csv  db2-stutab2.json  passwd  userdb-t1.json  userdb-t2.csv

[root@H51 mdb]# head -3 /mdb/db2-stutab2.csv
name,password,uid,gid,shell
root,x,0,0,/bin/bash
bin,x,1,1,/sbin/nologin
[root@H51 mdb]# 

[root@H51 mdb]# mongodump  --host 192.168.4.51 --port 27051

2018-11-02T17:18:32.816+0800	writing admin.system.version to 
2018-11-02T17:18:32.817+0800	done dumping admin.system.version (1 document)
2018-11-02T17:18:32.817+0800	writing db2.stutab2 to 
2018-11-02T17:18:32.817+0800	writing db2.stutab to 
2018-11-02T17:18:32.817+0800	writing userdb.t2 to 
2018-11-02T17:18:32.817+0800	writing userdb.t1 to 
2018-11-02T17:18:32.819+0800	done dumping db2.stutab2 (41 documents)
2018-11-02T17:18:32.819+0800	writing gamedb.t2 to 
2018-11-02T17:18:32.819+0800	done dumping db2.stutab (11 documents)
2018-11-02T17:18:32.820+0800	done dumping gamedb.t2 (1 document)
2018-11-02T17:18:32.821+0800	done dumping userdb.t2 (11 documents)
2018-11-02T17:18:32.821+0800	done dumping userdb.t1 (6 documents)
[root@H51 mdb]# ls
db2-stutab2.csv  db2-stutab2.json  dump  passwd  userdb-t1.json  userdb-t2.csv
[root@H51 mdb]# ls dump/   ## local  ,test 这2个数据库没有备份
admin  db2  gamedb  userdb

[root@H51 mdb]# 
[root@H51 mdb]# bsondump ./dump/^C
[root@H51 mdb]# ls
db2-stutab2.csv  db2-stutab2.json  dump  passwd  userdb-t1.json  userdb-t2.csv

[root@H51 mdb]# mkdir /mdb2
[root@H51 mdb]# cd /mdb2/
[root@H51 mdb2]# mongodump  --host 192.168.4.51 --port 27051  -o /mdb2
....................................
[root@H51 mdb2]# ls
admin  db2  gamedb  userdb
[root@H51 mdb2]# mkdir /mdb3;cd /mdb3
                                                                    -c 表 -o 指定备份目录
[root@H51 mdb3]# mongodump  --host 192.168.4.51 --port 27051 -d db2 -c stutab2  -o /mdb2

[root@H51 mdb3]# mongodump  --host 192.168.4.51 --port 27051 -d db2 -c stutab2  -o /mdb3

2018-11-02T17:26:15.818+0800	writing db2.stutab2 to 
2018-11-02T17:26:15.818+0800	done dumping db2.stutab2 (41 documents)

[root@H51 mdb3]# ls
db2
[root@H51 mdb3]# ls db2/
stutab2.bson  stutab2.metadata.json

> db
db2
> show tables
stutab
stutab2
> db.stutab2.drop()
true
> show tables
stutab


[root@H51 mdb3]# ls db2/stutab2.bson 
db2/stutab2.bson

[root@H51 mdb3]# mongorestore  --host 192.168.4.51 --port 27051 -d db2 -c stutab2 /mdb3/db2/stutab2.bson 

2018-11-02T17:36:34.676+0800	checking for collection data in /mdb3/db2/stutab2.bson
2018-11-02T17:36:34.677+0800	reading metadata for db2.stutab2 from /mdb3/db2/stutab2.metadata.json
2018-11-02T17:36:34.794+0800	restoring db2.stutab2 from /mdb3/db2/stutab2.bson
2018-11-02T17:36:34.858+0800	no indexes to restore
2018-11-02T17:36:34.858+0800	finished restoring db2.stutab2 (41 documents)
2018-11-02T17:36:34.858+0800	done

[root@H51 mdb3]# 

> show tables
stutab
stutab2
> db.stutab2.count()
41
> db.stutab2.find({name:"root"})
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37ac"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
> 

[root@H51 mdb]# mongodump  --host 192.168.4.51 --port 27051

2018-11-02T17:18:32.816+0800	writing admin.system.version to 
2018-11-02T17:18:32.817+0800	done dumping admin.system.version (1 document)
2018-11-02T17:18:32.817+0800	writing db2.stutab2 to 
2018-11-02T17:18:32.817+0800	writing db2.stutab to 
2018-11-02T17:18:32.817+0800	writing userdb.t2 to 
2018-11-02T17:18:32.817+0800	writing userdb.t1 to 
2018-11-02T17:18:32.819+0800	done dumping db2.stutab2 (41 documents)
2018-11-02T17:18:32.819+0800	writing gamedb.t2 to 
2018-11-02T17:18:32.819+0800	done dumping db2.stutab (11 documents)
2018-11-02T17:18:32.820+0800	done dumping gamedb.t2 (1 document)
2018-11-02T17:18:32.821+0800	done dumping userdb.t2 (11 documents)
2018-11-02T17:18:32.821+0800	done dumping userdb.t1 (6 documents)
[root@H51 mdb]# ls
db2-stutab2.csv  db2-stutab2.json  dump  passwd  userdb-t1.json  userdb-t2.csv
[root@H51 mdb]# ls dump/   ## local  ,test 这2个数据库没有备份
admin  db2  gamedb  userdb
[root@H51 mdb]# 

> db.stutab2.count()
41
> db.stutab2.find({name:"root"})
{ "_id" : ObjectId("5bdc0e82bfd0067a748d37ac"), "name" : "root", "password" : "x", "uid" : 0, "gid" : 0, "comment" : "root", "homedir" : "/root", "shell" : "/bin/bash" }
> db
db2
> db.dropDatabase()
{ "dropped" : "db2", "ok" : 1 }
> db
db2
> show dbs
admin   0.000GB
config  0.000GB
gamedb  0.000GB
local   0.000GB
userdb  0.000GB
> use  userdb
switched to db userdb
> show tables
t1
t2
> db.t1.drop()
true
> db.t2.drop()
true
> show tables
> db
userdb
> db.dropDatabase()
{ "dropped" : "userdb", "ok" : 1 }
> show dbs
admin   0.000GB
config  0.000GB
gamedb  0.000GB
local   0.000GB
> db
userdb
> use  gamedb  ## 切换库
switched to db gamedb
> show tables
t2
> db.t2.drop()
true
> show tables
> db
gamedb
> db.dropDatabase()  ##删除数据库
{ "dropped" : "gamedb", "ok" : 1 }
> show  dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> exit
bye
[root@H51 ~]# 





[root@H52 ~]# redis-cli -h 192.168.4.52  -p 6352
192.168.4.52:6352> info replication
# Replication
role:master
connected_slaves:1
slave0:ip=192.168.4.53,port=6353,state=online,offset=2982,lag=1
master_replid:06cbe6f214f8d9b1f4916c2af11fbd9457ced392
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:2982
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:2982
192.168.4.52:6352> shutdown
not connected> exit
[root@H52 ~]# vim  /etc/redis/6379.conf 
[root@H52 ~]# sed -n 302p  /etc/redis/6379.conf
slave-serve-stale-data yes
[root@H52 ~]# sed -n 282p  /etc/redis/6379.conf
# slaveof <masterip> <masterport>

[root@H52 ~]# /etc/init.d/redis_6379  start
Starting Redis server...
[root@H52 ~]# 
[root@H52 ~]# /etc/init.d/redis_6379  status
Redis is running (2232)
[root@H52 ~]# netstat -anpult |grep redis-server
tcp        0      0 192.168.4.52:6352       0.0.0.0:*               LISTEN      2232/redis-server 1 
tcp        0      0 192.168.4.52:6352       192.168.4.53:45479      ESTABLISHED 2232/redis-server 1 
[root@H52 ~]# 
[root@H52 ~]# /etc/init.d/redis_6379  stop
Stopping ...
Redis stopped
[root@H52 ~]# /etc/init.d/redis_6379  start
Starting Redis server...
[root@H52 ~]# netstat -anpult |grep redis-server
tcp        0      0 192.168.4.52:6352       0.0.0.0:*               LISTEN      2526/redis-server 1 
[root@H52 ~]# redis-cli -h 192.168.4.52  -p 6352
192.168.4.52:6352> info replication
# Replication
role:master
connected_slaves:0
master_replid:fee98a71f4a9c914300eac914c92d48283f92eb3
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0
192.168.4.52:6352> exit
[root@H52 ~]# 
[root@H52 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H52 ~]# mkdir  -p /usr/local/mongodb/data/db

[root@H52 ~]# cd /usr/local/mongodb/;ls
data
[root@H52 mongodb]# mkdir  etc  log
[root@H52 mongodb]# ls -A
data  etc  log
[root@H52 mongodb]# ls data/db/
[root@H52 mongodb]# cd
[root@H52 ~]# ls mongodb-linux-x86_64-rhel70-3.6.3/
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES

[root@H52 ~]# cp -r  mongodb-linux-x86_64-rhel70-3.6.3/bin/ /usr/local/mongodb/

[root@H52 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop

[root@H52 ~]# ls /usr/local/mongodb/
bin  data  etc  log
[root@H52 ~]# 
[root@H52 ~]# vim /usr/local/mongodb/etc/mongodb.conf

[root@H52 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27052
bind_ip=192.168.4.52

[root@H52 ~]# 
[root@H52 ~]# vim  /root/.bashrc 

[root@H52 ~]# head -4  /root/.bashrc
# .bashrc
alias  mstart="/usr/local/mongodb/bin/mongod  -f /usr/local/mongodb/etc/mongodb.conf"
alias  mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
alias  linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.52  --port 27052"

[root@H52 ~]# vim  /etc/profile

[root@H52 ~]# tail -2 /etc/profile
unset -f pathmunge
export PATH=/usr/local/mongodb/bin/:$PATH
[root@H52 ~]# ps -C mongod
  PID TTY          TIME CMD

[root@H52 ~]# source /etc/profile

[root@H52 ~]# echo $?
0
[root@H52 ~]# mstart="/usr/local/mongodb/bin/mongod  -f /usr/local/mongodb/etc/mongodb.conf"

[root@H52 ~]# alias mstart="/usr/local/mongodb/bin/mongod  -f /usr/local/mongodb/etc/mongodb.conf"

[root@H52 ~]# alias  mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"

[root@H52 ~]# alias  linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.52  --port 27052"
[root@H52 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 7672
child process started successfully, parent exiting

[root@H52 ~]# ps -C mongod
  PID TTY          TIME CMD
 7672 ?        00:00:00 mongod
[root@H52 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.52:27052      0.0.0.0:*               LISTEN      7672/mongod         
   
[root@H52 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop      
[root@H52 ~]# link
link      linkm127  

[root@H52 ~]# alias |grep link
alias linkm127='/usr/local/mongodb/bin/mongo  --host 192.168.4.52  --port 27052'

[root@H52 ~]# linkm127 
MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.52:27052/
.......................................
2018-11-02T19:13:06.642+0800 I CONTROL  [initandlisten] 
> show dbs
admin  0.000GB
local  0.000GB
> db 
test
> exit
bye
     
[root@H52 ~]# mst
mstart  mstop   
[root@H52 ~]# mstop
killing process with pid: 7672

[root@H52 ~]# netstat -anpult |grep mongod

[root@H52 ~]# ps -C mongod
  PID TTY          TIME CMD

[root@H52 ~]# mstart
about to fork child process, waiting until server is ready for connections.
forked process: 7738
child process started successfully, parent exiting

[root@H52 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.52:27052      0.0.0.0:*               LISTEN      7738/mongod         
[root@H52 ~]# 








[root@H53 ~]# redis-cli -h 192.168.4.53  -p 6353
192.168.4.53:6353> info replication
# Replication
role:slave
master_host:192.168.4.52
master_port:6352
master_link_status:up
master_last_io_seconds_ago:0
master_sync_in_progress:0
slave_repl_offset:3052
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:06cbe6f214f8d9b1f4916c2af11fbd9457ced392
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:3052
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:3052
192.168.4.53:6353> exit
[root@H53 ~]# 

[root@H53 ~]# sed -n 282,283p  /etc/redis/6379.conf
# slaveof <masterip> <masterport>
slaveof  192.168.4.52  6352

[root@H53 ~]# vim /etc/redis/6379.conf 

[root@H53 ~]# sed -n 282,283p  /etc/redis/6379.conf
# slaveof <masterip> <masterport>
#slaveof  192.168.4.52  6352

[root@H53 ~]# /etc/init.d/redis_6379 stop
Stopping ...
Waiting for Redis to shutdown ...
Redis stopped
[root@H53 ~]# /etc/init.d/redis_6379 start
Starting Redis server...
[root@H53 ~]# 
[root@H53 ~]# redis-cli -h 192.168.4.53  -p 6353
192.168.4.53:6353> info replication
# Replication
role:master
connected_slaves:0
master_replid:dab97066e2b34beff19207c8ab74eeb9b0161fc8
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:0
second_repl_offset:-1
repl_backlog_active:0
repl_backlog_size:1048576
repl_backlog_first_byte_offset:0
repl_backlog_histlen:0
192.168.4.53:6353> exit
[root@H53 ~]# 

[root@H53 ~]#  ll redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz 
-rw-r--r--. 1 root root 99293317 10月 29 20:19 redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H53 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H53 ~]# mkdir  -p  /usr/local/mongodb/{data,etc,log}

[root@H53 ~]# mkdir  /usr/local/mongodb/data/db

[root@H53 ~]# cd /usr/local/mongodb/;ls
data  etc  log
[root@H53 mongodb]# ls -ld /usr/local/mongodb/data/db/
drwxr-xr-x. 2 root root 6 11月  2 19:25 /usr/local/mongodb/data/db/

[root@H53 mongodb]# cd
[root@H53 ~]# ls mongodb-linux-x86_64-rhel70-3.6.3/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop

[root@H53 ~]# cp -r  mongodb-linux-x86_64-rhel70-3.6.3/bin/  /usr/local/mongodb/

[root@H53 ~]# ls /usr/local/mongodb/
bin  data  etc  log
[root@H53 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop
[root@H53 ~]# 
[root@H53 ~]# vim /usr/local/mongodb/etc/mongodb.conf

[root@H53 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27053
bind_ip=192.168.4.53

[root@H53 ~]# vim /root/.bashrc 

[root@H53 ~]# head -4 /root/.bashrc
# .bashrc
alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.53  --port  27053"

[root@H53 ~]# alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
[root@H53 ~]# alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
[root@H53 ~]# alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.53  --port  27053"

[root@H53 ~]# mstart 
about to fork child process, waiting until server is ready for connections.
forked process: 9799
child process started successfully, parent exiting

[root@H53 ~]# vim  /etc/profile

[root@H53 ~]# tail -2  /etc/profile

unset -f pathmunge
export  PATH=/usr/local/mongodb/bin/:$PATH

[root@H53 ~]# source /etc/profile
 
[root@H53 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop   
   
[root@H53 ~]# mongod  -h |grep shutdown
                                        interrupted by shutdown
  --shutdown                            kill a running server (for init 
[root@H53 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.53:27053      0.0.0.0:*               LISTEN      9799/mongod         
[root@H53 ~]# mstop 
killing process with pid: 9799

[root@H53 ~]# ps -C mongod
  PID TTY          TIME CMD

[root@H53 ~]# netstat -anpult |grep mongod

[root@H53 ~]# mstart 

about to fork child process, waiting until server is ready for connections.
forked process: 9978
child process started successfully, parent exiting

[root@H53 ~]# linkm127 

MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.53:27053/
MongoDB server version: 3.6.3
Welcome to the MongoDB shell.
For interactive help, type "help".
..................................
> show dbs
admin  0.000GB
local  0.000GB
> db
test
> exit
bye
[root@H53 ~]#  netstat -anpult |grep mongod
tcp        0      0 192.168.4.53:27053      0.0.0.0:*               LISTEN      9978/mongod         
[root@H53 ~]# 
[root@H53 ~]# linkm127 
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db
test
> exit
bye
[root@H53 ~]# 



[root@H54 ~]#  ll redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz 
-rw-r--r--. 1 root root 99293317 10月 29 20:19 redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H54 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H54 ~]# mkdir -p  /usr/local/mongodb/{data,etc,log}

[root@H54 ~]# mkdir  /usr/local/mongodb/data/db

[root@H54 ~]# ls mongodb-linux-x86_64-rhel70-3.6.3/
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES

[root@H54 ~]# cp  -r mongodb-linux-x86_64-rhel70-3.6.3/bin/  /usr/local/mongodb/

[root@H54 ~]# ls  /usr/local/mongodb/
bin  data  etc  log

[root@H54 ~]# ls  /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop

[root@H54 ~]# vim /usr/local/mongodb/etc/mongodb.conf

[root@H54 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27054
bind_ip=192.168.4.54

[root@H54 ~]# alias  mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"

[root@H54 ~]# mstart  
about to fork child process, waiting until server is ready for connections.
forked process: 8051
child process started successfully, parent exiting

[root@H54 ~]# ps -C mongod
  PID TTY          TIME CMD
 8051 ?        00:00:00 mongod

[root@H54 ~]# vim /etc/profile

[root@H54 ~]# tail -2 /etc/profile
unset -f pathmunge
export PATH=/usr/local/mongodb/bin/:$PATH

[root@H54 ~]# source  /etc/profile

[root@H54 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop  
    
[root@H54 ~]# mongod  -h |grep  shutdown
                                        interrupted by shutdown
  --shutdown                            kill a running server (for init 

[root@H54 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.54:27054      0.0.0.0:*       LISTEN      8051/mongod  
       
[root@H54 ~]# alias  mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf"

[root@H54 ~]# vim /root/.bashrc 

[root@H54 ~]# head -4 /root/.bashrc

# .bashrc
alias  mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
alias  mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f  /usr/local/mongodb/etc/mongodb.conf"
alias  linkm127="/usr/local/mongodb/bin/mongo  --host  192.168.4.54  --port 27054"

[root@H54 ~]# mstop 
killing process with pid: 8051

[root@H54 ~]# netstat -anpult |grep mongod
[root@H54 ~]# 
[root@H54 ~]# alias  linkm127="/usr/local/mongodb/bin/mongo  --host  192.168.4.54  --port 27054"

[root@H54 ~]# mstart 

about to fork child process, waiting until server is ready for connections.
forked process: 8233
child process started successfully, parent exiting

[root@H54 ~]# linkm127 
....................
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db
test
> exit
bye
[root@H54 ~]# 




[root@H55 ~]#  ll redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz 
-rw-r--r--. 1 root root 99293317 10月 29 20:19 redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H55 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

[root@H55 ~]# mkdir -p /usr/local/mongodb/{data/db,etc,log}

[root@H55 ~]# ls /usr/local/mongodb/
data  etc  log
[root@H55 ~]# ls -ld  /usr/local/mongodb/data/db/
drwxr-xr-x. 2 root root 6 11月  2 19:53 /usr/local/mongodb/data/db/

[root@H55 ~]# ls  mongodb-linux-x86_64-rhel70-3.6.3/
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES

[root@H55 ~]# cp -r  mongodb-linux-x86_64-rhel70-3.6.3/bin/  /usr/local/mongodb/

[root@H55 ~]# ls /usr/local/mongodb/
bin  data  etc  log
[root@H55 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop

[root@H55 ~]# vim  /usr/local/mongodb/etc/mongodb.conf

[root@H55 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27055
bind_ip=192.168.4.55

[root@H55 ~]# vi
vi         vigr       vimdiff    vinagre    virtlockd  virt-what  
view       vim        vimtutor   vipw       virtlogd   visudo     
[root@H55 ~]# vim  /root/.bashrc 

[root@H55 ~]# head -4 /root/.bashrc
# .bashrc
alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.55  --port  27055"

[root@H55 ~]# alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
[root@H55 ~]# alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
[root@H55 ~]# alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.55  --port  27055"

[root@H55 ~]# mstart 
about to fork child process, waiting until server is ready for connections.
forked process: 8240
child process started successfully, parent exiting

[root@H55 ~]# ps -C mongod
  PID TTY          TIME CMD
 8240 ?        00:00:00 mongod

[root@H55 ~]# vim  /etc/profile

[root@H55 ~]# tail -2 /etc/profile
unset -f pathmunge
export  PATH=/usr/local/mongodb/bin/:$PATH

[root@H55 ~]# source /etc/profile

[root@H55 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop   

[root@H55 ~]# mongod  -h |grep -E "--shutdown"
grep：无法识别的选项“--shutdown”
用法: grep [选项]... PATTERN [FILE]...
试用‘grep --help’来获得更多信息。

[root@H55 ~]# mongod  -h |grep  "\-\-shutdown"
  --shutdown                            kill a running server (for init 

[root@H55 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.55:27055      0.0.0.0:*        LISTEN      8240/mongod   
      
[root@H55 ~]# mstop 
killing process with pid: 8240

[root@H55 ~]# netstat -anpult |grep mongod

[root@H55 ~]# mstart 

[root@H55 ~]# linkm127 

MongoDB shell version v3.6.3
connecting to: mongodb://192.168.4.55:27055/
MongoDB server version: 3.6.3
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
	http://docs.mongodb.org/
Questions? Try the support group
	http://groups.google.com/group/mongodb-user
................................
> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> db
test
> exit
bye
[root@H55 ~]# ls /usr/local/mongodb/
bin  data  etc  log
[root@H55 ~]# ls /usr/local/mongodb/log/
mongodb.log

[root@H55 ~]# ls /usr/local/mongodb/data/db/

collection-0--2397757875955075560.wt  index-5--2397757875955075560.wt  storage.bson
collection-2--2397757875955075560.wt  index-6--2397757875955075560.wt  WiredTiger
collection-4--2397757875955075560.wt  journal                          WiredTigerLAS.wt
diagnostic.data                       _mdb_catalog.wt                  WiredTiger.lock
index-1--2397757875955075560.wt       mongod.lock                      WiredTiger.turtle
index-3--2397757875955075560.wt       sizeStorer.wt                    WiredTiger.wt

[root@H55 ~]# ls /usr/local/mongodb/etc/
mongodb.conf
[root@H55 ~]# 










[root@H56 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz

show dbs
db
exit
echo -e "show dbs\ndb\nexit"

[root@H56 ~]# mkdir  -p /usr/local/mongodb/{data/db,etc,log}

[root@H56 ~]# ls  mongodb-linux-x86_64-rhel70-3.6.3/
bin  GNU-AGPL-3.0  MPL-2  README  THIRD-PARTY-NOTICES

[root@H56 ~]# cp -r mongodb-linux-x86_64-rhel70-3.6.3/bin/  /usr/local/mongodb/

[root@H56 ~]# ls  /usr/local/mongodb/
bin  data  etc  log

[root@H56 ~]# ls /usr/local/mongodb/bin/
bsondump         mongo   mongodump    mongofiles   mongoperf    mongorestore  mongostat
install_compass  mongod  mongoexport  mongoimport  mongoreplay  mongos        mongotop

[root@H56 ~]# ls /usr/local/mongodb/data/db/

[root@H56 ~]# vim /usr/local/mongodb/etc/mongodb.conf

[root@H56 ~]# cat /usr/local/mongodb/etc/mongodb.conf

logpath=/usr/local/mongodb/log/mongodb.log
logappend=true
dbpath=/usr/local/mongodb/data/db
fork=true
port=27056
bind_ip=192.168.4.56
[root@H56 ~]# 
[root@H56 ~]# vim /root/.bashrc 

[root@H56 ~]# head -4 /root/.bashrc
# .bashrc
alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.56  --port  27056"

[root@H56 ~]# alias mstart="/usr/local/mongodb/bin/mongod  -f  /usr/local/mongodb/etc/mongodb.conf"
[root@H56 ~]# alias mstop="/usr/local/mongodb/bin/mongod  --shutdown  -f /usr/local/mongodb/etc/mongodb.conf"
[root@H56 ~]# alias linkm127="/usr/local/mongodb/bin/mongo  --host 192.168.4.56  --port  27056"

[root@H56 ~]# mstart 
.................

[root@H56 ~]# ps -C mongod
  PID TTY          TIME CMD
 8728 ?        00:00:00 mongod

[root@H56 ~]# vim /etc/profile

[root@H56 ~]# tail -2 /etc/profile
unset -f pathmunge
export PATH=/usr/local/mongodb/bin/:$PATH

[root@H56 ~]# source  /etc/profile

[root@H56 ~]# mongo
mongo         mongodump     mongofiles    mongoperf     mongorestore  mongostat     
mongod        mongoexport   mongoimport   mongoreplay   mongos        mongotop   
   
[root@H56 ~]# mongod -h |grep  \-\-shutdown
grep：无法识别的选项“--shutdown”
用法: grep [选项]... PATTERN [FILE]...
试用‘grep --help’来获得更多信息。

[root@H56 ~]# mongod -h |grep  '\-\-shutdown'
  --shutdown                            kill a running server (for init 
[root@H56 ~]# mstop 
killing process with pid: 8728
[root@H56 ~]# ps -C mongod
  PID TTY          TIME CMD
[root@H56 ~]# mstart 
...................................
> show dbs
admin  0.000GB
local  0.000GB
> db
test
> exit
bye
[root@H56 ~]# netstat -anpult |grep mongod
tcp        0      0 192.168.4.56:27056      0.0.0.0:*               LISTEN      8840/mongod         
[root@H56 ~]# 





[root@H57 ~]# tar -xvf  redis/mongodb-linux-x86_64-rhel70-3.6.3.tgz







