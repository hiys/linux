
private1:   inet 192.168.4  .254  --eth0
private2:   inet 192.168.2  .254  --eth1
public1:    inet 201.1  .1  .254  --eth2
public2:    inet 201.1  .2  .254  --eth3
C (32 ) 192-223.0.0.0  [1100  0000] -[1101 1111]  私有地址C 192.168.0.1 ~ 192.168.255.254
A (126) 1  -126.0.0.0  [0000  0001] -[0111 1111]  私有地址A 10.0.0.1    ~ 10.255.255.254

----client (eth0 192.168.4.100    eth3   inet 201.1.2.10           )------

[root@client ~]# ifconfig |grep 'inet '
        inet 192.168.4.100  netmask 255.255.255.0  broadcast 192.168.4.255
        inet 192.168.2.1  netmask 255.255.255.0  broadcast 192.168.2.255
        inet 201.1.2.10  netmask 255.255.255.0  broadcast 201.1.2.255
        inet 127.0.0.1  netmask 255.0.0.0
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255

[root@client ~]# modprobe ip_gre    #加载Linux内核模块
[root@client ~]# lsmod |grep ip_gre  #查看当前计算机已经加载的模块
ip_gre                 22707  0 
ip_tunnel              25163  1 ip_gre
gre                    13144  1 ip_gre

                 ##  创建隧道（隧道名称为tun0）# 设置隧道使用gre模式
[root@client ~]# ip tunnel add tun0 mode gre \
> remote 201.1.2.5 local 201.1.2.10   
##local 本机的IP地址，remote后面是与其他主机建立隧道的对方IP地址
[root@client ~]# ip link show

8: gre0@NONE: <NOARP> mtu 1476 qdisc noop state DOWN mode DEFAULT qlen 1
    link/gre 0.0.0.0 brd 0.0.0.0

10: tun0@NONE: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1476 qdisc noqueue state UNKNOWN mode DEFAULT qlen 1
    link/gre 201.1.2.10 peer 201.1.2.5
[root@client ~]# ip link set tun0 up  ## ）启用该隧道
[root@client ~]# ip link show

[root@client ~]# ip addr
address    addrlabel  
             ----- 创建一个虚拟VPN隧道(10.10.10.0/24)为VPN配置隧道IP地址
[root@client ~]# ip address add  10.10.10.10/24  peer 10.10.10.5/24 dev tun0
#为隧道tun0设置本地IP地址（10.10.10.10/24)//隧道对面的主机的隧道IP为10.10.10.5/24

[root@client ~]# ip address show tun0    //查看VPN隧道tun0的 IP地址
10: tun0@NONE: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1476 qdisc noqueue state UNKNOWN qlen 1
    link/gre 201.1.2.10 peer 201.1.2.5
    inet 10.10.10.10 peer 10.10.10.5/24 scope global tun0

[root@client ~]# firewall-cmd --set-default-zone=trusted #）关闭防火墙
===========================================================

[root@client ~]# nmcli connection modify eth3 ipv4.method manual ipv4.addresses 201.1.2.200/24 ipv4.gateway 201.1.2.254  connection.autoconnect yes
[root@client ~]# nmcli connection up eth3
连接已成功激活（D-Bus 活动路径：/org/freedesktop/NetworkManager/ActiveConnection/24）
[root@client ~]# ifconfig eth3 |head -3
eth3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 201.1.2.200  netmask 255.255.255.0  broadcast 201.1.2.255

[root@client ~]# yum -y install libreswan 
[root@client ~]# ls lnmp_soft/vpn/
myipsec.conf                  xl2tpd-1.3.8-2.el7.x86_64.rpm
pptpd-1.4.0-2.el7.x86_64.rpm  xl2tp_ipsec.sh
[root@client ~]# cp lnmp_soft/vpn/myipsec.conf  /etc/ipsec.
ipsec.conf     ipsec.d/       ipsec.secrets  

[root@client ~]# cp lnmp_soft/vpn/myipsec.conf  /etc/ipsec.d/
[root@client ~]# ls /etc/ipsec.d/
myipsec.conf  policies  v6neighbor-hole.conf
[root@client ~]# vim /etc/ipsec.d/myipsec.conf 
[root@client ~]# cat /etc/ipsec.d/myipsec.conf
conn IDC-PSK-NAT
    rightsubnet=vhost:%priv
    also=IDC-PSK-noNAT

conn IDC-PSK-noNAT
    authby=secret
        ike=3des-sha1;modp1024
        phase2alg=aes256-sha1;modp2048
    pfs=no
    auto=add
    keyingtries=3
    rekey=no
    ikelifetime=8h
    keylife=3h
    type=transport
    left=201.1.2.200
    leftprotoport=17/1701
    right=%any
    rightprotoport=17/%any
[root@client ~]#
[root@client ~]# tail -1 /etc/ipsec.conf
include /etc/ipsec.d/*.conf
[root@client ~]# vim /etc/ipsec.d/mypass.secrets
[root@client ~]# cat /etc/ipsec.d/mypass.secrets
201.1.2.200  %any:  PSK   "randpass"
[root@client ~]#  systemctl start ipsec
[root@client ~]# netstat -anptul |grep pluto
udp        0      0 127.0.0.1:4500          0.0.0.0:*                           7209/pluto          
udp        0      0 192.168.4.100:4500      0.0.0.0:*                           7209/pluto          
udp        0      0 192.168.2.1:4500        0.0.0.0:*                           7209/pluto          
udp        0      0 201.1.2.200:4500        0.0.0.0:*                           7209/pluto          
udp        0      0 192.168.122.1:4500      0.0.0.0:*                           7209/pluto          
udp        0      0 10.10.10.10:4500        0.0.0.0:* 
.....
[root@client ~]# ls lnmp_soft/vpn/
myipsec.conf                  xl2tpd-1.3.8-2.el7.x86_64.rpm
pptpd-1.4.0-2.el7.x86_64.rpm  xl2tp_ipsec.sh
[root@client ~]# yum -y install lnmp_soft/vpn/xl2tpd-1.3.8-2.el7.x86_64.rpm |tail -5;

已安装:
  xl2tpd.x86_64 0:1.3.8-2.el7                                                   
完毕！

[root@client ~]# vim /etc/xl2tpd/xl2tpd.conf 
 31 [lns default]
 32 ip range = 192.168.3.128-192.168.3.254
 33 local ip = 201.1.2.200

[root@client ~]# vim /etc/ppp/options.xl2tpd 
 10 #crtscts
 11 require-mschap-v2
 12 idle 1800
 13 mtu 1410
 14 mru 1410
 15 nodefaultroute
 16 debug
 17 #lock
[root@client ~]# tail -2 /etc/ppp/chap-secrets
# client   server	secret	 IP  addresses
jac         *       123     *
[root@client ~]# systemctl start xl2tpd.service 
[root@client ~]# netstat -anptul |grep xl2tpd
udp        0      0 0.0.0.0:1701            0.0.0.0:*                           7674/xl2tpd  

[root@client ~]#  iptables -t nat -A POSTROUTING -s 192.168.3.0/24 \
>  -j SNAT --to-source 201.1.2.200 ;  ##翻墙设置

================================================

[root@client ~]# yum -y install chrony ;

软件包 chrony-3.1-2.el7.x86_64 已安装并且是最新版本
[root@client ~]# rpm -qc chrony
/etc/chrony.conf
/etc/chrony.keys
/etc/logrotate.d/chrony
/etc/sysconfig/chronyd





















---------proxy  (eth0 192.168.4.5      eth3 inet 201.1.2.5  )-----
[root@proxy ~]# ifconfig |grep 'inet '       
 inet 192.168.4.5  netmask 255.255.255.0  broadcast 192.168.4.255
        inet 192.168.2.5  netmask 255.255.255.0  broadcast 192.168.2.255
        inet 201.1.2.5  netmask 255.255.255.0  broadcast 201.1.2.255
        inet 127.0.0.1  netmask 255.0.0.0
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255

[root@proxy ~]# lsmod | head -3 ;   #查看当前计算机已经加载的模块
Module                  Size  Used by
xt_CHECKSUM            12549  1 
iptable_mangle         12695  1 
[root@proxy ~]# lsmod | grep ip_gre //确定是否加载了gre模块
[root@proxy ~]# lsmod |wc -l
90
[root@proxy ~]# modinfo ip_gre    #查看内核模块的信息
filename:       /lib/modules/3.10.0-693.el7.x86_64/kernel/net/ipv4/ip_gre.ko.xz
alias:          netdev-gretap0
alias:          netdev-gre0
alias:          rtnl-link-gretap
alias:          rtnl-link-gre
license:        GPL
rhelversion:    7.4
srcversion:     F37A2BF90692F86E3A8BD15
depends:        ip_tunnel,gre
intree:         Y
vermagic:       3.10.0-693.el7.x86_64 SMP mod_unload modversions 
signer:         Red Hat Enterprise Linux kernel signing key
sig_key:        4F:FD:D6:3C:93:7E:B4:A7:A1:14:BC:5E:89:1A:CB:DE:50:20:65:21
sig_hashalgo:   sha256
parm:           log_ecn_error:Log packets received with corrupted ECN (bool)
[root@proxy ~]# modprobe ip_gre     #加载模块ip_gre
[root@proxy ~]# lsmod |grep ip_gre
ip_gre                 22707  0 
ip_tunnel              25163  1 ip_gre
gre                    13144  1 ip_gre

[root@proxy ~]# ip tunnel add tun0 mode gre \
> remote 201.1.2.10 local 201.1.2.5       
#创建隧道（隧道名称为tun0）,ip tunnel help可以查看帮助
//mode设置隧道使用gre模式//local后面跟本机的IP地址
remote后面是与其他主机建立隧道的对方IP地址

[root@proxy ~]# ip link show |tail -3
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff
10: tun0@NONE: <POINTOPOINT,NOARP> mtu 1476 qdisc noop state DOWN mode DEFAULT qlen 1
    link/gre 201.1.2.5 peer 201.1.2.10
[root@proxy ~]# ip link set tun0 up   ###启用该隧道tun0

[root@proxy ~]# ip link show |tail -3 
    link/ether 00:00:00:00:00:00 brd ff:ff:ff:ff:ff:ff
10: tun0@NONE: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1476 qdisc noqueue state UNKNOWN mode DEFAULT qlen 1
    link/gre 201.1.2.5 peer 201.1.2.10
      @----为VPN配置隧道IP地址  //为隧道tun0设置本地IP地址（10.10.10.5/24）
                  -----------//隧道对面的 peer 主机IP的隧道IP为10.10.10.10/24
[root@proxy ~]# ip address add 10.10.10.5/24 peer 10.10.10.10/24 dev tun0

[root@proxy ~]# ip address show tun0    //查看IP地址 隧道tun0
10: tun0@NONE: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1476 qdisc noqueue state UNKNOWN qlen 1
    link/gre 201.1.2.5 peer 201.1.2.10
    inet 10.10.10.5 peer 10.10.10.10/24 scope global tun0
       valid_lft forever preferred_lft forever
    inet6 fe80::200:5efe:c901:205/64 scope link 
       valid_lft forever preferred_lft forever
  #开启路由转发、关闭防火墙
[root@proxy ~]# vim /proc/sys/net/ipv4/ip_forward
[root@proxy ~]# cat /proc/sys/net/ipv4/ip_forward
1
[root@proxy ~]# firewall-cmd --set-default-zone=trusted

[root@proxy ~]# ping -c2 -i0.2 -w1 10.10.10.5  测试连通性

[root@proxy ~]# ping -c2 -i0.2 -w1 10.10.10.10
[root@proxy ~]# ls /root/lnmp_soft/vpn/
myipsec.conf                  xl2tpd-1.3.8-2.el7.x86_64.rpm
pptpd-1.4.0-2.el7.x86_64.rpm  xl2tp_ipsec.sh

[root@proxy ~]# yum -y install /root/lnmp_soft/vpn/pptpd-1.4.0-2.el7.x86_64.rpm |tail -5

已安装:
  pptpd.x86_64 0:1.4.0-2.el7
[root@proxy ~]# rpm -qc pptpd
/etc/ppp/options.pptpd
/etc/pptpd.conf
/etc/sysconfig/pptpd
[root@proxy ~]# vim /etc/pptpd.conf 
# (Recommended)
localip 201.1.2.5    # //服务器本地IP
remoteip 192.168.3.1-50     //分配给客户端的IP池
# or


[root@proxy ~]# vim /etc/ppp/options.pptpd 

# (must match the second field in /etc/ppp/chap-secrets entries)
name pptpd

require-mschap-v2
# Require MPPE 128-bit encryption
# (note that MPPE requires the use of MSCHAP-V2 during authentication)
require-mppe-128     //使用MPPE加密数据
ms-dns 8.8.8.8           //DNS服务器

[root@proxy ~]# vim /etc/ppp/chap-secrets     //修改账户配置文件
# client   server    secret      IP addresses
jacob      *          123      *
jacob2     *          123      *
###用户名  服务器标记    密码    客户端
[root@proxy ~]# ll /proc/sys/net/ipv4/ip_forward
-rw-r--r--. 1 root root 0 8月  28 08:28 /proc/sys/net/ipv4/ip_forward
[root@proxy ~]# vim /proc/sys/net/ipv4/ip_forward
[root@proxy ~]# cat /proc/sys/net/ipv4/ip_forward # 开启路由转发
1

[root@proxy ~]# systemctl start pptpd && systemctl enable pptpd  #启动服务
Created symlink from /etc/systemd/system/multi-user.target.wants/pptpd.service to /usr/lib/systemd/system/pptpd.service.
                         ###翻墙设置
[root@proxy ~]# iptables -t nat -A POSTROUTING -s 192.168.3.0/24 -j SNAT --to-source 201.1.2.5

=====启动一台Windows虚拟机，将虚拟机网卡桥接到public2，配置IP地址为201.1.2.20。==========
==============================================
[root@proxy ~]#  yum -y install chrony ;
软件包 chrony-3.1-2.el7.x86_64 已安装并且是最新版本

[root@proxy ~]# rpm -qc chrony
/etc/chrony.conf
/etc/chrony.keys
/etc/logrotate.d/chrony
/etc/sysconfig/chronyd

[root@proxy ~]# vim /etc/chrony.conf 
 26 allow 192.168.4.0/24      #允许的客户端
 27 deny 192.168.4.1       //拒绝那个IP或网络访问NTP
 28 # Serve time even if not synchronized to a time source.
 29 local stratum 10   //设置NTP服务器的层数量

[root@client ~]# vim /etc/chrony.conf 
server 192.168.4.5 iburst       #服务端192.168.4.5
#server 1.rhel.pool.ntp.org iburst

[root@client ~]# date
2018年 08月 28日 星期二 15:58:55 CST
[root@client ~]# date -s '1999-12-31 12:22:55'
1999年 12月 31日 星期五 12:22:55 CST
[root@client ~]# date
1999年 12月 31日 星期五 12:23:07 CST
[root@client ~]# systemctl restart chronyd
[root@client ~]# date
2018年 08月 28日 星期二 15:59:54 CST
[root@client ~]# ntpdate 192.168.4.5
28 Aug 16:00:25 ntpdate[8502]: adjust time server 192.168.4.5 offset 0.000381 sec

-------------------------------------------------------------------------------------
[root@proxy ~]# ls /root/lnmp_soft/pssh-2.3.1-5.el7.noarch.rpm 
/root/lnmp_soft/pssh-2.3.1-5.el7.noarch.rpm
[root@proxy ~]# yum -y install /root/lnmp_soft/pssh-2.3.1-5.el7.noarch.rpm

[root@proxy ~]# vim /etc/hosts
[root@proxy ~]# tail -4 /etc/hosts
192.168.4.5 www.a.com www.b.com www.c.com www.aa.com
192.168.2.100  host1
192.168.2.200  host2
192.168.4.100  host3
[root@proxy ~]# vim /root/host.txt
[root@proxy ~]# cat /root/host.txt
root@host1
host2
host3
[root@proxy ~]# man pssh
pssh提供并发远程连接功能
-A                使用密码远程其他主机（默认使用密钥）
-i                将输出显示在屏幕
-H                设置需要连接的主机
-h                设置主机列表文件
-p                设置并发数量
-t                设置超时时间
-o dir            设置标准输出信息保存的目录
-e dir            设置错误输出信息保存的目录
-x                传递参数给ssh
[root@proxy ~]# ssh -o StrictHostKeyChecking=no 192.168.2.100
root@192.168.2.100's password:  123
Last login: Tue Aug 28 08:35:01 2018 from 192.168.2.254
[root@web1 ~]# exit

[root@proxy ~]# pssh -i -A -H 'host1 host2 host3' \
> -x '-o StrictHostKeyChecking=no' echo OK ;
Password: 
[1] 16:49:33 [SUCCESS] host1
OK
Stderr: Warning: Permanently added 'host1' (ECDSA) to the list of known hosts.
[2] 16:49:33 [SUCCESS] host2
OK
Stderr: Warning: Permanently added 'host2,192.168.2.200' (ECDSA) to the list of known hosts.
[3] 16:49:33 [SUCCESS] host3
OK

[root@proxy ~]# pssh -i -A -H 'host1 host2 host3'  echo OK2 ; #-H  设置需要连接的主机
Password: 
[1] 16:50:54 [SUCCESS] host1
OK2
[2] 16:50:54 [SUCCESS] host2
OK2
[3] 16:50:54 [SUCCESS] host3
OK2
                       ## -i    将输出显示在屏幕
[root@proxy ~]# pssh -i -A -h host.txt  ls /opt/  #-h   设置主机列表文件

Password: 123
[1] 17:02:08 [SUCCESS] root@host1
rh
ssh
[2] 17:02:08 [SUCCESS] host2
rh
ssh
[3] 17:02:08 [SUCCESS] host3
rh
ssh
[root@proxy ~]# pssh -A -h host.txt echo hehe  #-A  使用密码远程其他主机（默认使用密钥）
Warning: do not enter your password if anyone else has superuser
privileges or access to your account.
Password: 
[1] 17:14:57 [SUCCESS] root@host1
[2] 17:14:57 [SUCCESS] host2
[3] 17:14:57 [SUCCESS] host3
[root@proxy ~]# ls /root/.ssh/
known_hosts

[root@proxy ~]# ssh-keygen  -N ''  -f /root/.ssh/id_rsa
The key's randomart image is:
+---[RSA 2048]----+
|  ==BXOo* .      |
| . O=+*=.*       |
|  o.*B+=.o       |
|  .o o= =..      |
| .E   .oS.       |
| ..    +         |
|  ..  . .        |
|   ..            |
|  ....           |
+----[SHA256]-----+

[root@proxy ~]# ls /root/.ssh/
id_rsa  id_rsa.pub  known_hosts

[root@proxy ~]# ssh-copy-id host1
.....
root@host1's password: 123
[root@proxy ~]# ssh-copy-id host2
.....
root@host2's password: 123
[root@proxy ~]# ssh-copy-id host3
.....
root@host3's password: 123

    # -o dir     设置标准输出信息保存的目录/opt/ssh
[root@proxy ~]# pssh -o /opt/ssh  -h host.txt  ls /opt
[1] 17:26:55 [SUCCESS] root@host1
[2] 17:26:55 [SUCCESS] host2
[3] 17:26:55 [SUCCESS] host3
[root@proxy ~]# 
[root@proxy ~]# ls /opt/ssh/
host2  host3  root@host1
[root@proxy ~]# ll /opt/ssh/host2
-rw-r--r--. 1 root root 7 8月  28 17:26 /opt/ssh.txt/host2
[root@proxy ~]# cat /opt/ssh/host2
rh
ssh
[root@proxy ~]# man pscp.pssh
   #将本地的/etc/hosts拷贝到远程主机的/opt/ssh目录下 ##-h   设置主机列表文件host.txt
[root@proxy ~]# pscp.pssh -h  host.txt /etc/hosts /opt/ssh
[1] 17:32:55 [SUCCESS] host2
[2] 17:32:55 [SUCCESS] root@host1
[3] 17:32:55 [SUCCESS] host3
[root@client ~]# ls /opt/ssh
hosts
[root@client ~]# cat /opt/ssh/hosts 
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.4.5 www.a.com www.b.com www.c.com www.aa.com
192.168.2.100  host1
192.168.2.200  host2
192.168.4.100  host3

[root@proxy ~]# ls /opt/ssh/
[root@proxy ~]# sleep 200&
[1] 8516
[root@proxy ~]# killall sleep
[1]+  已终止               sleep 200
[root@proxy ~]# pnuke -h host.txt sleep
[1] 17:45:42 [SUCCESS] root@host1
[2] 17:45:42 [SUCCESS] host3
[3] 17:45:42 [SUCCESS] host2
[root@client ~]# sleep 200&
[1] 9708
[root@client ~]# jobs
[1]+  已杀死               sleep 200
[root@web1 ~]#  sleep 200&
[1] 9156
[root@web1 ~]# jobs
[1]+  已杀死               sleep 200
[root@web2 ~]# jobs
[1]+  已杀死               sleep 200
   # 递归将本地的/opt/ssh/目录拷贝到远程主机的/tmp目录下
[root@proxy ~]# echo rootproxy123 > /opt/ssh/pro.txt
 ##  pscp.pssh提供并发拷贝文件功能   # -r    递归拷贝目录
[root@proxy ~]# pscp.pssh -r -h host.txt /opt/ssh/  /tmp
[1] 18:24:53 [SUCCESS] root@host1
[2] 18:24:53 [SUCCESS] host2
[3] 18:24:53 [SUCCESS] host3
[root@web1 ~]# ls /tmp/ssh/
pro.txt
[root@web1 ~]# cat /tmp/ssh/pro.txt 
rootproxy123

[root@proxy ~]# man pslurp
  # pslurp提供远程下载功能












