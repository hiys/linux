=======================================
private1:   inet 192.168.4  .254  --eth0
private2:   inet 192.168.2  .254  --eth1
public1:    inet 201.1  .1  .254  --eth2
public2:    inet 201.1  .2  .254  --eth3
VM1(eth0:192.168.4.7    eth1:192.168.2.7  )
VM2(eth0:192.168.4.252  eth1:192.168.2.252)
VM3(eth0:192.168.4.207  eth1:192.168.2.207)
VM4(eth0:192.168.4.208  eth1:192.168.2.208)
准备 2 台虚拟机,配置如下:
vm1(eth1:192.168.2.7),vm2(eth1:192.168.2.252)

在 vm1 上使用 gpg 创建非对称密钥对,并将公钥到处传给 vm2
在 vm2 主机将 vm1 传过来的公钥导入,并使用公钥对/etc/sysctl.conf 文件加密,并将
加密文件传给 vm1,在 vm1 主机使用自己的私钥解密该文件

在 vm1 主机使用私钥给文件/etc/sysctl.conf 文件签名,在 vm2 主机验证签名
使用 aide 软件对/bin/和/sbin/目录进行入侵检测

在 vm2 上安装 nginx,vsftpd,mariadb,mariadb-server,并启动所有对应的服务
在 vm1 上使用 nmap 扫描 vm2 主机的所有 TCP 服务
在 vm2 上配置 nginx 用户认证,并使用 tcpdump 抓取 80 端口相关的数据包,注意默
认抓取的是第一个网卡的数据,抓取其他网卡可以使用-i 选项
在 vm1 上使用 firefox 访问 vm2 的页面,输入账户与密码,到 vm2 观察数据包
[root@VM1 ~]# nmcli connection show
名称    UUID                                  类型            设备   
eth0    4f5f8b5d-4b51-4e1c-98c7-40f0eb90f241  802-3-ethernet  eth0   
eth1    afa2eb5d-76aa-4e4c-9e5c-8fd15bfddf6a  802-3-ethernet  eth1   
eth2    54d7d0bf-2315-4ba1-b9ba-636ce35de078  802-3-ethernet  eth2   
virbr0  e7c8a960-c955-4eab-bacb-9d20e238cfd9  bridge          virbr0 
[root@VM1 ~]# ifconfig eth0 |grep 'net ';ifconfig eth1 |grep 'net ';\
> ifconfig eth2 |grep 'inet ';
        inet 192.168.4.7  netmask 255.255.255.0  broadcast 192.168.4.255
        inet 192.168.2.7  netmask 255.255.255.0  broadcast 192.168.2.255
        inet 201.1.1.100  netmask 255.255.255.0  broadcast 201.1.1.255
   ## GnuPG是非常流行的加密软件，支持所有常见加密算法，并且开源免费使用。
[root@VM1 ~]# yum -y install gnupg2  
软件包 gnupg2-2.0.22-4.el7.x86_64 已安装并且是最新版本
无须任何处理
[root@VM1 ~]# rpm -q gnupg2 
gnupg2-2.0.22-4.el7.x86_64
加密算法主要有以下几种分类：
1.为确保数据机密性算法：
a) 对称加密算法(AES,DES)
b) 非对称加密算法（RSA，DSA）
2.为确保数据完整性算法：
a) 信息摘要（MD5，SHA256，SHA512）
##在 vm1 主机使用 gpg 软件对/etc/rc.d/rc.local 文件进行对称加密,并将加密文件传给 vm2
[root@VM1 ~]# mkdir /file ;cd /file/ ;ls
[root@VM1 file]# echo file2txttxt > file2.txt;ls
file2.txt
[root@VM1 file]# gpg -c file2.txt #gpg使用对称加密算法加密数据的操作
      需要输入自定义密码 123 再次输入解密 密码 123 
     pinentry-gtk-2   Passphrase  ***
    -------弹出对话框  pinentry-gtk-2(于 VM1)---
    |    请输入密码                                 |
   |   Passphrase  123                  |
   |                 Cancel     OK      |
    -------------------------------------------------------------------
    -------弹出对话框  pinentry-gtk-2(于 VM1)---
   |  Please re-enter this passphrase   |
   |   Passphrase  123                  |
   |                 Cancel     OK      |
    -------------------------------------------------------------------
[root@VM1 file]# ls
file2.txt  file2.txt.gpg
[root@VM1 file]# tail -1 /etc/rc.d/rc.local
touch /var/lock/subsys/local
---------------------------------------------------------------------------------------------------------------
[root@VM1 file]# cp /etc/rc.d/rc.local wenj.txt
[root@VM1 file]# wc -l wenj.txt
13 wenj.txt
[root@VM1 file]# sed -i '1~1s/^#/#??#/' wenj.txt  #1~1从1开始步长1即每次加一行
[root@VM1 file]# head -3 wenj.txt
#??#!/bin/bash
#??# THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES
#??#
[root@VM1 file]# tail -3 wenj.txt
#??# that this script will be executed during boot.

touch /var/lock/subsys/local
---------------------------------------------------------------------------------------
[root@VM1 file]# gpg -c /etc/rc.d/rc.local  #gpg使用对称加密算法加密数据的操作
[root@VM1 file]# ls /etc/rc.d/
init.d  rc1.d  rc3.d  rc5.d  rc.local
rc0.d   rc2.d  rc4.d  rc6.d  rc.local.gpg

[root@VM1 file]# scp /etc/rc.d/rc.local.gpg 192.168.2.252:/lianxi/
root@192.168.2.252's password: 123
rc.local.gpg                      100%  358   565.4KB/s   00:00    

 #========在 vm1 上使用 gpg 创建非对称密钥对,并将公钥传给 vm2
使用GPG非对称加密方式保护文件
非对称加密/解密文件时，UserA（192.168.2.7）生成私钥与公钥，
并把公钥发送给UserB（192.168.2.252），UserB使用公钥加密数据，
 并把加密后的数据传给UserA，
 UserA最后使用自己的私钥解密数据
-------------[ 1 ]接收方UserA创建自己的公钥、私钥对
[root@VM1 file]# gpg --gen-key      //创建密钥对
请选择您要使用的密钥种类：
   (1) RSA and RSA (default)
您的选择？  【1】 或者 【 回车】                     //默认算法为RSA
您想要用多大的密钥尺寸？(2048) 回车
您所要求的密钥尺寸是 2048 位
请设定这把密钥的有效期限。
         0 = 密钥永不过期
密钥的有效期限是？(0) 0  【注意数字0】
密钥永远不会过期
以上正确吗？(y/n)y
姓名至少要有五个字符长
真实姓名：hiyes
电子邮件地址：hi@163.com
注释：hiyes
您选定了这个用户标识：
    “hiyes (hiyes) <hi@163.com>”
更改姓名(N)、注释(C)、电子邮件地址(E)或确定(O)/退出(Q)？O 【注意大写字母O】
    -------弹出对话框  pinentry-gtk-2(于 VM1)---
    |    请输入密码                                 |
   |   Passphrase  123                  |
   |    Quality :-------不需要理会这里-----  |
   |                 Cancel     OK      |
    -------------------------------------------------------------------
    |-------弹出对话框  pinentry-gtk-2(于 VM1)---             |
   | Warning:You have entered an insecure passphrase.  |
   | A passphrase should be at least 8 characters long.|
   |【Enter new passphrase】    【Take this one anyway 选择这项】| 
    -----------------------------------------------------------------------------------------------------
    -------弹出对话框  pinentry-gtk-2(于 VM1)---
   |  Please re-enter this passphrase   |
   |   Passphrase  123                  |
   |                 Cancel     OK      |
    -------------------------------------------------------------------
gpg: /root/.gnupg/trustdb.gpg：建立了信任度数据库
gpg: 密钥 C57C1E78 被标记为绝对信任
公钥和私钥已经生成并经签名。

gpg: 深度：0 有效性：  1 已签名：  0 信任度：0-，0q，0n，0m，0f，1u
pub   2048R/C57C1E78 2018-08-30
密钥指纹 = B765 65C6 8423 6B20 D062  2161 A31F 2C76 C57C 1E78
uid                  hiyes (hiyes) <hi@163.com>
sub   2048R/E9EB8BE0 2018-08-30
###注意：生产密钥后当前终端可能会变的无法使用，执行reset命令即可，或者关闭后再开一个终端
=============UserA导出自己的公钥文件(
[root@VM1 file]# gpg  --list-keys     //查看公钥环
/root/.gnupg/pubring.gpg
------------------------
pub   2048R/C57C1E78 2018-08-30
uid                  hiyes (hiyes) <hi@163.com>
sub   2048R/E9EB8BE0 2018-08-30

[root@VM1 file]# ls
file2.txt  file2.txt.gpg  wenj.txt
=========使用gpg命令结合--export选项将其中的公钥文本导出：
=====//--export的作用是导出密钥，-a的作用是导出的密钥存储为ASCII格式
                    === 真实姓名：hiyes
[root@VM1 file]# gpg -a  --export  hiyes > hiyes.pub
[root@VM1 file]# ls
file2.txt  file2.txt.gpg  hiyes.pub  wenj.txt
                                       ## 将密钥hiyes.pub传给VM2
[root@VM1 file]# scp hiyes.pub  192.168.2.252:/lianxi/  
root@192.168.2.252's password: 
hiyes.pub                         100% 1711     2.9MB/s   00:00
===在 vm2 主机将 vm1 传过来的公钥导入,并使用公钥对/etc/sysctl.conf 文件加密,并将
加密文件传给 vm1,在 vm1 主机使用自己的私钥解密该文件
[root@VM2 lianxi]# scp /etc/sysctl.conf.gpg  192.168.2.7:/file/
root@192.168.2.7's password: 
sysctl.conf.gpg                   100%  569   846.7KB/s   00:00 
                 
[root@VM1 file]# ls
file2.txt  file2.txt.gpg  hiyes.pub  sysctl.conf.gpg  wenj.txt
[root@VM1 file]# head -1 sysctl.conf.gpg 
�
  @�	M�����A6�n�
             ==== ##UserA以自己的私钥解密文件/etc/sysctl.conf.gpg
                  #解密操作 --decrypt 或 -d
[root@VM1 file]# gpg  -d sysctl.conf.gpg > sysctl.conf

    -------弹出对话框  pinentry-gtk-2(于 VM1)---
   |  Please enter the passphrase to unlock secret key fo  |
  | the OpenPGP certificate:                |
   |  "hiyes(hiyes)<hi@163.com>"             |
   |     2048-bit RSA key,ID E9EB8BEO,       |
    |   created 2018-08-30(主钥匙号 C57C1E78).|
   |   Passphrase  123                  |
   |                 Cancel     OK      |
    -------------------------------------------------------------------
gpg: 由 2048 位的 RSA 密钥加密，钥匙号为 E9EB8BE0、生成于 2018-08-30
      “hiyes (hiyes) <hi@163.com>”
--------------------------------------------------
b) 非对称加密算法（RSA，DSA） 解密操作 --decrypt 或 -d
----------------------------------------------------------
[root@VM1 file]# ls
file2.txt      hiyes.pub    sysctl.conf.gpg
file2.txt.gpg  sysctl.conf  wenj.txt
[root@VM1 file]# head -1 sysctl.conf
# sysctl settings are defined through files in
=========================================
在 vm1 主机使用私钥给文件/etc/sysctl.conf 文件签名,在 vm2 主机验证签名

[root@VM1 file]# tar  -zcf log.tar.gz /var/log/   //建立测试软件包

[root@VM1 file]# gpg -b log.tar               //创建分离式数字签名
    -------弹出对话框  pinentry-gtk-2(于 VM1)---
   |  Please enter the passphrase to unlock secret key fo  |
   | the OpenPGP certificate:                   |
   |  "hiyes(hiyes)<hi@163.com>"                |
   |   2048-bit RSA key,ID C57C1E78,            |
   |   created 2018-08-30.                      |
   |   Passphrase  123                          |
   |                 Cancel     OK              |
     ---------------------------------------------------------------------------------
您需要输入密码，才能解开这个用户的私钥：“hiyes (hiyes) <hi@163.com>”
2048 位的 RSA 密钥，钥匙号 C57C1E78，建立于 2018-08-30
[root@VM1 file]# ls 
file2.txt      hiyes.pub   log.tar.gz.sig  sysctl.conf.gpg
file2.txt.gpg  log.tar.gz  sysctl.conf     wenj.txt
                                                  #将签名文件与签名传给UserB
[root@VM1 file]# scp log.tar.gz* 192.168.2.252:/lianxi/ 
root@192.168.2.252's password: 
log.tar.gz                        100%  889KB 142.1MB/s   00:00    
log.tar.gz.sig                    100%  287   880.8KB/s   00:00  

[root@VM1 file]# gpg -b /etc/sysctl.conf              //创建分离式数字签名
您需要输入密码，才能解开这个用户的私钥：“hiyes (hiyes) <hi@163.com>”
2048 位的 RSA 密钥，钥匙号 C57C1E78，建立于 2018-08-30
[root@VM1 file]# ls /etc/sysctl.conf*
/etc/sysctl.conf  /etc/sysctl.conf.sig
                                              #将签名文件与签名传给UserB
[root@VM1 file]# scp /etc/sysctl.conf* 192.168.2.252:/lianxi/
root@192.168.2.252's password: 
sysctl.conf                       100%  449   566.3KB/s   00:00    
sysctl.conf.sig                   100%  287   544.1KB/s   00:00 
    ###使用 aide 软件对/bin/和/sbin/目录进行入侵检测
[root@VM1 file]# yum -y install aide |tail -3 ;
  aide.x86_64 0:0.15.1-13.el7                                                   
完毕！
  
  ##在 vm1 上使用 nmap 扫描 vm2 主机的所有 TCP 服务
[root@VM1 aide]# yum -y install nmap |tail -12;
已安装:
  nmap.x86_64 2:6.40-7.el7                                                      
完毕！
//基本用法：
# nmap  [扫描类型]  [选项]  <扫描目标 ...>
//常用的扫描类型
// -sS，TCP SYN扫描（半开）
// -sT，TCP 连接扫描（全开）
// -sU，UDP扫描
// -sP，ICMP扫描
// -A，目标系统全面分析
[root@VM1 aide]# nmap -sP 192.168.2.252


                                             ##使用-n选项可以不执行DNS解析
[root@VM1 aide]# nmap -nsP 192.168.2.252



[root@VM1 aide]# nmap -nsP 192.168.2.0/24


[root@VM1 aide]# nmap -nsP 192.168.2.0/24|awk '/scan report/{print $4,$5}'
for 192.168.2.207
for 192.168.2.208
for 192.168.2.252
for 192.168.2.254
for 192.168.2.7
         ##在 vm1 上使用 nmap 扫描 vm2 主机的所有 TCP 服务
       #      -sT，TCP 连接扫描（全开）
[root@VM1 aide]# nmap -sT 192.168.2.252

Starting Nmap 6.40 ( http://nmap.org ) at 2018-08-31 15:01 CST
mass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-servers
Nmap scan report for 192.168.2.252
Host is up (0.00088s latency).
Not shown: 995 closed ports
PORT     STATE SERVICE
21/tcp   open  ftp
22/tcp   open  ssh
80/tcp   open  http
111/tcp  open  rpcbind
3306/tcp open  mysql
MAC Address: 52:54:00:66:FC:7D (QEMU Virtual NIC)

Nmap done: 1 IP address (1 host up) scanned in 0.07 seconds
    ##检查192.168.2.0/24网段内哪些主机开启了FTP、SSH ,http 等服务
[root@VM1 aide]# nmap -p 21-80 192.168.2.0/24
.........

Nmap scan report for 192.168.2.252
Host is up (0.00064s latency).
Not shown: 57 closed ports
PORT   STATE SERVICE
21/tcp open  ftp
22/tcp open  ssh
80/tcp open  http
MAC Address: 52:54:00:66:FC:7D (QEMU Virtual NIC)

Nmap scan report for www.a.com (192.168.2.7)
Host is up (0.000017s latency).
Not shown: 59 closed ports
PORT   STATE SERVICE
22/tcp open  ssh

Nmap done: 256 IP addresses (5 hosts up) scanned in 6.08 seconds

[root@VM1 aide]# nmap -sU 192.168.2.252    //指定-sU扫描UDP

Starting Nmap 6.40 ( http://nmap.org ) at 2018-08-31 15:13 CST
mass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-servers
Stats: 0:02:04 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan
UDP Scan Timing: About 13.29% done; ETC: 15:29 (0:13:36 remaining)
Stats: 0:02:18 elapsed; 0 hosts completed (1 up), 1 undergoing UDP Scan
UDP Scan Timing: About 14.53% done; ETC: 15:29 (0:13:38 remaining)

[root@VM1 aide]# nmap -A 192.168.2.252  #全面分析目标主机192.168.2.252的操作系统信息
Nmap scan report for 192.168.2.252
Host is up (0.00064s latency).
Not shown: 995 closed ports
PORT     STATE SERVICE VERSION
21/tcp   open  ftp     vsftpd 3.0.2
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_drwxr-xr-x    2 0        0               6 Mar 23  2017 pub
22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)
| ssh-hostkey: 2048 d1:df:2f:c5:20:ec:71:8f:0b:97:8f:7a:a8:0b:02:6e (RSA)
|_256 7e:6e:95:ed:84:fe:5b:8e:26:94:73:9b:c3:4b:90:cb (ECDSA)
80/tcp   open  http    nginx 1.12.2
|_http-methods: No Allow or Public header in OPTIONS response (status code 405)
|_http-title: Welcome to nginx!
111/tcp  open  rpcbind 2-4 (RPC #100000)
| rpcinfo: 
|   program version   port/proto  service
|   100000  2,3,4        111/tcp  rpcbind
|_  100000  2,3,4        111/udp  rpcbind
3306/tcp open  mysql?
| mysql-info: MySQL Error detected!
| Error Code was: 1130
|_Host '192.168.2.7' is not allowed to connect to this MariaDB server
..........................
      #### 使用tcpdump分析FTP访问中的明文交换信息
在 vm2 上配置 nginx 用户认证,并使用 tcpdump 抓取 80 端口相关的数据包,注意默
认抓取的是第一个网卡的数据,抓取其他网卡可以使用-i 选项
 # tcpdump -A host 192.168.2.252 and tcp port 21
//进入等待捕获数据包的状态
//监控选项如下：
// -i，指定监控的网络接口（默认监听第一个网卡）
// -A，转换为 ACSII 码，以方便阅读
// -w，将数据包信息保存到指定文件
// -r，从指定文件读取数据包信息
//tcpdump的过滤条件：
// 类型：host、net、port、portrange
// 方向：src、dst
// 协议：tcp、udp、ip、wlan、arp、……
// 多个条件组合：and、or、not
[root@VM1 aide]# yum -y install ftp |tail -3;
  ftp.x86_64 0:0.17-67.el7    
完毕！
[root@VM1 aide]# rpm -q ftp
ftp-0.17-67.el7.x86_64
[root@VM1 aide]# yum -y install vsftpd |tail -3 ;
  vsftpd.x86_64 0:3.0.2-22.el7                                                  
完毕！
[root@VM1 aide]# systemctl restart vsftpd && systemctl enable vsftpd ;






















[root@VM2 ~]# nmcli connection show
名称    UUID                                  类型            设备   
eth0    4f5f8b5d-4b51-4e1c-98c7-40f0eb90f241  802-3-ethernet  eth0   
eth1    9ac67a27-3d77-4d61-a5df-b7391ed982f9  802-3-ethernet  eth1   
eth2    366a4b17-fae2-4c29-8676-d80601546666  802-3-ethernet  eth2   
eth3    36447881-233d-46de-b31a-02605ea1b654  802-3-ethernet  eth3   
virbr0  a0f81954-3b53-4cdb-b9a5-d69f93a9af8e  bridge          virbr0 
[root@VM2 ~]# ifconfig eth0 |grep 'net ';ifconfig eth1 |grep 'net ';ifconfig eth2 |grep 'inet ';ifconfig eth3 |grep 'inet ';
        inet 192.168.4.252  netmask 255.255.255.0  broadcast 192.168.4.255
        inet 192.168.2.252  netmask 255.255.255.0  broadcast 192.168.2.255
        inet 201.1.1.5  netmask 255.255.255.0  broadcast 201.1.1.255
        inet 201.1.2.5  netmask 255.255.255.0  broadcast 201.1.2.255 
    ##在 vm2 对主机 vm1 传来的加密文件进行解密
[root@VM2 lianxi]# ls
rc.local.gpg
[root@VM2 lianxi]# head -1 rc.local.gpg 
Y:��&G����������h�B�r̤հ�,dE�ZC
�I3��-dL�A����S�g��i����<O���]N-v���' tjݍ�

               # ## 使用gpg对加密文件进行解密操作 
[root@VM2 lianxi]# gpg -d rc.local.gpg > rc.local
gpg: 已创建目录‘/root/.gnupg’
gpg: 新的配置文件‘/root/.gnupg/gpg.conf’已建立
gpg: 警告：在‘/root/.gnupg/gpg.conf’里的选项于此次运行期间未被使用
gpg: 钥匙环‘/root/.gnupg/secring.gpg’已建立
gpg: 钥匙环‘/root/.gnupg/pubring.gpg’已建立
gpg: CAST5 加密过的数据
   |  需要输入自定义密码 123 再次输入解密 密码 123 |
  |   pinentry-gtk-2   Passphrase  ***   |
gpg: 以 1 个密码加密
gpg: 警告：报文未受到完整的保护
[root@VM2 lianxi]#  ls
rc.local  rc.local.gpg
[root@VM2 lianxi]# head -1 rc.local   #//查看解密后的文件
#!/bin/bash
=====使用gpg命令结合--import选项导入发送方的公钥信息，以便在加密文件时指定对应的公钥
[root@VM2 lianxi]# ls
rc.local  rc.local.gpg
[root@VM2 lianxi]# ls
hiyes.pub  rc.local  rc.local.gpg
===在 vm2 主机将 vm1 传过来的公钥导入,并使用公钥对/etc/sysctl.conf 文件加密,并将
加密文件传给 vm1,在 vm1 主机使用自己的私钥解密该文件

[root@VM2 lianxi]# gpg --import hiyes.pub
gpg: /root/.gnupg/trustdb.gpg：建立了信任度数据库
gpg: 密钥 C57C1E78：公钥“hiyes (hiyes) <hi@163.com>”已导入
gpg: 合计被处理的数量：1
gpg:           已导入：1  (RSA: 1)
=======UserB使用公钥加密数据，并把加密后的数据传给UserA
[root@VM2 lianxi]# wc -l /etc/sysctl.conf
10 /etc/sysctl.conf

//-e选项是使用密钥加密数据
//-r选项后面跟的是【公钥hiyes】，说明使用哪个密钥对文件加密
                   #使用公钥hiyes 对/etc/sysctl.conf 文件加密
[root@VM2 lianxi]# gpg -e -r hiyes /etc/sysctl.conf

gpg: E9EB8BE0：没有证据表明这把密钥真的属于它所声称的持有者
pub  2048R/E9EB8BE0 2018-08-30 hiyes (hiyes) <hi@163.com>
 主钥指纹： B765 65C6 8423 6B20 D062  2161 A31F 2C76 C57C 1E78
 子钥指纹： 6FAC C1DF 1B3D E9D8 C72E  734E 409B 094D E9EB 8BE0
这把密钥并不一定属于用户标识声称的那个人。如果您真的知道自
己在做什么，您可以在下一个问题回答 yes。
无论如何还是使用这把密钥吗？(y/N)y
[root@VM2 lianxi]# ls /etc/sysctl.<tab键>
sysctl.conf      sysctl.conf.gpg  sysctl.d/
[root@VM2 lianxi]# scp /etc/sysctl.conf.gpg  192.168.2.7:/file/ #加密的数据传给VM1
root@192.168.2.7's password: 
sysctl.conf.gpg                   100%  569   846.7KB/s   00:00 
                   ##在 vm2 主机验证签名
[root@VM2 lianxi]# ls
hiyes.pub   log.tar.gz.sig  rc.local.gpg  sysctl.conf.sig
log.tar.gz  rc.local        sysctl.conf

[root@VM2 lianxi]# gpg --verify log.tar.gz.sig     #验证签名
gpg: 于 2018年08月31日 星期五 09时48分54秒 CST 创建的签名，使用 RSA，钥匙号 C57C1E78
gpg: 完好的签名，来自于“hiyes (hiyes) <hi@163.com>”
gpg: 警告：这把密钥未经受信任的签名认证！
gpg:       没有证据表明这个签名属于它所声称的持有者。
主钥指纹： B765 65C6 8423 6B20 D062  2161 A31F 2C76 C57C 1E78

[root@VM2 lianxi]# gpg --verify log.tar.gz  
gpg: 找不到有效的 OpenPGP 数据。
gpg: 签名无法被验证。
请记住签名文件(.sig或.asc)
应该是在命令行中给定的第一个文件。

[root@VM2 lianxi]# gpg --verify sysctl.conf.sig    #验证签名
gpg: 于 2018年08月31日 星期五 10时00分35秒 CST 创建的签名，使用 RSA，钥匙号 C57C1E78
gpg: 完好的签名，来自于“hiyes (hiyes) <hi@163.com>”
gpg: 警告：这把密钥未经受信任的签名认证！
gpg:       没有证据表明这个签名属于它所声称的持有者。
主钥指纹： B765 65C6 8423 6B20 D062  2161 A31F 2C76 C57C 1E78
[root@VM2 lianxi]# tail -1 sysctl.conf
# For more information, see sysctl.conf(5) and sysctl.d(5).


  ===========  #使用 aide 软件对/bin/和/sbin/目录进行入侵检测
[root@VM2 lianxi]# yum -y install aide
已安装:
  aide.x86_64 0:0.15.1-13.el7                                       

完毕！
[root@VM2 lianxi]# vim /etc/aide.conf
 12 database_out=file:@@{DBDIR}/aide.db.new.gz
 93 DATAONLY =  p+n+u+g+s+acl+selinux+xattrs+sha256
 94 /bin  DATAONLY
 95 /sbin DATAONLY
//注意：为了校验的效率，这里将所有默认的校验目录与文件都注释
//仅保留/bin/  /sbin/ 目录，其他目录都注释掉
     
取消注释 # control +v +x   |   control +v  shift +i  + # Esc 增加注释#

[root@VM2 lianxi]# cd /var/lib/aide/;ls
[root@VM2 aide]# tail -1 /etc/aide.conf  //使用[!]，设置不校验的目录
#!/var/log/httpd/
[root@VM2 aide]# aide --init  #入侵前对数据进行校验，生成初始化数据库
WARNING:Input and output database urls are the same.
AIDE, version 0.15.1
### AIDE database at /var/lib/aide/aide.db.gz initialized.

[root@VM2 aide]# ls
aide.db.gz
    #备份数据库，将数据库文件拷贝
[root@VM2 aide]# cp /var/lib/aide/aide.db.gz /lianxi/
[root@VM2 aide]# head -95 /etc/aide.conf |tail -3
DATAONLY =  p+n+u+g+s+acl+selinux+xattrs+sha256
/bin  DATAONLY
/sbin DATAONLY
[root@VM2 aide]# aide --check
Couldn't open file /var/lib/aide/aide.db.gz for reading
[root@VM2 aide]# mv aide.db.new.gz aide.db.gz
[root@VM2 aide]# aide  --check     //检查哪些数据发生了变化
 Looks okay!

[root@VM3 ~]# ssh 192.168.4.252
[root@VM2 ~]# vim /var/lib/aide/vm3.sh
[root@VM2 ~]# ll /var/lib/aide/vm3.sh
[root@VM2 ~]# chmod +x /var/lib/aide/vm3.sh

[root@VM2 ~]# ln -s /var/lib/aide/vm3.sh /bin/
[root@VM2 ~]# ll /bin/vm3.sh
lrwxrwxrwx. 1 root root 20 8月  31 11:57 /bin/vm3.sh -> /var/lib/aide/vm3.sh

[root@VM2 ~]# ln -s /var/lib/aide/vm3.sh /sbin/
[root@VM2 ~]# ll /sbin/vm3.sh 
lrwxrwxrwx. 1 root root 20 8月  31 11:58 /sbin/vm3.sh -> /var/lib/aide/vm3.sh
[root@VM2 ~]# /sbin/vm3.sh
hello vm3 to vm2
[root@VM2 ~]# /bin/vm3.sh 
hello vm3 to vm2
[root@VM2 ~]# vm3.sh
hello vm3 to vm2
[root@VM2 ~]# which vm3.sh
/usr/sbin/vm3.sh
[root@VM2 ~]# /usr/sbin/vm3.sh
hello vm3 to vm2
[root@VM2 aide]# pwd
/var/lib/aide
[root@VM2 aide]# aide --check     //检查哪些数据发生了变化
 Looks okay!
[root@VM2 ~]# touch /bin/vm23.txt
[root@VM1 aide]# ssh 192.168.4.252
[root@VM2 ~]# touch /sbin/vm12.txt
[root@VM2 aide]# ls /bin/*.txt
/bin/2.txt  /bin/vm23.txt
[root@VM2 aide]# ls /sbin/*.txt
/sbin/vm12.txt
[root@VM2 aide]# vim /etc/aide.conf
 93 DATAONLY =  p+n+u+g+s+acl+selinux+xattrs+sha256
 94 /bin  DATAONLY
 95 /sbin DATAONLY
 96 /root DATAONLY

102 /bin/    CONTENT_EX
103 /sbin/   CONTENT_EX
[root@VM2 aide]# rm -rf aide.db*
[root@VM2 aide]# ls
vm3.sh
[root@VM2 aide]# aide --init     #入侵前对数据进行校验，生成初始化数据库
AIDE, version 0.15.1
### AIDE database at /var/lib/aide/aide.db.new.gz initialized.
[root@VM2 aide]# ls
aide.db.new.gz  vm3.sh
[root@VM2 aide]# mv aide.db.new.gz aide.db.gz

[root@VM3 ~]# ssh -x 192.168.4.252
root@192.168.4.252's password: 
Last login: Fri Aug 31 13:33:08 2018 from 192.168.4.254
[root@VM2 ~]# ls /bin/vm*.txt
/bin/vm23.txt
[root@VM2 ~]# rm -rf /bin/vm23.txt
[root@VM2 ~]# ls /bin/*.txt
[root@VM2 ~]# rm -rf /bin/2.txt
[root@VM2 ~]# ls /bin/*.txt
ls: 无法访问/bin/*.txt: 没有那个文件或目录
[root@VM2 aide]# aide --check
AIDE 0.15.1 found differences between database and filesystem!!
Start timestamp: 2018-08-31 13:49:23
Summary:
  Total number of files:	933
  Added files:			0
  Removed files:		0
  Changed files:		1
---------------------------------------------------
Changed files:
---------------------------------------------------
changed: /root/.cache/abrt/lastnotification
---------------------------------------------------
Detailed information about changes:
---------------------------------------------------
File: /root/.cache/abrt/lastnotification
 SHA256   : 148Q+SKLKPpSVhZHgJIQ9r1DhcD5yGv9 , aJlk8b3d5PSMy2bFws6JW0zKciZyzXB1
[root@VM2 aide]# vim /etc/aide.conf 

============================================
在 vm2 上安装 nginx,vsftpd,mariadb,mariadb-server,并启动所有对应的服务
 ### yum -y install elinks telnet httpd-tools gcc pcre-devel openssl-devel mariadb-devel mariadb mariadb-server memcached php-pecl-memcache php php-mysql /root/lnmp_soft/php-fpm-5.4.16-42.el7.x86_64.rpm |tail -12;
 ##rpm -q elinks telnet httpd-tools gcc pcre-devel openssl-devel mariadb-devel mariadb mariadb-server memcached php-pecl-memcache php php-mysql php-fpm ;
> openssl-devel mariadb-devel mariadb mariadb-server memcached \
> php-pecl-memcache php php-mysql php-fpm ;

elinks-0.12-0.36.pre6.el7.x86_64
telnet-0.17-64.el7.x86_64
httpd-tools-2.4.6-67.el7.x86_64
gcc-4.8.5-16.el7.x86_64
pcre-devel-8.32-17.el7.x86_64

openssl-devel-1.0.2k-8.el7.x86_64
mariadb-devel-5.5.56-2.el7.x86_64
mariadb-5.5.56-2.el7.x86_64
mariadb-server-5.5.56-2.el7.x86_64
memcached-1.4.15-10.el7_3.1.x86_64

php-pecl-memcache-3.0.8-4.el7.x86_64
php-5.4.16-42.el7.x86_64
php-mysql-5.4.16-42.el7.x86_64
php-fpm-5.4.16-42.el7.x86_64

[root@VM2 aide]# ss -anptul |grep :80
[root@VM2 aide]# clear
[root@VM2 aide]# systemctl restart mariadb && systemctl enable mariadb ;
Created symlink from /etc/systemd/system/multi-user.target.wants/mariadb.service to /usr/lib/systemd/system/mariadb.service.
[root@VM2 aide]# yum -y install vsftpd |tail -3
  vsftpd.x86_64 0:3.0.2-22.el7                                                  
完毕！
[root@VM2 aide]# systemctl restart vsftpd && systemctl enable vsftpd;
[root@VM2 aide]# ll /sbin/nginx 
lrwxrwxrwx. 1 root root 27 8月  23 08:51 /sbin/nginx -> /usr/local/nginx/sbin/nginx
[root@VM2 aide]# which nginx
/usr/sbin/nginx
[root@VM2 aide]# nginx
[root@VM2 aide]# ss -anptul |grep nginx |column -t
tcp  LISTEN  0  128  *:80  *:*  users:(("nginx",pid=6842,fd=6),("nginx",pid=6841,fd=6))
[root@VM2 aide]# nginx -s reload
[root@VM2 aide]# netstat -anptul |grep :80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      6841/nginx: master  
[root@VM2 aide]# netstat -anptul |grep nginx
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      6841/nginx: master  

[root@VM2 aide]# systemctl is-active vsftpd
active    
[root@VM2 aide]# yum -y install ftp |tail -3
  ftp.x86_64 0:0.17-67.el7                             
完毕！
[root@VM2 ~]# useradd tom && echo 123 |passwd  --stdin tom;
更改用户 tom 的密码 。
passwd：所有的身份验证令牌已经成功更新。
[root@VM2 ~]# tcpdump -A  -i  eth1  host 192.168.2.252 and tcp port 21
tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
listening on eth1, link-type EN10MB (Ethernet), capture size 262144 bytes

... //进入等待捕获数据包的状态
//监控选项如下：
// -i，指定监控的网络接口（默认监听第一个网卡）
// -A，转换为 ACSII 码，以方便阅读
// -w，将数据包信息保存到指定文件
// -r，从指定文件读取数据包信息
//tcpdump的过滤条件：
// 类型：host、net、port、portrange
// 方向：src、dst
// 协议：tcp、udp、ip、wlan、arp、……
// 多个条件组合：and、or、not
[root@VM1 aide]# ifconfig eth1 |grep 'inet '
        inet 192.168.2.7  netmask 255.255.255.0  broadcast 192.168.2.255
[root@VM1 aide]# rpm -q ftp
ftp-0.17-67.el7.x86_64

[root@VM1 aide]# ftp 192.168.2.252
Connected to 192.168.2.252 (192.168.2.252).
220 (vsFTPd 3.0.2)
Name (192.168.2.252:root): tom  #vm2的用户名tom
331 Please specify the password.
Password:  123
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> ls
227 Entering Passive Mode (192,168,2,252,73,229).
150 Here comes the directory listing.
226 Directory send OK.
ftp> touch tomvm1.txt
?Invalid command
ftp> quit
221 Goodbye.
########### -i，指定监控的网络接口（默认监听第一个网卡）
// -A，目标系统全面分析

 FTP: USER tom
length 10: FTP: PASS 123
FTP: LIST
 length 6: FTP: QUIT
27 packets captured
27 packets received by filter
0 packets dropped by kernel
// -i，指定监控的网络接口（默认监听第一个网卡）
// -A，转换为 ACSII 码，以方便阅读
// -w，将数据包信息保存到指定文件
// -r，从指定文件读取数据包信息
[root@VM2 lianxi]# tcpdump -A -i eth1 host 192.168.2.252 -w ftp.cap 
tcpdump: listening on eth1, link-type EN10MB (Ethernet), capture size 262144 bytes

......>
[root@VM1 file]# ftp 192.168.2.252
Connected to 192.168.2.252 (192.168.2.252).
220 (vsFTPd 3.0.2)
Name (192.168.2.252:root): tom
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp> ls
227 Entering Passive Mode (192,168,2,252,144,239).
150 Here comes the directory listing.
226 Directory send OK.
ftp> quit
221 Goodbye.
........
^C39 packets captured
40 packets received by filter
0 packets dropped by kernel
// -i，指定监控的网络接口（默认监听第一个网卡）
// -A，转换为 ACSII 码，以方便阅读
// -w，将数据包信息保存到指定文件
// -r，从指定文件读取数据包信息
[root@VM2 lianxi]# tcpdump -A -i eth1 host 192.168.2.252 -r ftp.cap  |egrep '(USER|PASS)' ;

reading from file ftp.cap, link-type EN10MB (Ethernet)
16:59:35.915426 IP 192.168.2.7.60436 > VM2.ftp: Flags [P.], seq 1:11, ack 21, win 229, options [nop,nop,TS val 30998497 ecr 30992960], length 10: FTP: USER tom
.......@USER tom
16:59:38.165001 IP 192.168.2.7.60436 > VM2.ftp: Flags [P.], seq 11:21, ack 55, win 229, options [nop,nop,TS val 31000746 ecr 30995977], length 10: FTP: PASS 123
.......	PASS 123
// -i，指定监控的网络接口（默认监听第一个网卡）
// -A，转换为 ACSII 码，以方便阅读
// -w，将数据包信息保存到指定文件
// -r，从指定文件读取数据包信息
[root@VM2 lianxi]# tcpdump -A  -r ftp.cap  |egrep '(USER|PASS)' ;reading from file ftp.cap, link-type EN10MB (Ethernet)
16:59:35.915426 IP 192.168.2.7.60436 > VM2.ftp: Flags [P.], seq 1:11, ack 21, win 229, options [nop,nop,TS val 30998497 ecr 30992960], length 10: FTP: USER tom
.......@USER tom
16:59:38.165001 IP 192.168.2.7.60436 > VM2.ftp: Flags [P.], seq 11:21, ack 55, win 229, options [nop,nop,TS val 31000746 ecr 30995977], length 10: FTP: PASS 123
.......	PASS 123
====在 vm2 上配置 nginx 用户认证,并使用 tcpdump 抓取 80 端口相关的数据包,
注意默认抓取的是第一个网卡的数据,抓取其他网卡可以使用-i 选项

[root@VM2 lianxi]# cd /usr/local/nginx/conf/ ;ls

[root@VM2 conf]# ss -anptul |grep nginx
tcp    LISTEN     0      128       *:80                    *:*                   users:(("nginx",pid=7169,fd=6),("nginx",pid=6841,fd=6))
                                  ##  //还原配置文件
[root@VM2 conf]# \cp nginx.conf.default nginx.conf
[root@VM2 conf]# rpm -q httpd-tools
httpd-tools-2.4.6-67.el7.x86_64
                                     ## //创建账户文件
[root@VM2 conf]# htpasswd -c /usr/local/nginx/pass tom
New password: 
Re-type new password: 
Adding password for user tom

[root@VM2 conf]# vim /usr/local/nginx/conf/nginx.conf

 35     server {
 36         listen       80;
 37         server_name  localhost;
 38         auth_basic "tishixinxi";
 39         auth_basic_user_file "/usr/local/nginx/pass";
[root@VM2 conf]# nginx -s reload
===在 vm2 上配置 nginx 用户认证,并使用 tcpdump 抓取 80 端口相关的数据包
[root@VM2 conf]# tcpdump -A -i eth1 host 192.168.2.252 and tcp port 80  -w ftp.cap ;
tcpdump: listening on eth1, link-type EN10MB (Ethernet), capture size 262144 bytes

[root@VM1 conf]# firefox http://192.168.2.252
 //根据提示输入用户名tom与密码123
^C33 packets captured
33 packets received by filter
0 packets dropped by kernel
[root@VM2 conf]# htpasswd  /usr/local/nginx/pass tom2
New password: 
Re-type new password: 
Adding password for user tom2
[root@VM2 conf]# nginx -s reload

[root@VM2 conf]# tcpdump -A -i eth1 host 192.168.2.252 and tcp port 80 -w ftp.cap ;
tcpdump: listening on eth1, link-type EN10MB (Ethernet), capture size 262144 bytes
[root@VM1 conf]# firefox http://192.168.2.252
//根据提示输入用户名tom2与密码1234
[root@VM2 conf]# tcpdump -A -i eht1 host 192.168.2.252 and tcp port 80 -r ftp.cap |grep 'Authorization: ';
reading from file ftp.cap, link-type EN10MB (Ethernet)
Authorization: Basic dG9tMjoxMjM0
Authorization: Basic dG9tMjoxMjM0
Authorization: Basic dG9tMjoxMjM0
[root@VM2 conf]# echo "dG9tMjoxMjM0" |base64 -d
tom2:1234
[root@VM2 conf]# echo "tom2:1234" |base64 ;
dG9tMjoxMjM0Cg==
















