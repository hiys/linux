



/****** ~]# mkswap    /dev/vdb8  #创建交换分区,格式化交换文件系统 ***/

[root@server0 ~]# lsblk 
NAME                   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vda                    252:0    0   10G  0 disk 
└─vda1                 252:1    0   10G  0 part /
vdb                    252:16   0   10G  0 disk 
├─vdb4                 252:20   0    1K  0 part 
├─vdb5                 252:21   0  210M  0 part 
│ └─systemvg-vo        253:0    0  312M  0 lvm  /vo
├─vdb6                 252:22   0  110M  0 part 
│ └─systemvg-vo        253:0    0  312M  0 lvm  /vo
├─vdb7                 252:23   0  320M  0 part 
├─vdb8                 252:24   0  512M  0 part [SWAP]
└─vdb9                 252:25   0    1G  0 part 
  └─datastore-database 253:1    0  800M  0 lvm  /mnt/database

[root@server0 ~]# tail  -3  /etc/fstab 
/dev/systemvg/vo   /vo  ext3   defaults   0   0
/dev/vdb8         swap   swap   defaults   0   0
/dev/datastore/database    /mnt/database  ext3  defaults  0  0

[root@server0 ~]# vim  /etc/fstab 
[root@server0 ~]# tail  -3  /etc/fstab 
#/dev/systemvg/vo   /vo  ext3   defaults   0   0
#/dev/vdb8         swap   swap   defaults   0   0
#/dev/datastore/database    /mnt/database  ext3  defaults  0  0

[root@server0 ~]# blkid   /dev/vdb{5,6,8,9}
/dev/vdb5: UUID="URBCNI-uMe6-16As-wBrk-oee6-yX2j-YcjpNx" TYPE="LVM2_member" 
/dev/vdb6: UUID="Ris7mA-rFxq-hp0s-5XlV-1gLs-BnCY-Tg6XH6" TYPE="LVM2_member" 
/dev/vdb8: UUID="7bf954a0-a067-40a1-984e-7bd28a8efb83" TYPE="swap" 
/dev/vdb9: UUID="XwHc6F-4uS6-PoNj-QLP1-6yO0-XC7u-lDm8e4" TYPE="LVM2_member" 

=============================

[root@server0 ~]# vim   /etc/fstab 
[root@server0 ~]# tail  -2   /etc/fstab
/dev/vdb8         swap   swap   defaults   0   0
#/dev/datastore/database    /mnt/database  ext3  defaults  0  0

[root@server0 ~]# swapon    /dev/vdb8    #启用交换分区/dev/vdb8 
/**** ~]# swapon   -a   ## -a 参数是开启全部的交换空间 ******/

[root@server0 ~]# free  -m     #发现已经有交换分区
             total       used       free     shared    buffers     cached
Mem:           817        620        196         16          0        291
-/+ buffers/cache:        327        489
Swap:          511          0        511

[root@server0 ~]# cat  /proc/swaps    #查看swap是否挂载
Filename	  Type      Size     Used  Priority
/dev/vdb8    partition	524284    0    -1

[root@server0 ~]# swapon   -s     #-s 显示简短的装置讯息  //查看swap是否挂载
文件名		 类型		大小	已用	权限
/dev/vdb8   partition	524284	0	-1

[root@server0 ~]# lsblk   /dev/vdb8    #查看swap是否挂载
NAME MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vdb8 252:24   0  512M  0 part [SWAP]

----------------------------  修改/etc/fstab里面逻辑卷的挂载信息 ------------------

[root@server0 ~]# vim  /etc/fstab 
[root@server0 ~]# tail   -3   /etc/fstab
#/dev/systemvg/vo   /vo  ext3   defaults   0   0
#/dev/vdb8         swap   swap   defaults   0   0
#/dev/datastore/database    /mnt/database  ext3  defaults  0  0

[root@server0 ~]# swapoff   /dev/vdb8   #禁用交换分区

[root@server0 ~]# swapon   -s    #-s 显示简短的装置讯息  //查看swap是否挂载

[root@server0 ~]# free  -m     # #发现 交换分区 free项 数值变成了 0,被关闭了
             total       used       free     shared    buffers     cached
Mem:           817        619        197         16          0        291
-/+ buffers/cache:        326        490
Swap:            0          0          0

[root@server0 ~]# cat  /proc/swaps 
Filename				Type		Size	Used	Priority

---------- #目前只能用 fdisk 的 d 指令 强制删除分区/dev/vdb8 的方法,不能使其变成普通分区 ---------------
[root@server0 ~]# blkid    /dev/vdb8   
/dev/vdb8: UUID="7bf954a0-a067-40a1-984e-7bd28a8efb83" TYPE="swap" 

[root@server0 ~]# lsblk
NAME                   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vda                    252:0    0   10G  0 disk 
└─vda1                 252:1    0   10G  0 part /
vdb                    252:16   0   10G  0 disk 
├─vdb4                 252:20   0    1K  0 part 
├─vdb5                 252:21   0  210M  0 part 
│ └─systemvg-vo        253:0    0  312M  0 lvm  /vo
├─vdb6                 252:22   0  110M  0 part 
│ └─systemvg-vo        253:0    0  312M  0 lvm  /vo
├─vdb7                 252:23   0  320M  0 part 
├─vdb8                 252:24   0  512M  0 part 
└─vdb9                 252:25   0    1G  0 part 
  └─datastore-database 253:1    0  800M  0 lvm  /mnt/database

----------------- 1 先通过umount命令卸载掉逻辑卷 ------------------

[root@server0 ~]# umount  /vo/
[root@server0 ~]# umount  /mnt/database/
[root@server0 ~]# lsblk 
NAME                   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vda                    252:0    0   10G  0 disk 
└─vda1                 252:1    0   10G  0 part /
vdb                    252:16   0   10G  0 disk 
├─vdb4                 252:20   0    1K  0 part 
├─vdb5                 252:21   0  210M  0 part 
│ └─systemvg-vo        253:0    0  312M  0 lvm  
├─vdb6                 252:22   0  110M  0 part 
│ └─systemvg-vo        253:0    0  312M  0 lvm  
├─vdb7                 252:23   0  320M  0 part 
├─vdb8                 252:24   0  512M  0 part 
└─vdb9                 252:25   0    1G  0 part 
  └─datastore-database 253:1    0  800M  0 lvm  

---------------------------- 2  修改/etc/fstab里面逻辑卷的挂载信息 ------------------

[root@server0 ~]# vim  /etc/fstab 
[root@server0 ~]# tail   -3   /etc/fstab
#/dev/systemvg/vo   /vo  ext3   defaults   0   0
#/dev/vdb8         swap   swap   defaults   0   0
#/dev/datastore/database    /mnt/database  ext3  defaults  0  0

[root@server0 ~]# lvs
  LV       VG        Attr       LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  database datastore -wi-a----- 800.00m                                             
  vo       systemvg  -wi-a----- 312.00m  
 
  ------------------- 3、通过lvremove 删除逻辑卷 ------------------------------
            
[root@server0 ~]# lvremove  -f  /dev/systemvg/vo 
  Logical volume "vo" successfully removed

[root@server0 ~]# lvs
  LV       VG        Attr       LSize   Pool Origin Data%  Move Log Cpy%Sync Convert
  database datastore -wi-a----- 800.00m      

  ------------------- 3、通过lvremove 删除逻辑卷 --------------------------
                 
[root@server0 ~]# lvremove   -f  /dev/datastore/database 
  Logical volume "database" successfully removed

[root@server0 ~]# lvs

--------------------  4、通过vgremove 删除卷组  -------------------

[root@server0 ~]# vgremove   -f   /dev/datastore
  Volume group "datastore" successfully removed

[root@server0 ~]# vgs
  VG       #PV #LV #SN Attr   VSize   VFree  
  systemvg   2   0   0 wz--n- 316.00m 316.00m

[root@server0 ~]# vgremove   -f  /dev/systemvg
  Volume group "systemvg" successfully removed

[root@server0 ~]# vgs
  No volume groups found

  ---------------------- 5、通过pvremove 将物理卷转化成普通分区 -------------------

[root@server0 ~]# pvs
  PV         VG   Fmt  Attr PSize   PFree  
  /dev/vdb5       lvm2 a--  210.00m 210.00m
  /dev/vdb6       lvm2 a--  110.00m 110.00m
  /dev/vdb9       lvm2 a--    1.00g   1.00g

[root@server0 ~]# pvremove   -y  /dev/vdb{5,6,9}
  Labels on physical volume "/dev/vdb5" successfully wiped
  Labels on physical volume "/dev/vdb6" successfully wiped
  Labels on physical volume "/dev/vdb9" successfully wiped


[root@server0 ~]# blkid
/dev/vdb8: UUID="7bf954a0-a067-40a1-984e-7bd28a8efb83" TYPE="swap" 
/dev/vda1: UUID="9bf6b9f7-92ad-441b-848e-0257cbb883d1" TYPE="xfs" 

[root@server0 ~]# blkid  /dev/vdb{4..9}
/dev/vdb4: PTTYPE="dos" 
/dev/vdb8: UUID="7bf954a0-a067-40a1-984e-7bd28a8efb83" TYPE="swap" 

[root@server0 ~]# lsblk 
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vda    252:0    0   10G  0 disk 
└─vda1 252:1    0   10G  0 part /
vdb    252:16   0   10G  0 disk 
├─vdb4 252:20   0    1K  0 part 
├─vdb5 252:21   0  210M  0 part 
├─vdb6 252:22   0  110M  0 part 
├─vdb7 252:23   0  320M  0 part 
├─vdb8 252:24   0  512M  0 part 
└─vdb9 252:25   0    1G  0 part 


https://access.redhat.com/user/24368472
https://www.redhat.com/wapps/ugc/protected/personalInfo.html
您的信息   个人信息

* 名字： 海龙
* 姓氏： 胡

电子邮件地址： m13530503630@163.com 

* 电话号码：   13530503630


===================   CE200 =====================
[root@server0 ~]# systemctl is-enabled  crond   sssd  autofs  chronyd  
enabled
enabled
enabled
enabled
[root@server0 ~]# rpm  -q  cronie  crontabs  sssd  autofs  chrony
cronie-1.4.11-11.el7.x86_64
crontabs-1.11-6.20121102git.el7.noarch
sssd-1.11.2-65.el7.x86_64
autofs-5.0.7-40.el7.x86_64
chrony-1.29.1-1.el7.x86_64
[root@server0 ~]# 

[root@server0 ~]# vim   /etc/yum.repos.d/content.example.com_rhel7.0_x86_64_dvd.repo 

[root@server0 ~]# vim  /etc/yum.conf 

[root@server0 ~]# vim  /etc/fstab 

[root@server0 ~]# systemctl   restart  crond.service  

[root@server0 ~]# systemctl  restart  sssd && systemctl  enable  sssd

[root@server0 ~]# vim   /etc/auto.master

[root@server0 ~]# vim  /etc/guests.rule   # 注意减号" - "

[root@server0 ~]# systemctl  start  autofs  &&  systemctl   enable  autofs  

[root@server0 ~]# vim  /etc/chrony.conf 

[root@server0 ~]# systemctl  restart  chronyd && systemctl  enable  chronyd


firewalld  firewall-config  

@server0 ~]#  yum -y install  cronie  crontabs
                       sssd   autofs  chrony

===================   CE200 =====================


[root@server0 ~]# rpm  -q  openssh-server
openssh-server-6.4p1-8.el7.x86_64


==================== CE300 ===============================

[root@server0 ~]# vim /etc/selinux/config

[root@server0 ~]# vim /etc/ssh/sshd_config

[root@server0 ~]# systemctl   restart   sshd  && systemctl  enable  sshd

[root@server0 ~]# systemctl  restart  firewalld.service

[root@server0 ~]# vim /etc/bashrc

[root@server0 ~]# vim /etc/postfix/main.cf 

[root@server0 ~]# systemctl  restart    postfix.service 
[root@server0 ~]# systemctl   is-enabled  postfix

[root@server0 ~]# vim /etc/samba/smb.conf 

[root@server0 ~]# systemctl  restart  smb  && systemctl  enable  smb.service 

[root@server0 ~]# vim /etc/exports

[root@server0 ~]# vim /etc/sysconfig/nfs 

[root@server0 ~]# systemctl  start  nfs-server  nfs-secure-server
[root@server0 ~]# systemctl  enable  nfs-server nfs-secure-server

[root@server0 ~]# vim   /etc/httpd/conf.d/VirtualHost.conf

[root@server0 ~]# vim   /etc/httpd/conf.d/ssl.conf 

[root@server0 ~]# vim  /etc/httpd/conf.d/Directory.conf

[root@server0 ~]# systemctl  start httpd  &&  systemctl  enable  httpd

[root@server0 ~]# vim  /root/foo.sh

[root@server0 ~]# vim  /root/batchusers

[root@server0 ~]# systemctl  start   target  && systemctl  enable   target.service 

[root@server0 ~]# vim /etc/my.cnf

[root@server0 ~]# systemctl  restart  mariadb &&  systemctl   enable  mariadb

---------------------------------------------------------------------------
[root@desktop0 ~]# vim /etc/selinux/config 

[root@desktop0 ~]# vim /etc/ssh/sshd_config

[root@desktop0 ~]# systemctl restart  sshd  && systemctl  enable  sshd

[root@desktop0 ~]# firewall-cmd  --complete-reload  # 更新规则，重启firewalld 服务

[root@desktop0 ~]# vim /etc/bashrc

[root@desktop0 ~]# vim /etc/fstab

[root@desktop0 ~]# systemctl  start  nfs-secure  && systemctl  enable  nfs-secure

[root@desktop0 ~]# vim   /etc/iscsi/initiatorname.iscsi 

[root@desktop0 ~]# systemctl  daemon-reload  #守护进程重新加载

[root@desktop0 ~]# systemctl  restart  iscsid && systemctl  enable  iscsid

[root@desktop0 ~]# vim  /var/lib/iscsi/nodes/iqn.2016-02.com.example\:server0/172.25.0.11\,3260\,1/default 

[root@desktop0 ~]# systemctl   restart  iscsi   &&  systemctl   enable  iscsi 



@server0 ~]# yum -y install   postfix   samba    nfs-utils    elinks
               httpd-manual   httpd     mod_ssl   mod_wsgi
               targetcli     mariadb-server      mariadb

firewalld  firewall-config   

[root@desktop0 ~]# yum  -y install  samba-client  cifs-utils   elinks
            iscsi-initiator-utils   iscsi-initiator-utils.i686 




==============================================
=============8.通过 Samba 发布共享目录============
-------------------------- 9 配置多用户Samba挂载

[root@server0 ~]# firewall-cmd  --set-default-zone=trusted 

[root@server0 ~]# firewall-cmd  --complete-reload 
success
[root@server0 ~]# grep  -in  defaultzone= /etc/firewalld/firewalld.conf
6:DefaultZone=trusted

[root@server0 ~]# firewall-cmd --get-default-zone 
trusted

[root@server0 ~]# yum -y install samba

[root@server0 ~]# setsebool -P samba_export_all_rw on

[root@server0 ~]# getsebool  -a  |grep samba_export_all_
samba_export_all_ro --> off
samba_export_all_rw --> on

[root@server0 ~]# useradd harry 
[root@server0 ~]# useradd  kenji 
[root@server0 ~]# useradd  chihiro

[root@server0 ~]# echo  -e  "migwhisk\nmigwhisk" |pdbedit -a harry
[root@server0 ~]# echo  -e  "atenorth\natenorth" |pdbedit -a kenji
[root@server0 ~]# echo  -e  "atenorth\natenorth" |pdbedit -a chihiro

[root@server0 ~]# mkdir  /common   /devops

[root@server0 ~]# echo  common  > /common/root.txt
[root@server0 ~]# echo  devops  > /devops/root.txt

[root@server0 ~]# setfacl    -m  u:chihiro:7  /devops/

[root@server0 ~]# vim  /etc/samba/smb.conf 

[root@server0 ~]# tail   -7    /etc/samba/smb.conf 
[common]
path = /common
hosts allow = 172.25.0.0/24
[devops]
path = /devops
write list = chihiro
hosts allow = 172.25.0.0/24

[root@server0 ~]# grep  -Pn  "^(\s){0,}workgroup ="  /etc/samba/smb.conf 
89:	workgroup = STAFF

[root@server0 ~]# systemctl  restart  smb  && systemctl  enable  smb.service

-----------------------------------------------------------------------------------------------------
[root@desktop0 ~]# firewall-cmd  --set-default-zone=trusted

[root@desktop0 ~]# firewall-cmd  --complete-reload 

[root@desktop0 ~]# grep  -in  defaultzone=  /etc/firewalld/firewalld.conf
6:DefaultZone=trusted

[root@desktop0 ~]# firewall-cmd  --get-default-zone 
trusted
[root@desktop0 ~]# yum  -y install  samba-client  cifs-utils |tail   -4

[root@desktop0 ~]# echo |smbclient  -L   //172.25.0.11

[root@desktop0 ~]# mkdir  /desktop   /mnt/dev

[root@desktop0 ~]# mount  -t cifs  -o username=harry,password=migwhisk  //172.25.0.11/common  /desktop/

[root@desktop0 ~]# vim  /etc/fstab 

[root@desktop0 ~]# tail  -1   /etc/fstab

//172.25.0.11/devops  /mnt/dev   cifs  defaults,user=kenji,pass=atenorth,multiuser,sec=ntlmssp,_netdev    0  0

/***************
NT (New Technology) 新技术
LAN  local area network 局域网
NTLMSSP (NT LAN Manager (NTLM) Security Support Provider) 
NTLMSSP（ NT LAN Manager (NTLM) 安全支持提供程序 ）
************/

[root@desktop0 ~]# mount  -a

[root@desktop0 ~]# su  -  student

[student@desktop0 ~]$ cifscreds   add  -u chihiro
Usage:
	cifscreds add [-u username] [-d] <host|domain>
	cifscreds clear [-u username] [-d] <host|domain>
	cifscreds clearall 
	cifscreds update [-u username] [-d] <host|domain>

[student@desktop0 ~]$ cifscreds  add  -u chihiro  172.25.0.11
Password: atenorth

[student@desktop0 ~]$ echo  "chihiro write" > /mnt/dev/chihiro.txt

=============================================
===========================================

------------------ 10. 配置 NFS 共享服务 ------------------------------------

[root@server0 ~]# lab  nfskrb5 setup   # 加入kerberos认证域
[root@server0 ~]# wget  http://classroom.example.com/pub/keytabs/server0.keytab  -O  /etc/krb5.keytab
[root@server0 ~]# klist  -k  /etc/krb5.keytab 

[root@server0 ~]# yum  -y install  nfs-utils

[root@server0 ~]# mkdir  -p  /public  /protected/project

[root@server0 ~]# echo  public > /public/root.txt
[root@server0 ~]# echo protected > /protected/root.txt

[root@server0 ~]# id  ldapuser0

[root@server0 ~]# chown   ldapuser0   /protected/project/

[root@server0 ~]# vim  /etc/exports

[root@server0 ~]# cat  /etc/exports
/public      172.25.0.0/24(ro)
/protected   172.25.0.0/24(rw,sec=krb5p)

[root@server0 ~]# vim  /etc/sysconfig/nfs 

[root@server0 ~]# grep  -n "^RPCNFSDARGS="  /etc/sysconfig/nfs 
13:RPCNFSDARGS="-V 4"            #激活NFS v4版本

-------------------------- //启用两个系统服务 ---------------------
[root@server0 ~]# systemctl  start  nfs-server  nfs-secure-server
[root@server0 ~]# systemctl  enable  nfs-server nfs-secure-server

[root@server0 ~]# showmount  -e

[root@server0 ~]# exportfs   -rv


--------------------------------  11 . 挂载NFS共享 --------------------------------------------

[root@desktop0 ~]# lab  nfskrb5  setup  # 加入kerberos认证域

[root@desktop0 ~]# wget  http://classroom.example.com/pub/keytabs/desktop0.keytab   -O  /etc/krb5.keytab

[root@desktop0 ~]# klist  -k  /etc/krb5.keytab 

[root@desktop0 ~]# systemctl  start  nfs-secure  && systemctl  enable  nfs-secure

[root@desktop0 ~]# showmount  -e  172.25.0.11
Export list for 172.25.0.11:
/protected 172.25.0.0/24
/public    172.25.0.0/24

[root@desktop0 ~]# mkdir   /mnt/nfs{mount,secure}

[root@desktop0 ~]# vim   /etc/fstab 

[root@desktop0 ~]# tail  -3   /etc/fstab

//172.25.0.11/devops  /mnt/dev   cifs  defaults,user=kenji,pass=atenorth,multiuser,sec=ntlmssp,_netdev    0  0
172.25.0.11:/public   /mnt/nfsmount  nfs  defaults,_netdev  0   0
172.25.0.11:/protected  /mnt/nfssecure  nfs  defaults,_netdev  0  0

[root@desktop0 ~]# mount  -a

[root@desktop0 ~]# ls  -ld  /mnt/nfssecure/project/

[root@desktop0 ~]# ssh -o StrictHostKeyChecking=no -l  ldapuser0 172.25.0.10

ldapuser0@172.25.0.10's password: kerberos（输入密码 kerberos)

[ldapuser0@desktop0 ~]$ echo  "ldapuser0 write " > /mnt/nfssecure/project/ldapuser0.txt

[ldapuser0@desktop0 ~]$ exit
登出


查找所有或者某个服务
[root@desktop0 ~]# systemctl list-units --type=service
UNIT                       LOAD   ACTIVE SUB     DESCRIPTION
abrt-ccpp.service          loaded active exited  Install ABRT coredump hook
abrt-oops.service          loaded active running ABRT kernel log watcher
..............

[root@server0 ~]# systemctl list-units  --type=service  |grep target
target.service       loaded active exited  Restore LIO kernel target configuration
                         加载的活动退出还原 LIO 内核目标配置

[root@server0 ~]# systemctl list-units  --type=service  |grep httpd
httpd.service      loaded active running The Apache HTTP Server
                            运行Apache HTTP服务器时已加载为活动


一，考场纪律
二，上午EX200考题注意点
三，EX300考题注意点
1，下午需要用到2台机器，不需要破密，
"?" 只需要配置静态主机名，
IP不需要配置，
让其通过DHCP自动获取就可。"?"

RHCE7-EX300模拟测试
考试说明,请仔细阅读
您在考试过程中将使用的两个系统的信息如下：
 * server0.example.com(ServerX) 是一个主要的服务器
 * desktop0.example.com(DesktopX)主要用作客户端
两个系统的root密码为redhat

系统的IP地址由DHCP提供，您可以视其正常，
或者您可以按以下信息重新设置为静态IP：

 * server0.example.com ：172.25.0.11
 * desktop0.example.com ：172.25.0.10
 * 子网掩码为：255.255.255.0
 * 默认网关为：172.25.0.254


匿名登入ftp://176.121.0.120，找到目录“software”，
把里面的checkcsa-2.4.0.tar.gz       rht-labcheck.tar.gz下载到真机的/root下面

4，验证server和desktop的yum源是否可用。如果不可用，解决方法如下：
1）先查看真机的防火墙是否是trusted，如果不是，则需要设置为该模式；
2）查看真机的/content目录下，是否有3个目录：rhel7.0、lost+found、courses，如果没有，则执行第3步；
3）在真机上查看/var/lib/libvrit/images/content这个目录是否存在，及目录下面是否有3个子目录rhel7.0、lost+found、courses；如果存在，则可以通过软链接ln  -s  /var/lib/libvrit/images/content  /content来实现。
4）上面的步骤完成后，真机重启nfs服务，systemctl restart nfs。
5）再次还原3台虚拟机，并远程连接后测试yum源。




[root@room9pc27 ~]# firewall-cmd  --state
not running
[root@room9pc27 ~]# semanage  port -l |grep ssh_port
ssh_port_t                     tcp      22
[root@room9pc27 ~]# netstat  -npult |grep sshd
tcp        0      0 0.0.0.0:7920     0.0.0.0:*    LISTEN      941/sshd
tcp6       0      0 :::7920           :::*        LISTEN      941/sshd
[root@room9pc27 ~]# grep  -n  Port  /etc/ssh/sshd_config 
16:Port 7920
17:#Port 22
100:#GatewayPorts no






