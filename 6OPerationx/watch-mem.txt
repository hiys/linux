
[root@VM1 ~]# ifconfig |awk '/inet /{print $2}'
192.168.4.11
192.168.2.11
[root@VM1 ~]# route -n |awk '{print $2}'
IP
Gateway
192.168.4.254
192.168.2.254
[root@VM1 nginx-1.12.2]# ./configure  --help |egrep 'http_ssl_module|with-stream|with-http_stub_status'
  --with-http_ssl_module             enable ngx_http_ssl_module
  --with-http_stub_status_module     enable ngx_http_stub_status_module
  --with-stream                      enable TCP/UDP proxy module
  --with-stream=dynamic              enable dynamic TCP/UDP proxy module
  --with-stream_ssl_module           enable ngx_stream_ssl_module
  --with-stream_realip_module        enable ngx_stream_realip_module
  --with-stream_geoip_module         enable ngx_stream_geoip_module
  --with-stream_geoip_module=dynamic enable dynamic ngx_stream_geoip_module
  --with-stream_ssl_preread_module   enable ngx_stream_ssl_preread_module
[root@VM1 nginx-1.12.2]# nginx -V
nginx version: nginx/1.12.2
built by gcc 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) 
built with OpenSSL 1.0.2k-fips  26 Jan 2017
TLS SNI support enabled
configure arguments: --prefix=/usr/local/nginx --user=nginx --group=nginx --with-http_ssl_module --with-stream --with-http_stub_status_module --without-http_autoindex_module --without-http_ssi_module

[root@VM1 ~]# vim /usr/local/nginx/html/index.html
[root@VM1 ~]# sed -rn  -e  '/<title>|<h1>/p'  -e  '/<h1>/{/VM/p}' /usr/local/nginx/html/index.html
<title>Welcome to VM1 !</title>
<h1>Welcome to VM1 192.168.4.11 !</h1>
<h1>Welcome to VM1 192.168.4.11 !</h1>
[root@VM1 ~]# sed -rn  -e   '/<h1>/{/VM/p}' /usr/local/nginx/html/index.html<h1>Welcome to VM1 192.168.4.11 !</h1>
[root@VM1 ~]# sed -rn   '/<h1>/{/VM/p}' /usr/local/nginx/html/index.html
<h1>Welcome to VM1 192.168.4.11 !</h1>

[root@VM1 ~]# sed -n '/<title>/p' /usr/local/nginx/html/index.html |sed -n \
> 's/VM1/VM1VM1/p'
<title>Welcome to VM1VM1 !</title>
[root@VM1 ~]# sed -n '/<title>/p' /usr/local/nginx/html/index.html 
<title>Welcome to VM1 !</title>

[root@VM1 ~]# sed -rn   '/<h1>/{/VM/p}' /usr/local/nginx/html/index.html
<h1>Welcome to VM1 192.168.4.11 !</h1>
 ///*****精确查找多条件并且替换
[root@VM1 ~]# sed -ir   '/<h1>/{s/VM1/VM1vm1/}' /usr/local/nginx/html/index.html

[root@VM1 ~]# sed -rn   '/<h1>/{/VM/p}' /usr/local/nginx/html/index.html
<h1>Welcome to VM1vm1 192.168.4.11 !</h1>
[root@VM1 ~]# firefox http://192.168.4.12/status
Active connections: 1 
server accepts handled requests
 9 9 25 
Reading: 0 Writing: 1 Waiting: 0 
/**********当VM2 开启数据库代理功能后,还能查看firefox http://192.168.4.12/status
stream  {
  upstream mysqls  {
    server  192.168.2.13:3306;
    server  192.168.2.14:3306;
  }
  server  {
    listen  3306;
    proxy_pass  mysqls;
  }
}
************/
[root@VM1 ~]# firefox http://192.168.4.12/status
Active connections: 1 
server accepts handled requests
 13 13 43 
Reading: 0 Writing: 1 Waiting: 0 
[root@VM1 ~]# firefox http://192.168.4.12
[root@VM1 ~]# firefox http://192.168.4.12/status
[root@VM1 ~]# firefox http://192.168.4.12/index.php
[root@VM1 ~]# firefox http://192.168.4.12/index.php
[root@VM1 ~]# elinks -dump http://192.168.2.12 |sed -n  '/Tomcat/{/Congratulations/p}' 
If you're seeing this, you've successfully installed Tomcat. Congratulations!
[root@VM1 ~]# elinks -dump http://192.168.2.12 |sed -n  '/Tomcat/{/Congratulations/p}'
VM4 VM4, you've successfully installed Tomcat. Congratulations!







[root@VM2 ~]# ifconfig |awk '/inet /{print $2}'
192.168.4.12
192.168.2.12
[root@VM2 ~]# route -n |awk '{print $2}'
IP
Gateway
192.168.4.254
192.168.2.254
[root@VM2 ~]# vim /usr/local/nginx/conf/nginx.conf
 11 events {
 12     worker_connections  65535;
 13     use epoll;
 14 }
 15 stream  {
 16     upstream mysqls  {
 17       server  192.168.2.13:3306;
 18       server  192.168.2.14:3306;
 19     }
 20     server  {
 21       listen  3306;
 22       proxy_pass  mysqls;
 23     }
 24 }
 25 http {

 41     #gzip  on;
 42     upstream  webs  {
 43           server  192.168.2.13:80 weight=1 max_fails=1  fail_timeout=30;
 44           server  192.168.2.14:80 weight=2 max_fails=1  fail_timeout=30;
 45           server  192.168.2.5  down;
 46     }
 47     server {
 48         listen       80;
 49         server_name  localhost;
 50         location /status  {
 51              stub_status  on;
 52              allow  192.168.4.0/24;
 53              allow  192.168.2.0/24;
 54              deny  all;
 55          }

 60         location / {
 61             proxy_pass  http://webs;
 62             root   html;
 63             index  index.html index.htm;
 64         }
[root@VM2 ~]# nginx -s reload
[root@VM2 ~]# sed -n '/<title>/p' /usr/local/nginx/html/index.html 
<title>Welcome to nginx!</title>

[root@VM2 ~]# sed -i '/<title>/s/nginx/VM2/' /usr/local/nginx/html/index.html

[root@VM2 ~]# sed -n '/<title>/p' /usr/local/nginx/html/index.html 
<title>Welcome to VM2!</title>

[root@VM2 ~]# sed -i '/<h1>/s/nginx/VM2/' /usr/local/nginx/html/index.html
[root@VM2 ~]# sed -n '/<h1>/{/VM2/p}' /usr/local/nginx/html/index.html
<h1>Welcome to VM2!</h1>


[root@VM2 ~]# nginx -s reload
[root@VM2 ~]# vim /usr/local/nginx/conf/nginx.conf
 41     #gzip  on;
 42     upstream  webs  {
 43           server  192.168.2.13:80 weight=1 max_fails=1  fail_timeout=30;
 44          server  192.168.2.14:80 weight=2 max_fails=1  fail_timeout=30;
 45           server  192.168.2.5  down;
 46     }
 47     upstream  tomcat {
 48         server 192.168.2.13:8080;
 49         server 192.168.2.14:8080;
 50     }
 51     server {
 52         listen       80;
 53         server_name  localhost;
 54         location /status  {
 55              stub_status  on;
 56              allow  192.168.4.0/24;
 57              allow  192.168.2.0/24;
 58              deny  all;
 59          }
 64         location / {  
    ##建立多个 location /a {proxy_pass  http://webs;
          location /b {proxy_pass  http://tomcat 未证实的猜想实验,以后再做,备注
 65       ##      proxy_pass  http://webs; 注意端口冲突
 66             proxy_pass  http://tomcat;
 67             root   html;
 68             index  index.html index.htm;
 69         }
[root@VM2 ~]# reboot
[root@room9pc01 ~]# ssh -X 192.168.4.12
[root@VM2 ~]# nginx
nginx: [emerg] bind() to 0.0.0.0:3306 failed (98: Address already in use)
.................................
nginx: [emerg] still could not bind()

[root@VM2 ~]# nginx -s reload
nginx: [error] open() "/usr/local/nginx/logs/nginx.pid" failed (2: No such file or directory)
[root@VM2 ~]# ls /usr/local/nginx/logs/nginx.pid
ls: 无法访问/usr/local/nginx/logs/nginx.pid: 没有那个文件或目录
[root@VM2 ~]# ls /usr/local/nginx/logs/
access.log  error.log
        /***********             使用nginx -c的参数指定nginx.conf文件的位置
[root@VM2 ~]# nginx -c /usr/local/nginx/conf/nginx.conf
[root@VM2 ~]# ss -anptul |grep nginx
tcp    LISTEN     0      128       *:80                    *:*                   users:(("nginx",pid=1744,fd=6),("nginx",pid=1743,fd=6))
[root@VM2 ~]# nginx -s reload
[root@VM2 ~]# 
[root@VM2 ~]# firefox http://192.168.4.12
[root@VM2 ~]# useradd -s /sbin/nologin varnish
[root@VM2 ~]# yum -y install gcc readline-devel ncurses-devel pcre-devel
[root@VM2 ~]# rpm -q  gcc readline-devel ncurses-devel pcre-devel
gcc-4.8.5-16.el7.x86_64
readline-devel-6.2-10.el7.x86_64
ncurses-devel-5.9-13.20130511.el7.x86_64
pcre-devel-8.32-17.el7.x86_64
[root@VM2 ~]# ls lnmp_soft/python-docutils-0.11-0.2.20130715svn7687.el7.noarch.rpm 
lnmp_soft/python-docutils-0.11-0.2.20130715svn7687.el7.noarch.rpm

[root@VM2 ~]# yum -y install lnmp_soft/python-docutils-0.11-0.2.20130715svn7687.el7.noarch.rpm

[root@VM2 ~]# tar -xzf lnmp_soft/varnish-5.2.1.tar.gz
[root@VM2 ~]# ls
anaconda-ks.cfg       lnmp_soft         varnish-5.2.1  视频  下载
initial-setup-ks.cfg  lnmp_soft.tar.gz  公共           图片  音乐
lnmp.sh               nginx-1.12.2      模板           文档  桌面
[root@VM2 ~]# cd varnish-5.2.1/;ls
aclocal.m4   configure     lib          README.Packaging
autogen.sh   configure.ac  LICENSE      README.rst
bin          doc           m4           varnishapi.pc.in
build-aux    etc           Makefile.am  varnishapi-uninstalled.pc.in
ChangeLog    include       Makefile.in  varnish-legacy.m4
config.h.in  INSTALL       man          varnish.m4
[root@VM2 varnish-5.2.1]# ./configure 
[root@VM2 varnish-5.2.1]# make && make install
[root@VM2 varnish-5.2.1]# ls  etc/
builtin.vcl       example.vcl  Makefile.am
devicedetect.vcl  Makefile     Makefile.in
[root@VM2 varnish-5.2.1]# cp etc/example.vcl  /usr/local/etc/default.vcl

[root@VM2 varnish-5.2.1]# vim /usr/local/etc/default.vcl
 16 backend default {
 17     .host = "192.168.2.13";
 18     .port = "80";
 19 }
[root@VM2 varnish-5.2.1]# nginx -s stop
                                                  /*** 启动服务varnishd
[root@VM2 varnish-5.2.1]# varnishd  -f /usr/local/etc/default.vcl
Debug: Platform: Linux,3.10.0-693.el7.x86_64,x86_64,-junix,-smalloc,-smalloc,-hcritbit
Debug: Child (12371) Started
[root@VM2 varnish-5.2.1]# elinks -dump http://192.168.2.12 |sed -n 1p
                          Welcome to VM3 192.168.2.13!

[root@VM2 ~]# netstat  -anputl | grep varnishd |column -t
tcp   0  0  127.0.0.1:40910  0.0.0.0:*  LISTEN  12361/varnishd
tcp   0  0  0.0.0.0:80       0.0.0.0:*  LISTEN  12361/varnishd
tcp6  0  0  :::80            :::*       LISTEN  12361/varnishd
tcp6  0  0  ::1:39165        :::*       LISTEN  12361/varnishd

[root@VM2 ~]# ss  -anputl | grep varnishd |column -t
tcp  LISTEN  0  10   127.0.0.1:40910  *:*   users:(("varnishd",pid=12361,fd=9))
tcp  LISTEN  0  128  *:80             *:*   users:(("cache-main",pid=12371,fd=5),("varnishd",pid=12361,fd=5))
tcp  LISTEN  0  128  :::80            :::*  users:(("cache-main",pid=12371,fd=6),("varnishd",pid=12361,fd=6))
tcp  LISTEN  0  10   ::1:39165        :::*  users:(("varnishd",pid=12361,fd=8))


[root@VM3 ~]# vim /usr/local/nginx/html/index.html 
[root@VM3 ~]# sed -n '/<h1>/p' /usr/local/nginx/html/index.html
<h1>Welcome to VM3 192.168.2.13!ADDx</h1>
[root@VM2 varnish-5.2.1]# elinks -dump http://192.168.2.12 |sed -n 1p
                        Welcome to VM3 192.168.2.13!ADDx
[root@VM2 varnish-5.2.1]# varnish
varnishadm   varnishhist  varnishncsa  varnishtest  
varnishd     varnishlog   varnishstat  varnishtop   
[root@VM2 varnish-5.2.1]# varnishlog      //实时查看varnish日志
^C
[root@VM2 varnish-5.2.1]# 
[root@VM2 varnish-5.2.1]# varnishncsa     //实时动态查看访问日志
^C
              /*** 更新缓存数据，在后台web服务器更新页面内容后，
****用户访问代理服务器看到的还是之前的数据，
说明缓存中的数据过期了需要更新（默认也会自动更新，但非实时更新）
[root@VM2 varnish-5.2.1]# varnishadm
200        
-----------------------------
Varnish Cache CLI 1.0
-----------------------------
Linux,3.10.0-693.el7.x86_64,x86_64,-junix,-smalloc,-smalloc,-hcritbit
varnish-5.2.1 revision 67e562482

Type 'help' for command list.
Type 'quit' to close CLI session.

varnish> ban req.url ~.*
104        
Too few parameters
                     //清空缓存数据，支持正则表达式(注意~ [空格] .* )
varnish> ban req.url ~ .*
200        

varnish> quit
500        
Closing CLI connection

[root@room9pc01 ~]# ssh -X 192.168.4.12
root@192.168.4.12's password: 

[root@VM2 ~]# ls /usr/local/etc/default.vcl 
/usr/local/etc/default.vcl
[root@VM2 ~]# netstat -anptul |grep varnishd
注意：1、varnish服务本身，启动默认端口80；如果需要重新指定启动的端口使用 -a选项 ,如-a 0.0.0.0:8080
      2、-T 选项指定了varnish服务本身的管理端口，正是利用这个端口完成一些不关闭varnish服务而使新配置生效。
//varnishd –s malloc,128M        定义varnish使用内存作为缓存，空间为128M
//varnishd –s file,/var/lib/varnish_storage.bin,1G 定义varnish使用文件作为缓存

[root@VM2 ~]# varnishd -f  /usr/local/etc/default.vcl  -s malloc,200M  -T 127.0.0.1:2000
Debug: Platform: Linux,3.10.0-693.el7.x86_64,x86_64,-junix,-smalloc,-smalloc,-hcritbit
Debug: Child (1756) Started
[root@VM2 ~]# netstat -anptul |grep varnishd
tcp        0      0 0.0.0.0:80       0.0.0.0:*    LISTEN      1746/varnishd       
tcp        0      0 127.0.0.1:2000   0.0.0.0:*    LISTEN      1746/varnishd       
tcp6       0      0 :::80            :::*         LISTEN      1746/varnishd       
[root@VM2 ~]# 
[root@VM2 ~]# telnet 127.0.0.1  2000
Trying 127.0.0.1...
Connected to 127.0.0.1.
Escape character is '^]'.
107 59      
msjqmiskzytglsqqpwrdhlohvxmfykqy

Authentication required.


help
200 613     
auth <response>
  
quit
500 22      
Closing CLI connection
Connection closed by foreign host.
[root@VM2 ~]# 





[root@VM3 ~]# ifconfig |awk '/inet /{print $2}'
192.168.4.13
192.168.2.13
[root@VM3 ~]# route -n |awk '{print $2}'
IP
Gateway
192.168.4.254
192.168.2.254
[root@VM3 ~]# sed -i '/<title>/s/nginx/VM3/' /usr/local/nginx/html/index.html 
[root@VM3 ~]# sed -n '/<title>/{/VM3/p}' /usr/local/nginx/html/index.html
<title>Welcome to VM3!</title>
[root@VM3 ~]# sed -i '/<h1>/s/nginx/VM3 192.168.2.13/' /usr/local/nginx/html/index.html

[root@VM3 ~]# sed -n '/<h1>/{/VM3/p}' /usr/local/nginx/html/index.html
<h1>Welcome to VM3 192.168.2.13!</h1>
 [root@VM3 ~]# grep -n '<h1>' /usr/local/nginx/html/index.html
14:<h1>Welcome to VM3 192.168.2.13!</h1>

[root@VM3 ~]# vim /usr/local/nginx/conf/nginx.conf
 12 events {
 13     worker_connections  65535;
 14     use  epoll;
 15 }
 18 http {
 36     server {
 37         listen       80;
 38         server_name  localhost;
 39         location  /status  {
 40            stub_status  on;
 41            allow 192.168.4.0/24;
 42            allow  192.168.2.0/24;
 43            deny   all;
 44         }
[root@VM3 ~]# nginx -s reload
[root@VM3 ~]# ss -ntul |egrep ':80|3306|:9000|:11211'
udp    UNCONN     0      0         *:11211                 *:*                  
udp    UNCONN     0      0        :::11211                :::*                  
tcp    LISTEN     0      128       *:11211                 *:*                  
tcp    LISTEN     0      128       *:80                    *:*                  
tcp    LISTEN     0      128    127.0.0.1:9000                  *:*                  
tcp    LISTEN     0      50        *:3306                  *:*                  
tcp    LISTEN     0      128      :::11211                :::* 
[root@VM3 ~]# vim /etc/php-fpm.d/www.conf 
[root@VM3 ~]# tail -5 /etc/php-fpm.d/www.conf 
; Set session path to a directory owned by process user
;php_value[session.save_handler] = files
;php_value[session.save_path] = /var/lib/php/session
php_value[session.save_handler] = memcache
php_value[session.save_path] = "tcp://192.168.2.12:11211"

[root@VM3 ~]# vim /usr/local/nginx/conf/nginx.conf
 71         location ~ \.php$ {
 72             root           html;
 73             fastcgi_pass   127.0.0.1:9000;
 74             fastcgi_index  index.php;
 75         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
 76             include        fastcgi.conf;
 77         }
[root@VM3 ~]# nginx -s reload

[root@VM3 ~]# cd /usr/local/nginx/html/;ls
50x.html  index.html
[root@VM3 html]# tar -xzf /root/lnmp_soft/php_scripts/php-memcached-demo.tar.gz
[root@VM3 html]# ls
50x.html  index.html  php-memcached-demo
[root@VM3 html]# mv php-memcached-demo/*  ./
[root@VM3 html]# ls
50x.html  images      index.php  php-memcached-demo  style.css
home.php  index.html  login.php  README.md
[root@VM3 html]# vim index.php
<body bgcolor=gray>
<div id="main">
<h1>PHP Login Session VM3 192.168.2.13</h1>

[root@VM3 html]# vim home.php
Welcome vm3 VM3:  <?php echo $_SESSION['login_user'] ?>
[root@VM3 html]# systemctl restart php-fpm
---------------------------------------------------------------------------------------------
                                       //安装JDK
[root@VM3 ~]#  yum -y install java-1.8.0-openjdk-headless  java-1.8.0-openjdk

[root@VM3 ~]# which java
/usr/bin/java
[root@VM3 ~]# java -version  //查看JAVA版本
openjdk version "1.8.0_131"
OpenJDK Runtime Environment (build 1.8.0_131-b12)
OpenJDK 64-Bit Server VM (build 25.131-b12, mixed mode)

[root@VM3 ~]# cd /usr/local/;ls
bin  etc  games  include  lib  lib64  libexec  nginx  sbin  share  src

[root@VM3 local]# ls /root/lnmp_soft/apache-tomcat-*
/root/lnmp_soft/apache-tomcat-8.0.30.tar.gz
/root/lnmp_soft/apache-tomcat-9.0.6-fulldocs.tar.gz
/root/lnmp_soft/apache-tomcat-9.0.6.tar.gz

         安装Tomcat（apache-tomcat-8.0.30.tar.gz软件包
[root@VM3 local]# tar -xzf /root/lnmp_soft/apache-tomcat-8.0.30.tar.gz 
[root@VM3 local]# ls
apache-tomcat-8.0.30  etc    include  lib64    nginx  share
bin                   games  lib      libexec  sbin   src
bin/      //主程序目录
lib/           //库文件目录
logs/          //日志目录  
temp/          //临时目录
work/           //自动编译目录jsp代码转换servlet
conf/           //配置文件目录
webapps/         //页面目录
[root@VM3 local]# mv apache-tomcat-8.0.30/  tomcat/;ls
bin  games    lib    libexec  sbin   src
etc  include  lib64  nginx    share  tomcat

[root@VM3 local]# ls tomcat/
bin   lib      logs    RELEASE-NOTES  temp     work
conf  LICENSE  NOTICE  RUNNING.txt    webapps

/**重启服务
[root@web1 ~]# /usr/local/tomcat/bin/shutdown.sh
[root@web1 ~]# /usr/local/tomcat/bin/startup.sh
****/
[root@VM3 local]# /usr/local/tomcat/bin/startup.sh 启动服务

[root@VM3 local]# ss -nptul |grep -E 'java|tomcat' |column -t # 查看java监听的端口
tcp  LISTEN  0  100  :::8080                :::*  users:(("java",pid=6687,fd=46))
tcp  LISTEN  0  1    ::ffff:127.0.0.1:8005  :::*  users:(("java",pid=6687,fd=67))
tcp  LISTEN  0  100  :::8009                :::*  users:(("java",pid=6687,fd=51))
/****
如果检查端口时，8005端口启动非常慢，可用使用下面的命令用urandom替换random（非必须操作）。
[root@web1 ~]# mv /dev/random  /dev/random.bak
[root@web1 ~]# ln -s /dev/urandom  /dev/random
***/
[root@VM3 local]# ll /dev/{,u}random
crw-rw-rw-. 1 root root 1, 8 9月  28 08:28 /dev/random
crw-rw-rw-. 1 root root 1, 9 9月  28 08:28 /dev/urandom
[root@VM3 local]# firefox http://192.168.2.13:8080
[root@VM3 local]# cd /usr/local/tomcat/webapps/ROOT/;ls
asf-logo.png       bg-nav-item.png  favicon.ico        tomcat.gif        WEB-INF
asf-logo-wide.gif  bg-nav.png       index.jsp          tomcat.png
bg-button.png      bg-upper.png     RELEASE-NOTES.txt  tomcat-power.gif
bg-middle.png      build.xml        tomcat.css         tomcat.svg
                         创建测试JSP页面
[root@VM3 ROOT]# vim test.jsp
[root@VM3 ROOT]# cat test.jsp
<html>
<body>
<center>
Now VM3 192.168.2.13 time is: <%=new java.util.Date()%>
</center>
</body>
</html>
[root@VM3 ROOT]# elinks -dump http://192.168.2.13:8080/test.jsp
           Now VM3 192.168.2.13 time is: Fri Sep 28 11:19:55 CST 2018
[root@VM3 ROOT]# 
 实现两个基于域名的虚拟主机，域名分别为：www.a.com和 www.b.com
使用www.a.com域名访问的页面根路径为/usr/local/tomcat/a/ROOT
使用www.b.com域名访问的页面根路径为/usr/local/tomcat/b/base
访问www.a.com/test时，页面自动跳转到/var/www/html目录下的页面

[root@VM3 ROOT]# pwd
/usr/local/tomcat/webapps/ROOT
[root@VM3 conf]# ls /usr/local/tomcat/
bin   lib      logs    RELEASE-NOTES  temp     work
conf  LICENSE  NOTICE  RUNNING.txt    webapps

[root@VM3 ROOT]# cd /usr/local/tomcat/conf/;ls
Catalina             context.xml         tomcat-users.xml
catalina.policy      logging.properties  tomcat-users.xsd
catalina.properties  server.xml          web.xml
[root@VM3 conf]# vim server.xml  #[注意空格 autoDeploy="true"   /> ]
      </Host>
      <Host  name="www.a.com" appBase="a" unpackWARs="true" autoDeploy="true" />
      <Host name="www.b.com" appBase="b" unpackWARs="true" autoDeploy="true">
      </Host>
      <Host  name="www.c.com" appBase="c" unpackWARs="true" autoDeploy="true">
      </Host>
    </Engine>
  </Service>
</Server>                   ###          创建虚拟主机对应的页面根路径
[root@VM3 conf]# mkdir -p /usr/local/tomcat/{a,b,c}/ROOT/
[root@VM3 conf]# ls /usr/local/tomcat/
a  bin  conf  LICENSE  NOTICE         RUNNING.txt  webapps
b  c    lib   logs     RELEASE-NOTES  temp         work

[root@VM3 conf]# ls  /usr/local/tomcat/webapps/
docs  examples  host-manager  manager  ROOT

[root@VM3 conf]# echo AAA > /usr/local/tomcat/a/ROOT/index.html;echo BBB > /usr/local/tomcat/b/ROOT/index.html;\
> echo CCC > /usr/local/tomcat/c/ROOT/index.html

[root@VM3 conf]# ls /usr/local/tomcat/{a,b,c}/ROOT/
/usr/local/tomcat/a/ROOT/:
index.html
/usr/local/tomcat/b/ROOT/:
index.html
/usr/local/tomcat/c/ROOT/:
index.html
[root@VM3 conf]# echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
[root@VM3 conf]# ls  /usr/local/bin/
[root@VM3 conf]# ls  /usr/bin/ |wc -l
1665
/**[root@VM3 conf]# vim /etc/profile
**[root@VM3 conf]# source /etc/profile
[root@VM3 conf]# tail -1 /etc/profile
export PATH=/usr/local/tomcat/bin/:$PATH
***/
[root@VM3 conf]# ls /usr/local/tomcat/bin/
bootstrap.jar                 daemon.sh         startup.sh
catalina.bat                  digest.bat        tomcat-juli.jar
catalina.sh                   digest.sh         tomcat-native.tar.gz
catalina-tasks.xml            setclasspath.bat  tool-wrapper.bat
commons-daemon.jar            setclasspath.sh   tool-wrapper.sh
commons-daemon-native.tar.gz  shutdown.bat      version.bat
configtest.bat                shutdown.sh       version.sh
configtest.sh                 startup.bat
/**[root@VM3 conf]# which startup.sh 
***/usr/local/tomcat/bin/startup.sh
[root@VM3 conf]# which shutdown.sh 
/usr/local/tomcat/bin/shutdown.sh
**/
[root@VM3 conf]# vim /etc/hosts
[root@VM3 conf]# tail -n 1 /etc/hosts
192.168.2.13  www.a.com  www.b.com  www.c.com

[root@VM3 conf]# shutdown.sh 
[root@VM3 conf]# startup.sh 
[root@VM3 conf]# firefox http://www.c.com:8080/

[root@VM3 conf]# ln -s /usr/local/tomcat/bin/shutdown.sh  /usr/local/bin/
[root@VM3 conf]# ln -s /usr/local/tomcat/bin/startup.sh  /usr/local/bin/
[root@VM3 conf]# ls /usr/local/bin/
shutdown.sh  startup.sh
[root@VM3 conf]# ll /usr/local/bin/shutdown.sh 
lrwxrwxrwx. 1 root root 33 9月  28 14:20 /usr/local/bin/shutdown.sh -> /usr/local/tomcat/bin/shutdown.sh
[root@VM3 conf]# ll /usr/local/bin/startup.sh 
lrwxrwxrwx. 1 root root 32 9月  28 14:20 /usr/local/bin/startup.sh -> /usr/local/tomcat/bin/startup.sh
[root@VM3 conf]# shutdown.sh  ##）重启Tomcat服务器

[root@VM3 conf]# startup.sh 
                                   ## 使用docBase参数可以修改默认网站首页路径
[root@VM3 conf]# vim server.xml
      <Host  name="www.a.com" appBase="a" unpackWARs="true" autoDeploy="true" />
      <Host name="www.b.com" appBase="b" unpackWARs="true" autoDeploy="true">
         <Context path="" docBase="base" reloadable="true"/>
      </Host>
      <Host  name="www.c.com" appBase="c" unpackWARs="true" autoDeploy="true">
      </Host>
    </Engine>
  </Service>
[root@VM3 conf]# pwd
/usr/local/tomcat/conf

[root@VM3 conf]# mkdir /usr/local/tomcat/b/base

[root@VM3 conf]# ls /usr/local/tomcat/b/
base  ROOT
[root@VM3 conf]# echo "BASE" > /usr/local/tomcat/b/base/index.html

[root@VM3 conf]# shutdown.sh 
[root@VM3 conf]# startup.sh 
[root@VM3 conf]# firefox http://www.b.com:8080/
[root@VM3 conf]# vim server.xml 
140       <Host  name="www.a.com" appBase="a" unpackWARs="true" autoDeploy="true" />

141       <Host name="www.b.com" appBase="b" unpackWARs="true" autoDeploy="true">

142          <Context path="" docBase="base" reloadable="true" />
143       </Host>
144       <Host  name="www.c.com" appBase="c" unpackWARs="true" autoDeploy="true">

145          <Context path="/test" docBase="/var/www/html/" />

146       </Host>
147     </Engine>
148   </Service>
     /*******<Context path="/test" 相当于网页调转/var/www/html/index.html
[root@VM3 conf]# ls -ld /var/www/html/
drwxr-xr-x. 2 root root 6 12月 29 2013 /var/www/html/

[root@VM3 conf]#  echo "Test" > /var/www/html/index.html

[root@VM3 conf]# shutdown.sh 
[root@VM3 conf]# startup.sh 
[root@VM3 conf]# elinks -dump http://www.c.com:8080/test
   Test
[root@VM3 conf]# firefox http://www.c.com:8080/test
[root@VM3 ~]# elinks -dump http://www.a.com:8080/
   AAA
[root@VM3 ~]# elinks -dump http://www.b.com:8080/
   BASE
[root@VM3 ~]# elinks -dump http://www.c.com:8080/
   CCC
[root@VM3 ~]# elinks -dump http://www.c.com:8080/test
   Test
[root@VM3 ~]# elinks -dump http://localhost:8080/ | sed -n 4p
                              Apache Tomcat/8.0.30
[root@VM3 ~]# 
访问页面时支持SSL加密通讯
私钥、证书存储路径为/usr/local/tomcat/conf/cert
每个虚拟主机都拥有独立的访问日志文件
配置tomcat集群环境

[root@VM3 ~]# keytool  -genkeypair -alias tomcat -keyalg RSA -keystore  /usr/local/tomcat/keystore
输入密钥库口令:  123
密钥库口令太短 - 至少必须为 6 个字符
输入密钥库口令:  123456
再次输入新口令: 123456
您的名字与姓氏是什么?
  [Unknown]:  Hiyes
您的组织单位名称是什么?
  [Unknown]:  Hiyes
您的组织名称是什么?
  [Unknown]:  Hiyes
您所在的城市或区域名称是什么?
  [Unknown]:  gz
您所在的省/市/自治区名称是什么?
  [Unknown]:  gz
该单位的双字母国家/地区代码是什么?
  [Unknown]:  gz
CN=Hiyes, OU=Hiyes, O=Hiyes, L=gz, ST=gz, C=gz是否正确?
  [否]:  y
输入 <tomcat> 的密钥口令 123456
	(如果和密钥库口令相同, 按回车):  
再次输入新口令: 123456
[root@VM3 ~]# 
[root@VM3 ~]# keytool -help
密钥和证书管理工具
命令:
 -certreq            生成证书请求
 -changealias        更改条目的别名
 -delete             删除条目
 -exportcert         导出证书
 -genkeypair         生成密钥对
 -genseckey          生成密钥
 -gencert            根据证书请求生成证书
 -importcert         导入证书或证书链
 -importpass         导入口令
 -importkeystore     从其他密钥库导入一个或所有条目
 -keypasswd          更改条目的密钥口令
 -list               列出密钥库中的条目
 -printcert          打印证书内容
 -printcertreq       打印证书请求的内容
 -printcrl           打印 CRL 文件的内容
 -storepasswd        更改密钥库的存储口令
使用 "keytool -command_name -help" 获取 command_name 的用法
[root@VM3 ~]# 
Apache 
   httpd : 80,  ssl 443
   tomcat:8080,ssl 8443
[root@VM3 ~]# vim /usr/local/tomcat/conf/server.xml
 85     <Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
 86                maxThreads="150" SSLEnabled="true" scheme="https" secure="true"
 87                clientAuth="false" sslProtocol="TLS"
 88                keystoreFile="/usr/local/tomcat/keystore" keystorePass="123456" />
 89 
 90     <!-- Define an AJP 1.3 Connector on port 8009 -->
 91     <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
[root@VM3 ~]# shutdown.sh 

[root@VM3 ~]# startup.sh 
Using CLASSPATH:    /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar
Tomcat started.
[root@VM3 ~]# firefox https://www.a.com:8443/
https://www.a.com:8443/
AAA 
[root@VM3 ~]# firefox https://www.b.com:8443/
https://www.b.com:8443/
BASE 
[root@VM3 ~]# ls /usr/local/tomcat/logs/
catalina.2018-09-28.log      localhost.2018-09-28.log
catalina.out                 localhost_access_log.2018-09-28.txt
host-manager.2018-09-28.log  manager.2018-09-28.log

[root@VM3 ~]# vim /usr/local/tomcat/conf/server.xml
135         <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
136                prefix="localhost_access_log" suffix=".txt"
137                pattern="%h %l %u %t &quot;%r&quot; %s %b" />
138 
139       </Host>
140       <Host  name="www.a.com" appBase="a" unpackWARs="true" autoDeploy="true">
141         <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
142                prefix="localhost_access_log" suffix=".txt"
143                pattern="%h %l %u %t &quot;%r&quot; %s %b" />
144       </Host>
145       <Host name="www.b.com" appBase="b" unpackWARs="true" autoDeploy="true">
146          <Context path="" docBase="base" reloadable="true" />
147       </Host>
148       <Host  name="www.c.com" appBase="c" unpackWARs="true" autoDeploy="true">
149          <Context path="/test" docBase="/var/www/html/" />
150       </Host>
151     </Engine>
152   </Service>
153 </Server>
[root@VM3 ~]# shutdown
shutdown     shutdown.sh  
[root@VM3 ~]# shutdown.sh
[root@VM3 ~]# startup.sh 
[root@VM3 ~]# firefox https://www.a.com:8443/
https://www.a.com:8443/
AAA 
[root@VM3 ~]# vim /usr/local/tomcat/conf/server.xml
      <Host  name="www.a.com" appBase="a" unpackWARs="true" autoDeploy="true">
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="a_access_log" suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />
      </Host>
      <Host name="www.b.com" appBase="b" unpackWARs="true" autoDeploy="true">
         <Context path="" docBase="base" reloadable="true" />
        <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"
               prefix="b_access_log" suffix=".txt"
               pattern="%h %l %u %t &quot;%r&quot; %s %b" />
      </Host>
      <Host  name="www.c.com" appBase="c" unpackWARs="true" autoDeploy="true">
         <Context path="/test" docBase="/var/www/html/" />
      </Host>
    </Engine>
  </Service>
</Server>
[root@VM3 ~]# shutdown.sh
[root@VM3 ~]# startup.sh 
[root@VM3 ~]# firefox https://www.a.com:8443/
https://www.a.com:8443/
AAA 
[root@VM3 ~]# firefox https://www.b.com:8443/
https://www.b.com:8443/
BASE 
[root@VM3 ~]# ls /usr/local/tomcat/logs/  #多了2个日志文件a_access_log.2018-09-28.txt
                                          #   b_access_log.2018-09-28.txt
a_access_log.2018-09-28.txt  host-manager.2018-09-28.log
b_access_log.2018-09-28.txt  localhost.2018-09-28.log
catalina.2018-09-28.log      localhost_access_log.2018-09-28.txt
catalina.out                 manager.2018-09-28.log
[root@VM3 ~]# tail -n 1 /usr/local/tomcat/logs/b_access_log.2018-09-28.txt
192.168.2.13 - - [28/Sep/2018:16:12:22 +0800] "GET / HTTP/1.1" 304 -
[root@VM3 ~]# ss -anputl |grep 'nginx'
[root@VM3 ~]# 




=====================VM4 ========================
[root@room9pc01 ~]# ll lnmp.sh 
[root@room9pc01 ~]# ll /root/桌面/lnmp_soft.tar.gz 
-rw-r--r-- 1 root root 78844240 9月  25 21:01 /root/桌面/lnmp_soft.tar.gz

[root@room9pc01 ~]# ssh -X 192.168.4.14
[root@VM4 ~]# ifconfig |awk '/inet /{print $2}'
192.168.4.14
192.168.2.14
[root@VM4 ~]# route -n |awk '{print $2}'
Gateway
192.168.4.254
192.168.2.254
[root@VM4 ~]# sed -i '/<title>/s/nginx/VM3/' /usr/local/nginx/html/index.html 
[root@VM4 ~]# sed -i '/<h1>/s/nginx/VM3 192.168.2.14/' /usr/local/nginx/html/index.html
[root@VM4 ~]# grep -En '<h1>|<title>' /usr/local/nginx/html/index.html
4:<title>Welcome to VM3!</title>
14:<h1>Welcome to VM3 192.168.2.14!</h1>

[root@VM4 ~]# vim /usr/local/nginx/conf/nginx.conf
 12 events {
 13     worker_connections  65535;
 14     use  epoll;
 15 }
 16 
 17 
 18 http {
 36     server {
 37         listen       80;
 38         server_name  localhost;
 39         location  /status  {
 40            stub_status  on;
 41            allow 192.168.4.0/24;
 42            allow  192.168.2.0/24;
 43            deny   all;
 44         }
[root@VM4 ~]# nginx -s reload
------------ss命令可以查看系统中启动的端口信息，该命令常用选项如下：
-a显示所有端口的信息
-n以数字格式显示端口号
-t显示TCP连接的端口
-u显示UDP连接的端口
-l显示服务正在监听的端口信息，如httpd启动后，会一直监听80端口
-p显示监听端口的服务名称是什么（也就是程序名称）
[root@VM4 ~]# ss -ntul |egrep ':80|:3306|:9000|:11211' |column -t
udp  UNCONN  0  0    *:11211         *:*
udp  UNCONN  0  0    *:33064         *:*
udp  UNCONN  0  0    :::11211        :::*
tcp  LISTEN  0  128  *:11211         *:*
tcp  LISTEN  0  128  *:80            *:*
tcp  LISTEN  0  128  127.0.0.1:9000  *:*
tcp  LISTEN  0  50   *:3306          *:*
tcp  LISTEN  0  128  :::11211        :::*
[root@VM4 ~]# sed -n '75s/^.*/#/' /usr/local/nginx/conf/nginx.conf
[root@VM4 ~]# echo $?
0
[root@VM4 ~]# sed -n '75s/^.*/#/p' /usr/local/nginx/conf/nginx.conf
#
[root@VM4 ~]# sed -n  '71,77s/#/*/p' /usr/local/nginx/conf/nginx.conf
        *location ~ \.php$ {
        *    root           html;
        *    fastcgi_pass   127.0.0.1:9000;
        *    fastcgi_index  index.php;
        *    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        *    include        fastcgi_params;
        *}
[root@VM4 ~]# 
[root@VM4 ~]# sed -rn  -e  '75s/#/##/p'  -e  '71,77s/(#){1}//p' /usr/local/nginx/conf/nginx.conf
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
        ##    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }
[root@VM4 ~]# sed -rn  -e  '75s/#/##/p'  /usr/local/nginx/conf/nginx.conf
        ##    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
[root@VM4 ~]# sed -rn   '71,77s/(#){1}//p' /usr/local/nginx/conf/nginx.conf
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }
[root@VM4 ~]# sed -n   '71,77s/(#){1}//p' /usr/local/nginx/conf/nginx.conf
[root@VM4 ~]# sed -rn   '71,77s/(#){1}//p' /usr/local/nginx/conf/nginx.conf
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }
[root@VM4 ~]# sed -rn   '71,77s/#//p' /usr/local/nginx/conf/nginx.conf
        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
            include        fastcgi_params;
        }
[root@VM4 ~]# sed -rn  -e  '75s/^/##/p'  /usr/local/nginx/conf/nginx.conf
]# sed -n '75s/^/##/p' /usr/local/nginx/conf/nginx.conf
##        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
[root@VM4 ~]# vim /etc/php-fpm.d/www.conf 

[root@VM4 ~]# tail -3 /etc/php-fpm.d/www.conf 
php_value[session.save_handler] = memcache
php_value[session.save_path] = "tcp://192.168.2.12:11211"

[root@VM4 ~]# vim /usr/local/nginx/conf/nginx.conf
 71         location ~ \.php$ {
 72             root           html;
 73             fastcgi_pass   127.0.0.1:9000;
 74             fastcgi_index  index.php;
 75         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
 76             include        fastcgi.conf;
 77         }
[root@VM4 ~]# nginx -s reload

[root@VM4 html]# vim index.php
<body bgcolor=green>
<div id="main">
<h1>PHP Login Session VM4 Vm4 </h1>

[root@VM4 html]# vim home.php
Welcome VM4 :  <?php echo $_SESSION['login_user'] ?>
[root@VM4 html]# systemctl restart php-fpm

[root@VM4 local]# ss -nptul |egrep 'tomcat|java'
[root@VM4 local]# yum -y install java-1.8.0-openjdk-headless java-1.8.0-openjdk

[root@VM4 ~]# cd /usr/local/;ls
bin  etc  games  include  lib  lib64  libexec  nginx  sbin  share  src

[root@VM4 local]# tar -xzf /root/lnmp_soft/apache-tomcat-8.0.30.tar.gz 
[root@VM4 local]# ls
apache-tomcat-8.0.30  etc    include  lib64    nginx  share
bin                   games  lib      libexec  sbin   src
[root@VM4 local]# mv apache-tomcat-8.0.30/ tomcat/
[root@VM4 local]# ls
bin  etc  games  include  lib  lib64  libexec  nginx  sbin  share  src  tomcat
[root@VM4 local]# ls tomcat/
bin   lib      logs    RELEASE-NOTES  temp     work
conf  LICENSE  NOTICE  RUNNING.txt    webapps
bin/             //主程序目录
lib/                      //库文件目录
logs/                       //日志目录  
temp/                       //临时目录
work/                  //自动编译目录jsp代码转换servlet
conf/                           //配置文件目录
webapps/                       //页面目录
[root@VM4 local]# ls /usr/local/tomcat/bin/startup.*
/usr/local/tomcat/bin/startup.bat  /usr/local/tomcat/bin/startup.sh
[root@VM4 local]# ls /usr/local/tomcat/bin/startup.sh 
/usr/local/tomcat/bin/startup.sh
[root@VM4 local]# /usr/local/tomcat/bin/startup.sh
...............
Tomcat started.
[root@VM4 local]# ss -nptul |egrep 'tomcat|java'
tcp    LISTEN     0      100      :::8080                 :::*                   users:(("java",pid=6613,fd=46))
tcp    LISTEN     0      1      ::ffff:127.0.0.1:8005                 :::*                   users:(("java",pid=6613,fd=67))
tcp    LISTEN     0      100      :::8009                 :::*                   users:(("java",pid=6613,fd=51))
[root@VM4 local]# pwd
/usr/local

[root@VM4 local]# ll /dev/random 
crw-rw-rw-. 1 root root 1, 8 9月  28 08:28 /dev/random
[root@VM4 local]# ll /dev/urandom 
crw-rw-rw-. 1 root root 1, 9 9月  28 08:28 /dev/urandom
[root@VM4 local]# firefox http://192.168.2.14:8080
[root@VM4 local]# cd /usr/local/tomcat/webapps/ROOT/;ls
asf-logo.png       bg-nav.png    RELEASE-NOTES.txt  tomcat.svg
asf-logo-wide.gif  bg-upper.png  tomcat.css         WEB-INF
bg-button.png      build.xml     tomcat.gif
bg-middle.png      favicon.ico   tomcat.png
bg-nav-item.png    index.jsp     tomcat-power.gif
[root@VM4 ROOT]# vim test.jsp
[root@VM4 ROOT]# cat test.jsp
<html>
<body>
<center>
Now VM4 time is: <%=new java.util.Date()%>
</center>
</body>
</html>
[root@VM4 ROOT]# 
[root@VM4 ROOT]# firefox http://192.168.2.14:8080/test.jsp
 Now VM4 time is: Fri Sep 28 10:52:54 CST 2018 
[root@VM4 ROOT]# elinks -dump http://192.168.2.14:8080/test.jsp
                 Now VM4 time is: Fri Sep 28 10:53:31 CST 2018

[root@VM4 ROOT]# ls /usr/local/tomcat/bin/{startup.sh,shutdown.sh}
/usr/local/tomcat/bin/shutdown.sh  /usr/local/tomcat/bin/startup.sh
[root@VM4 ROOT]# ln -s /usr/local/tomcat/bin/{startup.sh,shutdown.sh} /usr/local/bin/
[root@VM4 ROOT]# ls /usr/local/bin/
shutdown.sh  startup.sh

[root@VM4 ROOT]# ls 
asf-logo.png       bg-nav.png    RELEASE-NOTES.txt  tomcat-power.gif
asf-logo-wide.gif  bg-upper.png  test.jsp           tomcat.svg
bg-button.png      build.xml     tomcat.css         WEB-INF
bg-middle.png      favicon.ico   tomcat.gif
bg-nav-item.png    index.jsp     tomcat.png
[root@VM4 ROOT]# vim index.jsp
 35     <body bgcolor=blue>
 52      <h2>VM4 VM4, you've successfully installed Tomcat. Congratulations!</h2>
[root@VM4 ROOT]# pwd
/usr/local/tomcat/webapps/ROOT
[root@VM4 ~]# ss -anputl |grep 'nginx'
[root@VM4 ~]# 



















